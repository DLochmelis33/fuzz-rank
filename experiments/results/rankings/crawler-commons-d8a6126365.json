[
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.01,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.05,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::<init>()",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::characters(char[], int, int)",
            "crawlercommons.filters.basic.BasicURLNormalizer::unescapePath(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::tokenize(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowed(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapTester::parse(java.net.URL, java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::detect(byte[], int)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleSitemap(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.1,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::<init>()",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::characters(char[], int, int)",
            "crawlercommons.filters.basic.BasicURLNormalizer::unescapePath(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::tokenize(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowed(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapTester::parse(java.net.URL, java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::detect(byte[], int)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleSitemap(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.filters.basic.BasicURLNormalizer::parseQueryParameters(java.lang.String, int, java.util.Set)",
            "crawlercommons.sitemaps.sax.XMLHandler::maybeAddSiteMapUrl()",
            "crawlercommons.sitemaps.SiteMapParser::processXml(java.net.URL, org.xml.sax.InputSource)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleUserAgent(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.filters.basic.BasicURLNormalizer::filter(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::ruleMatches(java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.SiteMapParser::parseSiteMap(java.lang.String, byte[], java.net.URL)",
            "crawlercommons.robots.SimpleRobotRulesParser::parseContent(java.lang.String, byte[], java.lang.String, java.util.Collection, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.SiteMapParser::parseSiteMap(byte[], java.net.URL)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::<init>(java.lang.String, boolean)",
            "crawlercommons.robots.BaseRobotRules::toString()"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.2,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::<init>()",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::characters(char[], int, int)",
            "crawlercommons.filters.basic.BasicURLNormalizer::unescapePath(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::tokenize(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowed(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapTester::parse(java.net.URL, java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::detect(byte[], int)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleSitemap(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.filters.basic.BasicURLNormalizer::parseQueryParameters(java.lang.String, int, java.util.Set)",
            "crawlercommons.sitemaps.sax.XMLHandler::maybeAddSiteMapUrl()",
            "crawlercommons.sitemaps.SiteMapParser::processXml(java.net.URL, org.xml.sax.InputSource)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleUserAgent(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.filters.basic.BasicURLNormalizer::filter(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::ruleMatches(java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.SiteMapParser::parseSiteMap(java.lang.String, byte[], java.net.URL)",
            "crawlercommons.robots.SimpleRobotRulesParser::parseContent(java.lang.String, byte[], java.lang.String, java.util.Collection, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.SiteMapParser::parseSiteMap(byte[], java.net.URL)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::<init>(java.lang.String, boolean)",
            "crawlercommons.robots.BaseRobotRules::toString()",
            "crawlercommons.domains.SuffixTrie::getLongestSuffix(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.extension.LinksHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.DelegatorHandler::startRootElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.SiteMapParser::processText(java.net.URL, java.io.InputStream)",
            "crawlercommons.domains.EffectiveTldFinder::<init>()",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::getNameVariants()",
            "crawlercommons.sitemaps.extension.VideoAttributes::equals(java.lang.Object)",
            "crawlercommons.domains.EffectiveTldFinder::initialize(java.io.InputStream)",
            "crawlercommons.sitemaps.sax.extension.ExtensionHandler::getYesNoBooleanValue(java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.AtomHandler::maybeAddSiteMapUrl()",
            "crawlercommons.mimetypes.MimeTypeDetector::patternMatches(byte[], byte[], int, int)",
            "crawlercommons.sitemaps.sax.RSSHandler::setLocURL()",
            "crawlercommons.filters.basic.BasicURLNormalizer::formatQueryParameters(java.util.List)",
            "crawlercommons.sitemaps.extension.VideoAttributes.VideoPrice::equals(java.lang.Object)",
            "crawlercommons.domains.SuffixTrie::getSuffixes(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.robots.SimpleRobotRules::toString()",
            "crawlercommons.sitemaps.extension.NewsAttributes::toString()",
            "crawlercommons.sitemaps.extension.NewsAttributes::asMap()",
            "crawlercommons.sitemaps.SiteMapURL::setChangeFrequency(java.lang.String)",
            "crawlercommons.filters.basic.BasicURLNormalizer::escapePath(java.lang.String)",
            "crawlercommons.sitemaps.sax.AtomHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.AbstractSiteMap::convertToZonedDateTime(java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::main(java.lang.String[])",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::toString()",
            "crawlercommons.sitemaps.extension.VideoAttributes::toString()",
            "crawlercommons.domains.PaidLevelDomain::getPLD(java.lang.String)",
            "crawlercommons.domains.SuffixTrie::put(java.lang.String, java.lang.Object)",
            "crawlercommons.sitemaps.sax.XMLHandler::getExtensionHandler(java.lang.String)",
            "crawlercommons.sitemaps.SiteMapURL::equals(java.lang.Object)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::<init>()",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::characters(char[], int, int)",
            "crawlercommons.robots.SimpleRobotRulesParser::tokenize(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowed(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapTester::parse(java.net.URL, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleSitemap(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::<init>()",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::characters(char[], int, int)",
            "crawlercommons.robots.SimpleRobotRulesParser::tokenize(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowed(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapTester::parse(java.net.URL, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleSitemap(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLHandler::maybeAddSiteMapUrl()",
            "crawlercommons.robots.SimpleRobotRulesParser::handleUserAgent(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.filters.basic.BasicURLNormalizer::filter(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::parseContent(java.lang.String, byte[], java.lang.String, java.util.Collection, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.robots.BaseRobotRules::toString()"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::<init>()",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::characters(char[], int, int)",
            "crawlercommons.robots.SimpleRobotRulesParser::tokenize(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowed(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapTester::parse(java.net.URL, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleSitemap(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLHandler::maybeAddSiteMapUrl()",
            "crawlercommons.robots.SimpleRobotRulesParser::handleUserAgent(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.filters.basic.BasicURLNormalizer::filter(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::parseContent(java.lang.String, byte[], java.lang.String, java.util.Collection, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.robots.BaseRobotRules::toString()",
            "crawlercommons.domains.SuffixTrie::getLongestSuffix(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.extension.LinksHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.DelegatorHandler::startRootElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.extension.VideoAttributes::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.extension.ExtensionHandler::getYesNoBooleanValue(java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.RSSHandler::setLocURL()",
            "crawlercommons.sitemaps.extension.VideoAttributes.VideoPrice::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.extension.NewsAttributes::toString()",
            "crawlercommons.sitemaps.extension.NewsAttributes::asMap()",
            "crawlercommons.sitemaps.sax.AtomHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.AbstractSiteMap::convertToZonedDateTime(java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::main(java.lang.String[])",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::toString()",
            "crawlercommons.sitemaps.extension.VideoAttributes::toString()",
            "crawlercommons.domains.PaidLevelDomain::getPLD(java.lang.String)",
            "crawlercommons.sitemaps.SiteMapURL::equals(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.domains.EffectiveTldFinder::main(java.lang.String[])",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.SuffixTrie::getLongestSuffix(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.LinksHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.extension.VideoAttributes::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.extension.ExtensionHandler::getYesNoBooleanValue(java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::equals(java.lang.Object)",
            "crawlercommons.sitemaps.extension.VideoAttributes.VideoPrice::equals(java.lang.Object)",
            "crawlercommons.sitemaps.extension.NewsAttributes::toString()",
            "crawlercommons.sitemaps.extension.NewsAttributes::asMap()",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::toString()",
            "crawlercommons.sitemaps.extension.VideoAttributes::toString()",
            "crawlercommons.sitemaps.SiteMapURL::equals(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.sitemaps.AbstractSiteMap::convertToDate(java.lang.String)",
            "crawlercommons.domains.PaidLevelDomain::getPLD(java.net.URL)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapParser::<init>(boolean)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "crawlercommons.domains.PaidLevelDomain::getPLD(java.net.URL)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.extension.VideoAttributes.VideoPrice::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::equals(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.sitemaps.extension.VideoAttributes::equals(java.lang.Object)",
            "crawlercommons.sitemaps.SiteMapURL::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.extension.ExtensionHandler::getYesNoBooleanValue(java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::toString()",
            "crawlercommons.sitemaps.extension.VideoAttributes::toString()",
            "crawlercommons.domains.SuffixTrie::getLongestSuffix(java.lang.String)",
            "crawlercommons.sitemaps.extension.NewsAttributes::asMap()",
            "crawlercommons.sitemaps.extension.NewsAttributes::toString()",
            "crawlercommons.domains.EffectiveTldFinder::main(java.lang.String[])",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.sitemaps.sax.extension.LinksHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.AbstractSiteMap::convertToDate(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)"
        ]
    }
]