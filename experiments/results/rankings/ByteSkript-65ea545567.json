[
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, boolean)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, boolean)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.compiler.structure.PropertyAccessGenerator::compile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.api.SyntaxAnnotationUnwrapper::generateSyntaxFrom(java.lang.Class)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleExpression(java.lang.String, mx.kenzie.foundation.Type, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.compiler.FileContext::useHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.Skript::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript.Test::test(java.nio.file.Path)",
            "org.byteskript.skript.compiler.SkriptLangSpec::getRuntime()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.type.property.EntryProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.BridgeCompiler::extractVarArguments(java.lang.Class[], java.lang.Class[], org.objectweb.asm.MethodVisitor, int)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File, java.io.File)",
            "org.byteskript.skript.runtime.Skript::getOperatorFunction(org.byteskript.skript.runtime.type.OperatorFunction.Type, java.lang.Class, java.lang.Class)",
            "org.byteskript.skript.runtime.Skript::compileLoadScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Script::<init>(boolean, org.byteskript.skript.runtime.Skript, java.io.File, java.lang.Class[])",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::compile()",
            "org.byteskript.skript.compiler.SkriptLangSpec::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.compiler.ElementTree::compile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::preCompile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::toString(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.Pattern::handle(java.lang.String)",
            "org.byteskript.skript.lang.syntax.type.MemberType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunAsync::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.Script::load(org.byteskript.skript.runtime.Skript)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, boolean)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.compiler.structure.PropertyAccessGenerator::compile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.api.SyntaxAnnotationUnwrapper::generateSyntaxFrom(java.lang.Class)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleExpression(java.lang.String, mx.kenzie.foundation.Type, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.compiler.FileContext::useHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.Skript::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript.Test::test(java.nio.file.Path)",
            "org.byteskript.skript.compiler.SkriptLangSpec::getRuntime()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.type.property.EntryProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.BridgeCompiler::extractVarArguments(java.lang.Class[], java.lang.Class[], org.objectweb.asm.MethodVisitor, int)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File, java.io.File)",
            "org.byteskript.skript.runtime.Skript::getOperatorFunction(org.byteskript.skript.runtime.type.OperatorFunction.Type, java.lang.Class, java.lang.Class)",
            "org.byteskript.skript.runtime.Skript::compileLoadScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Script::<init>(boolean, org.byteskript.skript.runtime.Skript, java.io.File, java.lang.Class[])",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::compile()",
            "org.byteskript.skript.compiler.SkriptLangSpec::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.compiler.ElementTree::compile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::preCompile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::toString(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.Pattern::handle(java.lang.String)",
            "org.byteskript.skript.lang.syntax.type.MemberType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunAsync::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.Script::load(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseLine(java.lang.String, org.byteskript.skript.compiler.FileContext)",
            "org.byteskript.skript.runtime.Skript::getClassName(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.runtime.config.ConfigEntry::write(java.io.OutputStream)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::getParams(java.lang.String)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::getParams(java.lang.String)",
            "org.byteskript.skript.runtime.Skript::findAnyClass(java.lang.String)",
            "org.byteskript.skript.runtime.internal.EventHandler::run(org.byteskript.skript.runtime.Skript, org.byteskript.skript.api.Event)",
            "org.byteskript.skript.api.automatic.GeneratedEntrySection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.runtime.internal.EventHandler::run(org.byteskript.skript.runtime.Skript, org.byteskript.skript.api.Event, org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.literal.StringLiteral::parse(java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.dictionary.EffectUseLibrary::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.compiler.Pattern::convert(org.byteskript.skript.compiler.Context, java.lang.String[])",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.io.InputStream, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.comparison.ExprNotEqual::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::addSkriptFunctions()",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprRunnableSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprSupplierSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopInSection::compileTogether(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.LoopTree, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.syntax.ExtractedSection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.comparison.ExprIsOfType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::runEvent(org.byteskript.skript.api.Event, org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.runtime.Skript::getConverter(java.lang.Class, java.lang.Class)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.FileContext::getFunction(java.lang.String, int)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.comparison.ExprExists::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.UnsafeAccessor::graveyard(java.lang.Object)",
            "org.byteskript.skript.app.ScriptDebugger::debug(java.io.File)",
            "org.byteskript.skript.compiler.BridgeCompiler::getWrapperType(java.lang.Class)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopTimesSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.control.EffectDelete::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.compiler.Pattern::match(java.lang.String, org.byteskript.skript.compiler.Context, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::parameters(org.byteskript.skript.compiler.Context, java.util.regex.Matcher)",
            "org.byteskript.skript.lang.syntax.entry.EntryParameters::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntax::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.InlineController::prepareVariables(java.lang.reflect.Method)",
            "org.byteskript.skript.lang.syntax.comparison.ExprContains::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, boolean)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.compiler.structure.PropertyAccessGenerator::compile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.api.SyntaxAnnotationUnwrapper::generateSyntaxFrom(java.lang.Class)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleExpression(java.lang.String, mx.kenzie.foundation.Type, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.compiler.FileContext::useHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.Skript::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript.Test::test(java.nio.file.Path)",
            "org.byteskript.skript.compiler.SkriptLangSpec::getRuntime()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.type.property.EntryProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.BridgeCompiler::extractVarArguments(java.lang.Class[], java.lang.Class[], org.objectweb.asm.MethodVisitor, int)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File, java.io.File)",
            "org.byteskript.skript.runtime.Skript::getOperatorFunction(org.byteskript.skript.runtime.type.OperatorFunction.Type, java.lang.Class, java.lang.Class)",
            "org.byteskript.skript.runtime.Skript::compileLoadScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Script::<init>(boolean, org.byteskript.skript.runtime.Skript, java.io.File, java.lang.Class[])",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::compile()",
            "org.byteskript.skript.compiler.SkriptLangSpec::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.compiler.ElementTree::compile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::preCompile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::toString(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.Pattern::handle(java.lang.String)",
            "org.byteskript.skript.lang.syntax.type.MemberType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunAsync::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.Script::load(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseLine(java.lang.String, org.byteskript.skript.compiler.FileContext)",
            "org.byteskript.skript.runtime.Skript::getClassName(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.runtime.config.ConfigEntry::write(java.io.OutputStream)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::getParams(java.lang.String)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::getParams(java.lang.String)",
            "org.byteskript.skript.runtime.Skript::findAnyClass(java.lang.String)",
            "org.byteskript.skript.runtime.internal.EventHandler::run(org.byteskript.skript.runtime.Skript, org.byteskript.skript.api.Event)",
            "org.byteskript.skript.api.automatic.GeneratedEntrySection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.runtime.internal.EventHandler::run(org.byteskript.skript.runtime.Skript, org.byteskript.skript.api.Event, org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.literal.StringLiteral::parse(java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.dictionary.EffectUseLibrary::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.compiler.Pattern::convert(org.byteskript.skript.compiler.Context, java.lang.String[])",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.io.InputStream, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.comparison.ExprNotEqual::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::addSkriptFunctions()",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprRunnableSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprSupplierSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopInSection::compileTogether(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.LoopTree, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.syntax.ExtractedSection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.comparison.ExprIsOfType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::runEvent(org.byteskript.skript.api.Event, org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.runtime.Skript::getConverter(java.lang.Class, java.lang.Class)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.FileContext::getFunction(java.lang.String, int)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.comparison.ExprExists::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.UnsafeAccessor::graveyard(java.lang.Object)",
            "org.byteskript.skript.app.ScriptDebugger::debug(java.io.File)",
            "org.byteskript.skript.compiler.BridgeCompiler::getWrapperType(java.lang.Class)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopTimesSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.control.EffectDelete::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.compiler.Pattern::match(java.lang.String, org.byteskript.skript.compiler.Context, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::parameters(org.byteskript.skript.compiler.Context, java.util.regex.Matcher)",
            "org.byteskript.skript.lang.syntax.entry.EntryParameters::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntax::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.InlineController::prepareVariables(java.lang.reflect.Method)",
            "org.byteskript.skript.lang.syntax.comparison.ExprContains::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::getSource(java.lang.Class)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.api.syntax.EventHolder::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.timing.MemberEvery::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::createDummy(java.lang.String, int, java.util.regex.Matcher)",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.lang.syntax.type.ExprType::getType(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableAtomic::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.Skript::runEvent(org.byteskript.skript.api.Event)",
            "org.byteskript.skript.lang.syntax.type.property.EntryLocal::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.SyntaxAnnotationUnwrapper::registerValues(org.byteskript.skript.api.syntax.EventHolder)",
            "org.byteskript.skript.lang.syntax.type.MemberTemplateType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableAtomic::<init>()",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableGlobal::<init>()",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableThread::<init>()",
            "org.byteskript.skript.api.syntax.RelationalExpression::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::extractSimpleArguments(int, java.lang.Class[], java.lang.Class[], org.objectweb.asm.MethodVisitor)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.DebugSkriptCompiler::compileLine(java.lang.String, org.byteskript.skript.compiler.FileContext)",
            "org.byteskript.skript.runtime.config.ConfigMap::set(java.lang.String, org.byteskript.skript.runtime.config.ConfigMap, java.lang.String)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::buildDummyPattern(java.lang.String, int, java.lang.String)",
            "org.byteskript.skript.lang.syntax.function.ExprFunction::getParams(java.lang.String)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::getParams(java.lang.String)",
            "org.byteskript.skript.compiler.BridgeCompiler::instructionOffset(java.lang.Class)",
            "org.byteskript.skript.lang.syntax.entry.EntryExtends::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.EntryTemplate::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.type.property.EntryType::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopTimesSection::compileInline(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.ExprFunction::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableGlobal::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableThread::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.error.ScriptParseError::printStackTrace(org.byteskript.skript.error.ScriptError.OutputWriter)",
            "org.byteskript.skript.lang.syntax.function.ExprFunction::buildDummyPattern(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::buildDummyPattern(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::buildDummyPattern(int, java.lang.String)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getHandle(java.lang.reflect.Method)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableAtomic::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableGlobal::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableThread::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.config.EffectSaveConfig::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.FileContext::getType(java.lang.String)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compileLine(java.lang.String, org.byteskript.skript.compiler.FileContext)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::getClass(java.lang.String)",
            "org.byteskript.skript.api.syntax.SimpleExpression::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.Skript.RuntimeClassLoader::findClass(java.lang.String)",
            "org.byteskript.skript.lang.syntax.maths.SymbolJoiner::createVariants(java.lang.String)",
            "org.byteskript.skript.lang.syntax.event.ExprCurrentEvent::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "unsafe::mirror(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.entry.EntryTriggerSection::prepareVariables(org.byteskript.skript.compiler.structure.TriggerTree)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.api.syntax.Effect::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.Skript.RuntimeClassLoader::loadClass(java.lang.String)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.api.syntax.EventValueExpression::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.generic.ExprTernaryOtherwise::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.list.ExprIndexOfList::<init>()",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.api.SyntaxElement::prepareExpectedTypes(org.byteskript.skript.compiler.Context, java.lang.reflect.Method)",
            "org.byteskript.skript.lang.syntax.flow.conditional.IfSection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.flow.EffectAssert::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.literal.RegexLiteral::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.Context::destroySection()",
            "org.byteskript.skript.lang.syntax.comparison.ExprNotEqual::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.control.EffectDelete::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.syntax.Literal::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.literal.StringLiteral::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::addObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.BridgeCompiler::unbox(org.objectweb.asm.MethodVisitor, java.lang.Class)",
            "org.byteskript.skript.lang.syntax.config.ExprConfigFileSection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.flow.conditional.ElseIfSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.entry.EntryVerifySection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::parameterNames(org.byteskript.skript.compiler.Context, java.util.regex.Matcher)",
            "org.byteskript.skript.lang.syntax.literal.DoubleLiteral::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.literal.FloatLiteral::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.literal.IntegerLiteral::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.literal.LongLiteral::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprSupplierSection::extractVariables(org.byteskript.skript.compiler.Context, mx.kenzie.foundation.MethodBuilder, mx.kenzie.foundation.MethodBuilder)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.literal.StringLiteral::matches(java.lang.String)",
            "org.byteskript.skript.lang.syntax.entry.EntryParameters::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.EntryReturn::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntaxEffect::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntaxExpression::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntaxMode::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntaxProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.BridgeCompiler::boxAtomic(org.objectweb.asm.MethodVisitor, java.lang.Class)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWithAsync::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.config.ConfigMap::add(java.lang.String, org.byteskript.skript.runtime.config.ConfigMap)",
            "org.byteskript.skript.api.automatic.GeneratedEntryNode::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.comparison.ExprIsEqual::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.EntryTriggerSection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.flow.EffectReturn::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.WeakList::collectRemaining()",
            "org.byteskript.skript.runtime.Skript::compileComplexScript(java.io.InputStream, java.lang.String, java.io.File)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.config.ExprConfigFileSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.dictionary.EffectImportFunction::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.dictionary.EffectImportType::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunAsync::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.type.property.EntryProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.BridgeCompiler::box(org.objectweb.asm.MethodVisitor, java.lang.Class)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.ExprResult::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectWhileSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.runtime.config.ConfigMap::set(java.lang.String, org.byteskript.skript.runtime.config.ConfigMap, java.lang.String)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.Skript.RuntimeClassLoader::loadClass(java.lang.String)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::addObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::getListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.config.ConfigMap::deleteMapValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ScriptClassLoader::loadClass(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::getListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::setMapValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.ScriptClassLoader::loadClass(java.lang.String)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)"
        ]
    }
]