[
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.util.WriterReportImpl::message(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.util.WriterReportImpl::message(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "org.idpf.epubcheck.util.css.CssScanner::_string()",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.OPFHandler30::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssEscape::create()",
            "com.adobe.epubcheck.opf.OPFHandler30::processLink()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReferenceType(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.opf.OPFHandler30::endElement()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkImage(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.vocab.VocabUtil::parseProperties(java.lang.String, java.util.Map, boolean, com.adobe.epubcheck.opf.ValidationContext, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkMimetypeFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.css.CSSHandler::declaration(org.idpf.epubcheck.util.css.CssGrammar.CssDeclaration)",
            "com.adobe.epubcheck.reporting.ItemMetadata::handleInfo(com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkContent()",
            "com.adobe.epubcheck.util.SourceSet.Parser::parse(java.lang.CharSequence)",
            "com.adobe.epubcheck.tool.EpubChecker::validateFile(java.lang.String, com.adobe.epubcheck.util.EPUBVersion, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::startElement()",
            "org.w3c.epubcheck.core.references.URLChecker::resolveURL(java.lang.String, boolean, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.SourceSet.Parser::finalizeSource(java.lang.StringBuilder, java.util.List)",
            "com.adobe.epubcheck.reporting.PublicationMetadata::handleInfo(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::handleAtRule(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::getImageSizes()",
            "com.adobe.epubcheck.opf.OPFHandler::startElement()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFHandler::endElement()",
            "com.adobe.epubcheck.ocf.OCFZipChecker::check()",
            "org.idpf.epubcheck.util.css.CssScanner::scan()",
            "com.adobe.epubcheck.util.Archive::createArchive()",
            "com.adobe.epubcheck.util.DateParser::getCalendar(java.lang.String)",
            "com.adobe.epubcheck.vocab.PrefixDeclarationParser::parsePrefixMappings(java.lang.String, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateReport()",
            "com.adobe.epubcheck.xml.XMLParser::process()",
            "com.adobe.epubcheck.tool.EpubChecker::processArguments(java.lang.String[])",
            "com.adobe.epubcheck.util.XmlReportImpl::generateReport()",
            "com.adobe.epubcheck.util.ReportingLevel::getReportingLevel(com.adobe.epubcheck.messages.Severity)",
            "com.adobe.epubcheck.ops.OPSHandler::checkHRef(java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createAttributeSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.util.WriterReportImpl::message(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "org.idpf.epubcheck.util.css.CssScanner::_string()",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.OPFHandler30::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssEscape::create()",
            "com.adobe.epubcheck.opf.OPFHandler30::processLink()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReferenceType(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.opf.OPFHandler30::endElement()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkImage(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.vocab.VocabUtil::parseProperties(java.lang.String, java.util.Map, boolean, com.adobe.epubcheck.opf.ValidationContext, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkMimetypeFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.css.CSSHandler::declaration(org.idpf.epubcheck.util.css.CssGrammar.CssDeclaration)",
            "com.adobe.epubcheck.reporting.ItemMetadata::handleInfo(com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkContent()",
            "com.adobe.epubcheck.util.SourceSet.Parser::parse(java.lang.CharSequence)",
            "com.adobe.epubcheck.tool.EpubChecker::validateFile(java.lang.String, com.adobe.epubcheck.util.EPUBVersion, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::startElement()",
            "org.w3c.epubcheck.core.references.URLChecker::resolveURL(java.lang.String, boolean, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.SourceSet.Parser::finalizeSource(java.lang.StringBuilder, java.util.List)",
            "com.adobe.epubcheck.reporting.PublicationMetadata::handleInfo(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::handleAtRule(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::getImageSizes()",
            "com.adobe.epubcheck.opf.OPFHandler::startElement()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFHandler::endElement()",
            "com.adobe.epubcheck.ocf.OCFZipChecker::check()",
            "org.idpf.epubcheck.util.css.CssScanner::scan()",
            "com.adobe.epubcheck.util.Archive::createArchive()",
            "com.adobe.epubcheck.util.DateParser::getCalendar(java.lang.String)",
            "com.adobe.epubcheck.vocab.PrefixDeclarationParser::parsePrefixMappings(java.lang.String, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateReport()",
            "com.adobe.epubcheck.xml.XMLParser::process()",
            "com.adobe.epubcheck.tool.EpubChecker::processArguments(java.lang.String[])",
            "com.adobe.epubcheck.util.XmlReportImpl::generateReport()",
            "com.adobe.epubcheck.util.ReportingLevel::getReportingLevel(com.adobe.epubcheck.messages.Severity)",
            "com.adobe.epubcheck.ops.OPSHandler::checkHRef(java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createAttributeSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)",
            "com.adobe.epubcheck.opf.OPFHandler30::processItemProperties(com.adobe.epubcheck.opf.OPFItem.Builder, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.css.CSSHandler::checkProperties()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkSpineItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createTypeSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkPagination()",
            "com.adobe.epubcheck.css.CSSChecker::getCssSource()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkDictCollection(com.adobe.epubcheck.opf.ResourceCollection)",
            "com.adobe.epubcheck.xml.XMLEncodingSniffer::sniffEncoding(java.io.InputStream)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateEventOutcome(java.util.List, java.lang.String)",
            "com.adobe.epubcheck.dtbook.DTBookHandler::startElement()",
            "org.idpf.epubcheck.util.css.CssScanner::_num()",
            "com.adobe.epubcheck.ops.OPSHandler30::processMeta()",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkHeader(byte[])",
            "com.adobe.epubcheck.ocf.OCFEncryptionFileHandler::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkNav()",
            "com.adobe.epubcheck.tool.EpubChecker::printEpubCheckCompleted(com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.tool.EpubChecker::run(java.lang.String[])",
            "com.adobe.epubcheck.ocf.OCFChecker::check()",
            "org.w3c.epubcheck.util.url.URLUtils::isSameOrigin(io.mola.galimatias.URL, io.mola.galimatias.URL)",
            "com.adobe.epubcheck.util.XmlReportAbstract::generate()",
            "com.adobe.epubcheck.opf.FallbackChainResolver::resolve()",
            "com.adobe.epubcheck.tool.EpubChecker::processFile(com.adobe.epubcheck.api.Report)",
            "org.w3c.epubcheck.util.microsyntax.ViewportMeta.Parser::parse(java.lang.CharSequence)",
            "com.adobe.epubcheck.util.XmlReportAbstract::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler::startElement()",
            "com.adobe.epubcheck.ocf.OCFChecker::checkContainerStructure(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.messages.OverriddenMessages::loadOverriddenMessageSeverities()",
            "com.adobe.epubcheck.messages.OverriddenMessages::checkMessageForParameterCount(int, int, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.vocab.Property::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFFilenameChecker::toString(int, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::handleRuleSet(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkProperties()",
            "com.adobe.epubcheck.util.DefaultReportImpl::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.util.WriterReportImpl::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.vocab.VocabUtil::parsePrefixDeclaration(java.lang.String, java.util.Map, java.util.Map, java.util.Set, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkUndeclaredReference(org.w3c.epubcheck.core.references.Reference)",
            "com.adobe.epubcheck.api.EpubCheck::version()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkDiscouragedElements()",
            "com.adobe.epubcheck.ops.OPSHandler::endElement()",
            "org.idpf.epubcheck.util.css.CssParser::handleDeclarationBlock(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "org.idpf.epubcheck.util.css.CssScanner::forwardMatch(java.lang.String, boolean, boolean)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReadingOrder(java.util.Queue)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createPseudoSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ocf.OCFFilenameChecker::check()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkItemAfterResourceValidation(com.adobe.epubcheck.opf.OPFItem)",
            "com.adobe.epubcheck.tool.EpubChecker::dumpMessageDictionary(com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.ocf.OCFZipResources::getSHAHash(java.util.zip.ZipEntry, java.util.zip.ZipFile)",
            "com.adobe.epubcheck.ops.OPSHandler30::isPalpable()"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.util.WriterReportImpl::message(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "org.idpf.epubcheck.util.css.CssScanner::_string()",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.OPFHandler30::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssEscape::create()",
            "com.adobe.epubcheck.opf.OPFHandler30::processLink()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReferenceType(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.opf.OPFHandler30::endElement()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkImage(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.vocab.VocabUtil::parseProperties(java.lang.String, java.util.Map, boolean, com.adobe.epubcheck.opf.ValidationContext, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkMimetypeFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.css.CSSHandler::declaration(org.idpf.epubcheck.util.css.CssGrammar.CssDeclaration)",
            "com.adobe.epubcheck.reporting.ItemMetadata::handleInfo(com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkContent()",
            "com.adobe.epubcheck.util.SourceSet.Parser::parse(java.lang.CharSequence)",
            "com.adobe.epubcheck.tool.EpubChecker::validateFile(java.lang.String, com.adobe.epubcheck.util.EPUBVersion, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::startElement()",
            "org.w3c.epubcheck.core.references.URLChecker::resolveURL(java.lang.String, boolean, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.SourceSet.Parser::finalizeSource(java.lang.StringBuilder, java.util.List)",
            "com.adobe.epubcheck.reporting.PublicationMetadata::handleInfo(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::handleAtRule(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::getImageSizes()",
            "com.adobe.epubcheck.opf.OPFHandler::startElement()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFHandler::endElement()",
            "com.adobe.epubcheck.ocf.OCFZipChecker::check()",
            "org.idpf.epubcheck.util.css.CssScanner::scan()",
            "com.adobe.epubcheck.util.Archive::createArchive()",
            "com.adobe.epubcheck.util.DateParser::getCalendar(java.lang.String)",
            "com.adobe.epubcheck.vocab.PrefixDeclarationParser::parsePrefixMappings(java.lang.String, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateReport()",
            "com.adobe.epubcheck.xml.XMLParser::process()",
            "com.adobe.epubcheck.tool.EpubChecker::processArguments(java.lang.String[])",
            "com.adobe.epubcheck.util.XmlReportImpl::generateReport()",
            "com.adobe.epubcheck.util.ReportingLevel::getReportingLevel(com.adobe.epubcheck.messages.Severity)",
            "com.adobe.epubcheck.ops.OPSHandler::checkHRef(java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createAttributeSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)",
            "com.adobe.epubcheck.opf.OPFHandler30::processItemProperties(com.adobe.epubcheck.opf.OPFItem.Builder, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.css.CSSHandler::checkProperties()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkSpineItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createTypeSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkPagination()",
            "com.adobe.epubcheck.css.CSSChecker::getCssSource()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkDictCollection(com.adobe.epubcheck.opf.ResourceCollection)",
            "com.adobe.epubcheck.xml.XMLEncodingSniffer::sniffEncoding(java.io.InputStream)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateEventOutcome(java.util.List, java.lang.String)",
            "com.adobe.epubcheck.dtbook.DTBookHandler::startElement()",
            "org.idpf.epubcheck.util.css.CssScanner::_num()",
            "com.adobe.epubcheck.ops.OPSHandler30::processMeta()",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkHeader(byte[])",
            "com.adobe.epubcheck.ocf.OCFEncryptionFileHandler::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkNav()",
            "com.adobe.epubcheck.tool.EpubChecker::printEpubCheckCompleted(com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.tool.EpubChecker::run(java.lang.String[])",
            "com.adobe.epubcheck.ocf.OCFChecker::check()",
            "org.w3c.epubcheck.util.url.URLUtils::isSameOrigin(io.mola.galimatias.URL, io.mola.galimatias.URL)",
            "com.adobe.epubcheck.util.XmlReportAbstract::generate()",
            "com.adobe.epubcheck.opf.FallbackChainResolver::resolve()",
            "com.adobe.epubcheck.tool.EpubChecker::processFile(com.adobe.epubcheck.api.Report)",
            "org.w3c.epubcheck.util.microsyntax.ViewportMeta.Parser::parse(java.lang.CharSequence)",
            "com.adobe.epubcheck.util.XmlReportAbstract::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler::startElement()",
            "com.adobe.epubcheck.ocf.OCFChecker::checkContainerStructure(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.messages.OverriddenMessages::loadOverriddenMessageSeverities()",
            "com.adobe.epubcheck.messages.OverriddenMessages::checkMessageForParameterCount(int, int, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.vocab.Property::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFFilenameChecker::toString(int, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::handleRuleSet(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkProperties()",
            "com.adobe.epubcheck.util.DefaultReportImpl::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.util.WriterReportImpl::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.vocab.VocabUtil::parsePrefixDeclaration(java.lang.String, java.util.Map, java.util.Map, java.util.Set, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkUndeclaredReference(org.w3c.epubcheck.core.references.Reference)",
            "com.adobe.epubcheck.api.EpubCheck::version()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkDiscouragedElements()",
            "com.adobe.epubcheck.ops.OPSHandler::endElement()",
            "org.idpf.epubcheck.util.css.CssParser::handleDeclarationBlock(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "org.idpf.epubcheck.util.css.CssScanner::forwardMatch(java.lang.String, boolean, boolean)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReadingOrder(java.util.Queue)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createPseudoSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ocf.OCFFilenameChecker::check()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkItemAfterResourceValidation(com.adobe.epubcheck.opf.OPFItem)",
            "com.adobe.epubcheck.tool.EpubChecker::dumpMessageDictionary(com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.ocf.OCFZipResources::getSHAHash(java.util.zip.ZipEntry, java.util.zip.ZipFile)",
            "com.adobe.epubcheck.ops.OPSHandler30::isPalpable()",
            "com.adobe.epubcheck.api.EpubCheck::<init>(java.io.InputStream, com.adobe.epubcheck.api.Report, java.lang.String, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.util.DateParserTest::testisISO8601Date()",
            "org.idpf.epubcheck.util.css.CssScanner::_atkeyword()",
            "com.adobe.epubcheck.util.XmlReportAbstract::getNameFromPath(java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFContainerFileHandler::processRootFile()",
            "com.adobe.epubcheck.overlay.OverlayHandler::checkTime(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkPublicationProfile(com.adobe.epubcheck.ocf.OCFCheckerState, com.adobe.epubcheck.util.EPUBVersion)",
            "com.adobe.epubcheck.ocf.OCFExtensionChecker::check()",
            "com.adobe.epubcheck.ops.OPSHandler30::processLink()",
            "org.idpf.epubcheck.util.css.CssScanner::_comment()",
            "org.idpf.epubcheck.util.css.CssScanner::_urange()",
            "org.idpf.epubcheck.util.css.CssParser::parse(java.io.Reader, java.lang.String, org.idpf.epubcheck.util.css.CssErrorHandler, org.idpf.epubcheck.util.css.CssContentHandler)",
            "com.adobe.epubcheck.api.MasterReport::message(com.adobe.epubcheck.messages.MessageId, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.css.CSSHandler::startAtRule(org.idpf.epubcheck.util.css.CssGrammar.CssAtRule)",
            "org.w3c.epubcheck.util.url.URLUtils::encodePath(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssURI::toUriString()",
            "com.adobe.epubcheck.reporting.CheckingReport::setParameters()",
            "com.adobe.epubcheck.overlay.SmilClock::toString(int)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkFragment(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "org.w3c.epubcheck.util.url.URLFragment.Parser::parseSVGFragment(java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::isScriptType(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssInputStream::getCssCharset(java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources::iterator()",
            "com.adobe.epubcheck.opf.ValidationContext::getMimeType(io.mola.galimatias.URL)",
            "com.adobe.epubcheck.util.DateParser::checkValueAndNext(java.util.StringTokenizer, java.lang.String)",
            "com.adobe.epubcheck.util.XmlReportImpl::generateProperty(java.lang.String, java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::hasRuleSet(org.idpf.epubcheck.util.css.CssGrammar.CssAtRule, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator)",
            "com.adobe.epubcheck.opf.OPFHandler::reportItem(com.adobe.epubcheck.opf.OPFItem)",
            "com.adobe.epubcheck.opf.OPFHandler30::reportItem(com.adobe.epubcheck.opf.OPFItem)",
            "com.adobe.epubcheck.css.CSSHandler::findClassName(org.idpf.epubcheck.util.css.CssGrammar.CssConstruct, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_quantity()",
            "com.adobe.epubcheck.opf.MetadataSet.Builder::build(com.adobe.epubcheck.opf.MetadataSet.Metadata)",
            "com.adobe.epubcheck.css.CSSHandler::resolveAndRegister(java.lang.String, int, int, java.lang.String, org.w3c.epubcheck.core.references.Reference.Type)",
            "com.adobe.epubcheck.nav.NavHandler::startElement()",
            "com.adobe.epubcheck.nav.NavHandler::checkTypes(java.util.Set)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkFallbacks(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkMediaOverlaysDuration()",
            "com.adobe.epubcheck.css.CSSHandler::handleFontFaceInfo()",
            "com.adobe.epubcheck.opf.OPFHandler30::processMeta()",
            "com.adobe.epubcheck.overlay.OverlayHandler::startElement()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkRemoteReference(org.w3c.epubcheck.core.references.Reference, java.util.Optional)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::getTempImageFile(com.adobe.epubcheck.ocf.OCFContainer, io.mola.galimatias.URL)",
            "com.adobe.epubcheck.css.CSSChecker::checkContent()",
            "com.adobe.epubcheck.vocab.VocabUtil::parseProperty(java.lang.String, java.util.Map, com.adobe.epubcheck.opf.ValidationContext, com.adobe.epubcheck.api.EPUBLocation)",
            "org.idpf.epubcheck.util.css.CssScanner::_ws()",
            "com.adobe.epubcheck.vocab.EnumVocab::<init>(java.lang.Class, com.google.common.base.CaseFormat, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.api.EPUBLocation::compareTo(com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.CheckUtil::readBytes(java.io.InputStream, byte[], int, int)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkOtherMetaFiles(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "org.idpf.epubcheck.util.css.CssScanner::append(com.google.common.base.CharMatcher, org.idpf.epubcheck.util.css.CssToken.TokenBuilder)",
            "com.adobe.epubcheck.util.XmlReportAbstract::message(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.opf.OPFChecker::checkSpineItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.reporting.CheckingReport::getJsonReport(java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker30::isCoreMediaType(java.lang.String)",
            "com.adobe.epubcheck.util.Archive::getCRC(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::handleDeclaration(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler, boolean)",
            "com.adobe.epubcheck.opf.OPFItem::<init>(com.adobe.epubcheck.opf.OPFItem.Builder)",
            "com.adobe.epubcheck.xml.XMLValidator::<init>(java.lang.String, boolean)",
            "com.adobe.epubcheck.overlay.SmilClock::equals(java.lang.Object)",
            "com.adobe.epubcheck.vocab.Property::filter(java.util.Set, java.lang.Class)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "org.w3c.epubcheck.util.url.URLFragment::equals(java.lang.Object)",
            "com.adobe.epubcheck.ops.OPSHandler30::registerMediaResource(io.mola.galimatias.URL, java.lang.String, boolean)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createCombinator(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.MetadataSet.Builder::meta(java.lang.String, com.adobe.epubcheck.vocab.Property, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.util.DefaultReportImpl::formatMessage(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.util.XmlReportAbstract::makeElement(java.lang.String)",
            "com.adobe.epubcheck.xml.handlers.ReportingErrorHandler::error(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.opf.ValidationContext::<init>(com.adobe.epubcheck.opf.ValidationContext.ValidationContextBuilder)",
            "com.adobe.epubcheck.overlay.OverlayHandler::processAudioSrc()",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkType(java.lang.String)",
            "com.adobe.epubcheck.util.Archive::collectFiles(java.io.File, java.lang.String)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkImageDimensions()",
            "com.adobe.epubcheck.util.JsonWriter::createJsonWriter(boolean)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateSignificantProperty(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.css.CSSHandler::error(org.idpf.epubcheck.util.css.CssExceptions.CssException)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkContainerFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::matchDoctypeId(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkMimetypeMatches(io.mola.galimatias.URL, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createFunctionalSelectorListPseudo(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler, boolean, boolean)",
            "com.adobe.epubcheck.api.EpubCheck::doValidate()",
            "com.adobe.epubcheck.reporting.CheckMessage::findCheckMessage(java.util.List, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateFont(java.lang.String, boolean)",
            "com.adobe.epubcheck.util.XmlReportImpl::generateProperty(java.lang.String, java.lang.String[], java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::parseStyleAttribute(java.io.Reader, java.lang.String, org.idpf.epubcheck.util.css.CssErrorHandler, org.idpf.epubcheck.util.css.CssContentHandler)",
            "com.adobe.epubcheck.css.CSSHandler::selectors(java.util.List)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkDictCollectionContent(com.adobe.epubcheck.opf.ResourceCollection)",
            "com.adobe.epubcheck.ops.OPSHandler30::processSectioning()",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReference(org.w3c.epubcheck.core.references.Reference)",
            "com.adobe.epubcheck.xml.XMLValidator.BasicResolver::resolveUri(com.thaiopensource.resolver.Identifier)",
            "com.adobe.epubcheck.css.CSSHandler::getCorrectedEPUBLocation(int, int, java.lang.String)",
            "com.adobe.epubcheck.overlay.SmilClock::compareTo(java.lang.Object, long)",
            "org.idpf.epubcheck.util.css.CssExceptions.CssException::<init>(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssExceptions.CssErrorCode, org.idpf.epubcheck.util.css.CssLocation, java.util.Locale, java.lang.Object[])",
            "com.thaiopensource.util.Localizer::getBundle()",
            "com.adobe.epubcheck.messages.MessageDictionaryDumper::dump(java.io.OutputStreamWriter)",
            "com.adobe.epubcheck.opf.OPFHandler30::processItemrefProperties(com.adobe.epubcheck.opf.OPFItem.Builder, java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkTypes(java.util.Set)",
            "com.adobe.epubcheck.xml.handlers.BaseURLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "org.w3c.epubcheck.util.url.URLFragment.Parser::parseHTMLFragment(java.lang.String)",
            "org.w3c.epubcheck.util.url.URLFragment.Parser::parse(java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.OPFHandler30::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssEscape::create()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReferenceType(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.opf.OPFHandler30::endElement()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkImage(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.ocf.OCFChecker::checkMimetypeFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.tool.EpubChecker::validateFile(java.lang.String, com.adobe.epubcheck.util.EPUBVersion, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::startElement()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.util.Archive::createArchive()",
            "com.adobe.epubcheck.util.XmpReportImpl::generateReport()",
            "com.adobe.epubcheck.tool.EpubChecker::processArguments(java.lang.String[])",
            "com.adobe.epubcheck.util.XmlReportImpl::generateReport()",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.OPFHandler30::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssEscape::create()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReferenceType(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.opf.OPFHandler30::endElement()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkImage(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.ocf.OCFChecker::checkMimetypeFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.tool.EpubChecker::validateFile(java.lang.String, com.adobe.epubcheck.util.EPUBVersion, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::startElement()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.util.Archive::createArchive()",
            "com.adobe.epubcheck.util.XmpReportImpl::generateReport()",
            "com.adobe.epubcheck.tool.EpubChecker::processArguments(java.lang.String[])",
            "com.adobe.epubcheck.util.XmlReportImpl::generateReport()",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "com.adobe.epubcheck.dtbook.DTBookHandler::startElement()",
            "com.adobe.epubcheck.ocf.OCFEncryptionFileHandler::startElement()",
            "com.adobe.epubcheck.tool.EpubChecker::printEpubCheckCompleted(com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.tool.EpubChecker::run(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources::getSHAHash(java.util.zip.ZipEntry, java.util.zip.ZipFile)",
            "com.adobe.epubcheck.ops.OPSHandler30::isPalpable()"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.OPFHandler30::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssEscape::create()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReferenceType(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.opf.OPFHandler30::endElement()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkImage(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.ocf.OCFChecker::checkMimetypeFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.tool.EpubChecker::validateFile(java.lang.String, com.adobe.epubcheck.util.EPUBVersion, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::startElement()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.util.Archive::createArchive()",
            "com.adobe.epubcheck.util.XmpReportImpl::generateReport()",
            "com.adobe.epubcheck.tool.EpubChecker::processArguments(java.lang.String[])",
            "com.adobe.epubcheck.util.XmlReportImpl::generateReport()",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "com.adobe.epubcheck.dtbook.DTBookHandler::startElement()",
            "com.adobe.epubcheck.ocf.OCFEncryptionFileHandler::startElement()",
            "com.adobe.epubcheck.tool.EpubChecker::printEpubCheckCompleted(com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.tool.EpubChecker::run(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources::getSHAHash(java.util.zip.ZipEntry, java.util.zip.ZipFile)",
            "com.adobe.epubcheck.ops.OPSHandler30::isPalpable()",
            "com.adobe.epubcheck.util.DateParserTest::testisISO8601Date()",
            "com.adobe.epubcheck.ocf.OCFContainerFileHandler::processRootFile()",
            "com.adobe.epubcheck.overlay.OverlayHandler::checkTime(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.overlay.SmilClock::toString(int)",
            "com.adobe.epubcheck.ocf.OCFZipResources::iterator()",
            "com.adobe.epubcheck.nav.NavHandler::startElement()",
            "com.adobe.epubcheck.overlay.OverlayHandler::startElement()",
            "com.adobe.epubcheck.api.EPUBLocation::compareTo(com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "org.w3c.epubcheck.util.url.URLFragment::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.ReportingErrorHandler::error(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.xml.XMLValidator.BasicResolver::resolveUri(com.thaiopensource.resolver.Identifier)",
            "com.thaiopensource.util.Localizer::getBundle()"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.adobe.epubcheck.tool.Checker::main(java.lang.String[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.adobe.epubcheck.tool.Checker::main(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startDTD(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.adobe.epubcheck.tool.Checker::main(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startDTD(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::lambda.updatePalpableState.3(java.lang.String, java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFZipResources.1::next()"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.adobe.epubcheck.tool.Checker::main(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startDTD(java.lang.String, java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources::iterator()",
            "org.w3c.epubcheck.util.url.URLFragment::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.ReportingErrorHandler::error(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.ops.OPSHandler30::lambda.updatePalpableState.3(java.lang.String, java.lang.Object)",
            "com.adobe.epubcheck.util.DateParserTest::main(java.lang.String[])",
            "com.adobe.epubcheck.overlay.SmilClock::toString()",
            "com.adobe.epubcheck.api.EPUBLocation::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.xml.XMLValidator.BasicResolver::resolve(com.thaiopensource.resolver.Identifier, com.thaiopensource.resolver.Input)",
            "com.thaiopensource.util.Localizer::message(java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources.1::next()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.tool.EpubChecker::processEpubFile(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.tool.EpubChecker::processEpubFile(java.lang.String[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startDTD(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.adobe.epubcheck.tool.EpubChecker::processEpubFile(java.lang.String[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler30::lambda.updatePalpableState.3(java.lang.String, java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources.1::next()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startDTD(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.adobe.epubcheck.tool.EpubChecker::processEpubFile(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "org.w3c.epubcheck.util.url.URLFragment::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ocf.OCFZipResources::iterator()",
            "com.adobe.epubcheck.api.EPUBLocation::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startDTD(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.util.DateParserTest::main(java.lang.String[])",
            "com.adobe.epubcheck.ops.OPSHandler30::lambda.updatePalpableState.3(java.lang.String, java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "com.adobe.epubcheck.xml.handlers.ReportingErrorHandler::error(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.xml.XMLValidator.BasicResolver::resolve(com.thaiopensource.resolver.Identifier, com.thaiopensource.resolver.Input)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.thaiopensource.util.Localizer::message(java.lang.String, java.lang.Object)",
            "com.adobe.epubcheck.overlay.SmilClock::toString()",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources.1::next()"
        ]
    }
]