[
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.util.WriterReportImpl::message(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.util.WriterReportImpl::message(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "org.idpf.epubcheck.util.css.CssScanner::_string()",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.OPFHandler30::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssEscape::create()",
            "com.adobe.epubcheck.opf.OPFHandler30::processLink()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReferenceType(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.opf.OPFHandler30::endElement()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkImage(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.vocab.VocabUtil::parseProperties(java.lang.String, java.util.Map, boolean, com.adobe.epubcheck.opf.ValidationContext, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkMimetypeFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.css.CSSHandler::declaration(org.idpf.epubcheck.util.css.CssGrammar.CssDeclaration)",
            "com.adobe.epubcheck.reporting.ItemMetadata::handleInfo(com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkContent()",
            "com.adobe.epubcheck.util.SourceSet.Parser::parse(java.lang.CharSequence)",
            "com.adobe.epubcheck.tool.EpubChecker::validateFile(java.lang.String, com.adobe.epubcheck.util.EPUBVersion, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::startElement()",
            "org.w3c.epubcheck.core.references.URLChecker::resolveURL(java.lang.String, boolean, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.SourceSet.Parser::finalizeSource(java.lang.StringBuilder, java.util.List)",
            "com.adobe.epubcheck.reporting.PublicationMetadata::handleInfo(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::handleAtRule(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::getImageSizes()",
            "com.adobe.epubcheck.opf.OPFHandler::startElement()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFHandler::endElement()",
            "com.adobe.epubcheck.ocf.OCFZipChecker::check()",
            "org.idpf.epubcheck.util.css.CssScanner::scan()",
            "com.adobe.epubcheck.util.Archive::createArchive()",
            "com.adobe.epubcheck.util.DateParser::getCalendar(java.lang.String)",
            "com.adobe.epubcheck.vocab.PrefixDeclarationParser::parsePrefixMappings(java.lang.String, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateReport()",
            "com.adobe.epubcheck.xml.XMLParser::process()",
            "com.adobe.epubcheck.tool.EpubChecker::processArguments(java.lang.String[])",
            "com.adobe.epubcheck.util.XmlReportImpl::generateReport()",
            "com.adobe.epubcheck.util.ReportingLevel::getReportingLevel(com.adobe.epubcheck.messages.Severity)",
            "com.adobe.epubcheck.ops.OPSHandler::checkHRef(java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createAttributeSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.util.WriterReportImpl::message(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "org.idpf.epubcheck.util.css.CssScanner::_string()",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.OPFHandler30::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssEscape::create()",
            "com.adobe.epubcheck.opf.OPFHandler30::processLink()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReferenceType(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.opf.OPFHandler30::endElement()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkImage(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.vocab.VocabUtil::parseProperties(java.lang.String, java.util.Map, boolean, com.adobe.epubcheck.opf.ValidationContext, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkMimetypeFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.css.CSSHandler::declaration(org.idpf.epubcheck.util.css.CssGrammar.CssDeclaration)",
            "com.adobe.epubcheck.reporting.ItemMetadata::handleInfo(com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkContent()",
            "com.adobe.epubcheck.util.SourceSet.Parser::parse(java.lang.CharSequence)",
            "com.adobe.epubcheck.tool.EpubChecker::validateFile(java.lang.String, com.adobe.epubcheck.util.EPUBVersion, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::startElement()",
            "org.w3c.epubcheck.core.references.URLChecker::resolveURL(java.lang.String, boolean, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.SourceSet.Parser::finalizeSource(java.lang.StringBuilder, java.util.List)",
            "com.adobe.epubcheck.reporting.PublicationMetadata::handleInfo(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::handleAtRule(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::getImageSizes()",
            "com.adobe.epubcheck.opf.OPFHandler::startElement()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFHandler::endElement()",
            "com.adobe.epubcheck.ocf.OCFZipChecker::check()",
            "org.idpf.epubcheck.util.css.CssScanner::scan()",
            "com.adobe.epubcheck.util.Archive::createArchive()",
            "com.adobe.epubcheck.util.DateParser::getCalendar(java.lang.String)",
            "com.adobe.epubcheck.vocab.PrefixDeclarationParser::parsePrefixMappings(java.lang.String, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateReport()",
            "com.adobe.epubcheck.xml.XMLParser::process()",
            "com.adobe.epubcheck.tool.EpubChecker::processArguments(java.lang.String[])",
            "com.adobe.epubcheck.util.XmlReportImpl::generateReport()",
            "com.adobe.epubcheck.util.ReportingLevel::getReportingLevel(com.adobe.epubcheck.messages.Severity)",
            "com.adobe.epubcheck.ops.OPSHandler::checkHRef(java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createAttributeSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)",
            "com.adobe.epubcheck.opf.OPFHandler30::processItemProperties(com.adobe.epubcheck.opf.OPFItem.Builder, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.css.CSSHandler::checkProperties()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkSpineItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createTypeSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkPagination()",
            "com.adobe.epubcheck.css.CSSChecker::getCssSource()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkDictCollection(com.adobe.epubcheck.opf.ResourceCollection)",
            "com.adobe.epubcheck.xml.XMLEncodingSniffer::sniffEncoding(java.io.InputStream)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateEventOutcome(java.util.List, java.lang.String)",
            "com.adobe.epubcheck.dtbook.DTBookHandler::startElement()",
            "org.idpf.epubcheck.util.css.CssScanner::_num()",
            "com.adobe.epubcheck.ops.OPSHandler30::processMeta()",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkHeader(byte[])",
            "com.adobe.epubcheck.ocf.OCFEncryptionFileHandler::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkNav()",
            "com.adobe.epubcheck.tool.EpubChecker::printEpubCheckCompleted(com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.tool.EpubChecker::run(java.lang.String[])",
            "com.adobe.epubcheck.ocf.OCFChecker::check()",
            "org.w3c.epubcheck.util.url.URLUtils::isSameOrigin(io.mola.galimatias.URL, io.mola.galimatias.URL)",
            "com.adobe.epubcheck.util.XmlReportAbstract::generate()",
            "com.adobe.epubcheck.opf.FallbackChainResolver::resolve()",
            "com.adobe.epubcheck.tool.EpubChecker::processFile(com.adobe.epubcheck.api.Report)",
            "org.w3c.epubcheck.util.microsyntax.ViewportMeta.Parser::parse(java.lang.CharSequence)",
            "com.adobe.epubcheck.util.XmlReportAbstract::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler::startElement()",
            "com.adobe.epubcheck.ocf.OCFChecker::checkContainerStructure(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.messages.OverriddenMessages::loadOverriddenMessageSeverities()",
            "com.adobe.epubcheck.messages.OverriddenMessages::checkMessageForParameterCount(int, int, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.vocab.Property::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFFilenameChecker::toString(int, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::handleRuleSet(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkProperties()",
            "com.adobe.epubcheck.util.DefaultReportImpl::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.util.WriterReportImpl::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.vocab.VocabUtil::parsePrefixDeclaration(java.lang.String, java.util.Map, java.util.Map, java.util.Set, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkUndeclaredReference(org.w3c.epubcheck.core.references.Reference)",
            "com.adobe.epubcheck.api.EpubCheck::version()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkDiscouragedElements()",
            "com.adobe.epubcheck.ops.OPSHandler::endElement()",
            "org.idpf.epubcheck.util.css.CssParser::handleDeclarationBlock(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "org.idpf.epubcheck.util.css.CssScanner::forwardMatch(java.lang.String, boolean, boolean)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReadingOrder(java.util.Queue)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createPseudoSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ocf.OCFFilenameChecker::check()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkItemAfterResourceValidation(com.adobe.epubcheck.opf.OPFItem)",
            "com.adobe.epubcheck.tool.EpubChecker::dumpMessageDictionary(com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.ocf.OCFZipResources::getSHAHash(java.util.zip.ZipEntry, java.util.zip.ZipFile)",
            "com.adobe.epubcheck.ops.OPSHandler30::isPalpable()"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.util.WriterReportImpl::message(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "org.idpf.epubcheck.util.css.CssScanner::_string()",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.OPFHandler30::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssEscape::create()",
            "com.adobe.epubcheck.opf.OPFHandler30::processLink()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReferenceType(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.opf.OPFHandler30::endElement()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkImage(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.vocab.VocabUtil::parseProperties(java.lang.String, java.util.Map, boolean, com.adobe.epubcheck.opf.ValidationContext, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkMimetypeFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.css.CSSHandler::declaration(org.idpf.epubcheck.util.css.CssGrammar.CssDeclaration)",
            "com.adobe.epubcheck.reporting.ItemMetadata::handleInfo(com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkContent()",
            "com.adobe.epubcheck.util.SourceSet.Parser::parse(java.lang.CharSequence)",
            "com.adobe.epubcheck.tool.EpubChecker::validateFile(java.lang.String, com.adobe.epubcheck.util.EPUBVersion, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::startElement()",
            "org.w3c.epubcheck.core.references.URLChecker::resolveURL(java.lang.String, boolean, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.SourceSet.Parser::finalizeSource(java.lang.StringBuilder, java.util.List)",
            "com.adobe.epubcheck.reporting.PublicationMetadata::handleInfo(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::handleAtRule(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::getImageSizes()",
            "com.adobe.epubcheck.opf.OPFHandler::startElement()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFHandler::endElement()",
            "com.adobe.epubcheck.ocf.OCFZipChecker::check()",
            "org.idpf.epubcheck.util.css.CssScanner::scan()",
            "com.adobe.epubcheck.util.Archive::createArchive()",
            "com.adobe.epubcheck.util.DateParser::getCalendar(java.lang.String)",
            "com.adobe.epubcheck.vocab.PrefixDeclarationParser::parsePrefixMappings(java.lang.String, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateReport()",
            "com.adobe.epubcheck.xml.XMLParser::process()",
            "com.adobe.epubcheck.tool.EpubChecker::processArguments(java.lang.String[])",
            "com.adobe.epubcheck.util.XmlReportImpl::generateReport()",
            "com.adobe.epubcheck.util.ReportingLevel::getReportingLevel(com.adobe.epubcheck.messages.Severity)",
            "com.adobe.epubcheck.ops.OPSHandler::checkHRef(java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createAttributeSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)",
            "com.adobe.epubcheck.opf.OPFHandler30::processItemProperties(com.adobe.epubcheck.opf.OPFItem.Builder, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.css.CSSHandler::checkProperties()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkSpineItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createTypeSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkPagination()",
            "com.adobe.epubcheck.css.CSSChecker::getCssSource()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkDictCollection(com.adobe.epubcheck.opf.ResourceCollection)",
            "com.adobe.epubcheck.xml.XMLEncodingSniffer::sniffEncoding(java.io.InputStream)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateEventOutcome(java.util.List, java.lang.String)",
            "com.adobe.epubcheck.dtbook.DTBookHandler::startElement()",
            "org.idpf.epubcheck.util.css.CssScanner::_num()",
            "com.adobe.epubcheck.ops.OPSHandler30::processMeta()",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkHeader(byte[])",
            "com.adobe.epubcheck.ocf.OCFEncryptionFileHandler::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkNav()",
            "com.adobe.epubcheck.tool.EpubChecker::printEpubCheckCompleted(com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.tool.EpubChecker::run(java.lang.String[])",
            "com.adobe.epubcheck.ocf.OCFChecker::check()",
            "org.w3c.epubcheck.util.url.URLUtils::isSameOrigin(io.mola.galimatias.URL, io.mola.galimatias.URL)",
            "com.adobe.epubcheck.util.XmlReportAbstract::generate()",
            "com.adobe.epubcheck.opf.FallbackChainResolver::resolve()",
            "com.adobe.epubcheck.tool.EpubChecker::processFile(com.adobe.epubcheck.api.Report)",
            "org.w3c.epubcheck.util.microsyntax.ViewportMeta.Parser::parse(java.lang.CharSequence)",
            "com.adobe.epubcheck.util.XmlReportAbstract::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler::startElement()",
            "com.adobe.epubcheck.ocf.OCFChecker::checkContainerStructure(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.messages.OverriddenMessages::loadOverriddenMessageSeverities()",
            "com.adobe.epubcheck.messages.OverriddenMessages::checkMessageForParameterCount(int, int, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.vocab.Property::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFFilenameChecker::toString(int, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::handleRuleSet(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkProperties()",
            "com.adobe.epubcheck.util.DefaultReportImpl::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.util.WriterReportImpl::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.vocab.VocabUtil::parsePrefixDeclaration(java.lang.String, java.util.Map, java.util.Map, java.util.Set, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkUndeclaredReference(org.w3c.epubcheck.core.references.Reference)",
            "com.adobe.epubcheck.api.EpubCheck::version()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkDiscouragedElements()",
            "com.adobe.epubcheck.ops.OPSHandler::endElement()",
            "org.idpf.epubcheck.util.css.CssParser::handleDeclarationBlock(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "org.idpf.epubcheck.util.css.CssScanner::forwardMatch(java.lang.String, boolean, boolean)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReadingOrder(java.util.Queue)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createPseudoSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ocf.OCFFilenameChecker::check()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkItemAfterResourceValidation(com.adobe.epubcheck.opf.OPFItem)",
            "com.adobe.epubcheck.tool.EpubChecker::dumpMessageDictionary(com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.ocf.OCFZipResources::getSHAHash(java.util.zip.ZipEntry, java.util.zip.ZipFile)",
            "com.adobe.epubcheck.ops.OPSHandler30::isPalpable()",
            "com.adobe.epubcheck.api.EpubCheck::<init>(java.io.InputStream, com.adobe.epubcheck.api.Report, java.lang.String, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.util.DateParserTest::testisISO8601Date()",
            "org.idpf.epubcheck.util.css.CssScanner::_atkeyword()",
            "com.adobe.epubcheck.util.XmlReportAbstract::getNameFromPath(java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFContainerFileHandler::processRootFile()",
            "com.adobe.epubcheck.overlay.OverlayHandler::checkTime(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkPublicationProfile(com.adobe.epubcheck.ocf.OCFCheckerState, com.adobe.epubcheck.util.EPUBVersion)",
            "com.adobe.epubcheck.ocf.OCFExtensionChecker::check()",
            "com.adobe.epubcheck.ops.OPSHandler30::processLink()",
            "org.idpf.epubcheck.util.css.CssScanner::_comment()",
            "org.idpf.epubcheck.util.css.CssScanner::_urange()",
            "org.idpf.epubcheck.util.css.CssParser::parse(java.io.Reader, java.lang.String, org.idpf.epubcheck.util.css.CssErrorHandler, org.idpf.epubcheck.util.css.CssContentHandler)",
            "com.adobe.epubcheck.api.MasterReport::message(com.adobe.epubcheck.messages.MessageId, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.css.CSSHandler::startAtRule(org.idpf.epubcheck.util.css.CssGrammar.CssAtRule)",
            "org.w3c.epubcheck.util.url.URLUtils::encodePath(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssURI::toUriString()",
            "com.adobe.epubcheck.reporting.CheckingReport::setParameters()",
            "com.adobe.epubcheck.overlay.SmilClock::toString(int)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkFragment(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "org.w3c.epubcheck.util.url.URLFragment.Parser::parseSVGFragment(java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::isScriptType(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssInputStream::getCssCharset(java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources::iterator()",
            "com.adobe.epubcheck.opf.ValidationContext::getMimeType(io.mola.galimatias.URL)",
            "com.adobe.epubcheck.util.DateParser::checkValueAndNext(java.util.StringTokenizer, java.lang.String)",
            "com.adobe.epubcheck.util.XmlReportImpl::generateProperty(java.lang.String, java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::hasRuleSet(org.idpf.epubcheck.util.css.CssGrammar.CssAtRule, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator)",
            "com.adobe.epubcheck.opf.OPFHandler::reportItem(com.adobe.epubcheck.opf.OPFItem)",
            "com.adobe.epubcheck.opf.OPFHandler30::reportItem(com.adobe.epubcheck.opf.OPFItem)",
            "com.adobe.epubcheck.css.CSSHandler::findClassName(org.idpf.epubcheck.util.css.CssGrammar.CssConstruct, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_quantity()",
            "com.adobe.epubcheck.opf.MetadataSet.Builder::build(com.adobe.epubcheck.opf.MetadataSet.Metadata)",
            "com.adobe.epubcheck.css.CSSHandler::resolveAndRegister(java.lang.String, int, int, java.lang.String, org.w3c.epubcheck.core.references.Reference.Type)",
            "com.adobe.epubcheck.nav.NavHandler::startElement()",
            "com.adobe.epubcheck.nav.NavHandler::checkTypes(java.util.Set)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkFallbacks(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkMediaOverlaysDuration()",
            "com.adobe.epubcheck.css.CSSHandler::handleFontFaceInfo()",
            "com.adobe.epubcheck.opf.OPFHandler30::processMeta()",
            "com.adobe.epubcheck.overlay.OverlayHandler::startElement()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkRemoteReference(org.w3c.epubcheck.core.references.Reference, java.util.Optional)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::getTempImageFile(com.adobe.epubcheck.ocf.OCFContainer, io.mola.galimatias.URL)",
            "com.adobe.epubcheck.css.CSSChecker::checkContent()",
            "com.adobe.epubcheck.vocab.VocabUtil::parseProperty(java.lang.String, java.util.Map, com.adobe.epubcheck.opf.ValidationContext, com.adobe.epubcheck.api.EPUBLocation)",
            "org.idpf.epubcheck.util.css.CssScanner::_ws()",
            "com.adobe.epubcheck.vocab.EnumVocab::<init>(java.lang.Class, com.google.common.base.CaseFormat, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.api.EPUBLocation::compareTo(com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.CheckUtil::readBytes(java.io.InputStream, byte[], int, int)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkOtherMetaFiles(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "org.idpf.epubcheck.util.css.CssScanner::append(com.google.common.base.CharMatcher, org.idpf.epubcheck.util.css.CssToken.TokenBuilder)",
            "com.adobe.epubcheck.util.XmlReportAbstract::message(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.opf.OPFChecker::checkSpineItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.reporting.CheckingReport::getJsonReport(java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker30::isCoreMediaType(java.lang.String)",
            "com.adobe.epubcheck.util.Archive::getCRC(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::handleDeclaration(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler, boolean)",
            "com.adobe.epubcheck.opf.OPFItem::<init>(com.adobe.epubcheck.opf.OPFItem.Builder)",
            "com.adobe.epubcheck.xml.XMLValidator::<init>(java.lang.String, boolean)",
            "com.adobe.epubcheck.overlay.SmilClock::equals(java.lang.Object)",
            "com.adobe.epubcheck.vocab.Property::filter(java.util.Set, java.lang.Class)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "org.w3c.epubcheck.util.url.URLFragment::equals(java.lang.Object)",
            "com.adobe.epubcheck.ops.OPSHandler30::registerMediaResource(io.mola.galimatias.URL, java.lang.String, boolean)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createCombinator(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.MetadataSet.Builder::meta(java.lang.String, com.adobe.epubcheck.vocab.Property, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.util.DefaultReportImpl::formatMessage(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.util.XmlReportAbstract::makeElement(java.lang.String)",
            "com.adobe.epubcheck.xml.handlers.ReportingErrorHandler::error(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.opf.ValidationContext::<init>(com.adobe.epubcheck.opf.ValidationContext.ValidationContextBuilder)",
            "com.adobe.epubcheck.overlay.OverlayHandler::processAudioSrc()",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkType(java.lang.String)",
            "com.adobe.epubcheck.util.Archive::collectFiles(java.io.File, java.lang.String)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkImageDimensions()",
            "com.adobe.epubcheck.util.JsonWriter::createJsonWriter(boolean)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateSignificantProperty(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.css.CSSHandler::error(org.idpf.epubcheck.util.css.CssExceptions.CssException)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkContainerFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::matchDoctypeId(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkMimetypeMatches(io.mola.galimatias.URL, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createFunctionalSelectorListPseudo(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler, boolean, boolean)",
            "com.adobe.epubcheck.api.EpubCheck::doValidate()",
            "com.adobe.epubcheck.reporting.CheckMessage::findCheckMessage(java.util.List, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateFont(java.lang.String, boolean)",
            "com.adobe.epubcheck.util.XmlReportImpl::generateProperty(java.lang.String, java.lang.String[], java.lang.String)",
            "org.idpf.epubcheck.util.css.CssParser::parseStyleAttribute(java.io.Reader, java.lang.String, org.idpf.epubcheck.util.css.CssErrorHandler, org.idpf.epubcheck.util.css.CssContentHandler)",
            "com.adobe.epubcheck.css.CSSHandler::selectors(java.util.List)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkDictCollectionContent(com.adobe.epubcheck.opf.ResourceCollection)",
            "com.adobe.epubcheck.ops.OPSHandler30::processSectioning()",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReference(org.w3c.epubcheck.core.references.Reference)",
            "com.adobe.epubcheck.xml.XMLValidator.BasicResolver::resolveUri(com.thaiopensource.resolver.Identifier)",
            "com.adobe.epubcheck.css.CSSHandler::getCorrectedEPUBLocation(int, int, java.lang.String)",
            "com.adobe.epubcheck.overlay.SmilClock::compareTo(java.lang.Object, long)",
            "org.idpf.epubcheck.util.css.CssExceptions.CssException::<init>(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssExceptions.CssErrorCode, org.idpf.epubcheck.util.css.CssLocation, java.util.Locale, java.lang.Object[])",
            "com.thaiopensource.util.Localizer::getBundle()",
            "com.adobe.epubcheck.messages.MessageDictionaryDumper::dump(java.io.OutputStreamWriter)",
            "com.adobe.epubcheck.opf.OPFHandler30::processItemrefProperties(com.adobe.epubcheck.opf.OPFItem.Builder, java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkTypes(java.util.Set)",
            "com.adobe.epubcheck.xml.handlers.BaseURLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "org.w3c.epubcheck.util.url.URLFragment.Parser::parseHTMLFragment(java.lang.String)",
            "org.w3c.epubcheck.util.url.URLFragment.Parser::parse(java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.OPFHandler30::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssEscape::create()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReferenceType(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.opf.OPFHandler30::endElement()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkImage(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.ocf.OCFChecker::checkMimetypeFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.tool.EpubChecker::validateFile(java.lang.String, com.adobe.epubcheck.util.EPUBVersion, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::startElement()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.util.Archive::createArchive()",
            "com.adobe.epubcheck.util.XmpReportImpl::generateReport()",
            "com.adobe.epubcheck.tool.EpubChecker::processArguments(java.lang.String[])",
            "com.adobe.epubcheck.util.XmlReportImpl::generateReport()",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.OPFHandler30::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssEscape::create()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReferenceType(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.opf.OPFHandler30::endElement()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkImage(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.ocf.OCFChecker::checkMimetypeFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.tool.EpubChecker::validateFile(java.lang.String, com.adobe.epubcheck.util.EPUBVersion, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::startElement()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.util.Archive::createArchive()",
            "com.adobe.epubcheck.util.XmpReportImpl::generateReport()",
            "com.adobe.epubcheck.tool.EpubChecker::processArguments(java.lang.String[])",
            "com.adobe.epubcheck.util.XmlReportImpl::generateReport()",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "com.adobe.epubcheck.dtbook.DTBookHandler::startElement()",
            "com.adobe.epubcheck.ocf.OCFEncryptionFileHandler::startElement()",
            "com.adobe.epubcheck.tool.EpubChecker::printEpubCheckCompleted(com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.tool.EpubChecker::run(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources::getSHAHash(java.util.zip.ZipEntry, java.util.zip.ZipFile)",
            "com.adobe.epubcheck.ops.OPSHandler30::isPalpable()"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.adobe.epubcheck.messages.DefaultSeverities::initialize()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.opf.OPFItem::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(com.adobe.epubcheck.reporting.CheckMessage)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::<init>(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.OPFHandler30::startElement()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssEscape::create()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkReferenceType(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.opf.OPFHandler30::endElement()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkImage(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.ocf.OCFChecker::checkMimetypeFile(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.tool.EpubChecker::validateFile(java.lang.String, com.adobe.epubcheck.util.EPUBVersion, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::startElement()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.util.Archive::createArchive()",
            "com.adobe.epubcheck.util.XmpReportImpl::generateReport()",
            "com.adobe.epubcheck.tool.EpubChecker::processArguments(java.lang.String[])",
            "com.adobe.epubcheck.util.XmlReportImpl::generateReport()",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "com.adobe.epubcheck.dtbook.DTBookHandler::startElement()",
            "com.adobe.epubcheck.ocf.OCFEncryptionFileHandler::startElement()",
            "com.adobe.epubcheck.tool.EpubChecker::printEpubCheckCompleted(com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.tool.EpubChecker::run(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources::getSHAHash(java.util.zip.ZipEntry, java.util.zip.ZipFile)",
            "com.adobe.epubcheck.ops.OPSHandler30::isPalpable()",
            "com.adobe.epubcheck.util.DateParserTest::testisISO8601Date()",
            "com.adobe.epubcheck.ocf.OCFContainerFileHandler::processRootFile()",
            "com.adobe.epubcheck.overlay.OverlayHandler::checkTime(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.overlay.SmilClock::toString(int)",
            "com.adobe.epubcheck.ocf.OCFZipResources::iterator()",
            "com.adobe.epubcheck.nav.NavHandler::startElement()",
            "com.adobe.epubcheck.overlay.OverlayHandler::startElement()",
            "com.adobe.epubcheck.api.EPUBLocation::compareTo(com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "org.w3c.epubcheck.util.url.URLFragment::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.ReportingErrorHandler::error(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.xml.XMLValidator.BasicResolver::resolveUri(com.thaiopensource.resolver.Identifier)",
            "com.thaiopensource.util.Localizer::getBundle()"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.adobe.epubcheck.tool.Checker::main(java.lang.String[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.adobe.epubcheck.tool.Checker::main(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startDTD(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.adobe.epubcheck.tool.Checker::main(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startDTD(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::lambda.updatePalpableState.3(java.lang.String, java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFZipResources.1::next()"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.adobe.epubcheck.tool.Checker::main(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startDTD(java.lang.String, java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources::iterator()",
            "org.w3c.epubcheck.util.url.URLFragment::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.ReportingErrorHandler::error(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.ops.OPSHandler30::lambda.updatePalpableState.3(java.lang.String, java.lang.Object)",
            "com.adobe.epubcheck.util.DateParserTest::main(java.lang.String[])",
            "com.adobe.epubcheck.overlay.SmilClock::toString()",
            "com.adobe.epubcheck.api.EPUBLocation::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.xml.XMLValidator.BasicResolver::resolve(com.thaiopensource.resolver.Identifier, com.thaiopensource.resolver.Input)",
            "com.thaiopensource.util.Localizer::message(java.lang.String, java.lang.Object)",
            "com.adobe.epubcheck.ocf.OCFZipResources.1::next()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.tool.EpubChecker::processEpubFile(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.tool.EpubChecker::processEpubFile(java.lang.String[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startDTD(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.adobe.epubcheck.tool.EpubChecker::processEpubFile(java.lang.String[])",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler30::lambda.updatePalpableState.3(java.lang.String, java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources.1::next()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startDTD(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.adobe.epubcheck.tool.EpubChecker::processEpubFile(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "org.w3c.epubcheck.util.url.URLFragment::equals(java.lang.Object)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ocf.OCFZipResources::iterator()",
            "com.adobe.epubcheck.api.EPUBLocation::compareTo(java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startDTD(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.util.DateParserTest::main(java.lang.String[])",
            "com.adobe.epubcheck.ops.OPSHandler30::lambda.updatePalpableState.3(java.lang.String, java.lang.Object)",
            "com.adobe.epubcheck.reporting.CheckMessage::compareTo(java.lang.Object)",
            "org.idpf.epubcheck.util.saxon.SaxonSchemaReaderFactory::initTransformerFactory(javax.xml.transform.TransformerFactory)",
            "com.adobe.epubcheck.xml.handlers.ReportingErrorHandler::error(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.xml.XMLValidator.BasicResolver::resolve(com.thaiopensource.resolver.Identifier, com.thaiopensource.resolver.Input)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.thaiopensource.util.Localizer::message(java.lang.String, java.lang.Object[])",
            "com.adobe.epubcheck.overlay.SmilClock::toString()",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFZipResources.1::next()"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.adobe.epubcheck.opf.OPFItem.Builder::location(com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.vocab.Property::toEnum()",
            "com.adobe.epubcheck.opf.ResourceCollection.Builder::resources(com.adobe.epubcheck.opf.LinkedResources)",
            "com.adobe.epubcheck.util.Archive::collectFiles(java.io.File, java.lang.String)",
            "org.w3c.epubcheck.util.url.URLFragment.Parser::parseSVGFragment(java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler30::endElement()",
            "com.adobe.epubcheck.opf.OPFChecker30::checkSpineItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssAttributeMatchSelector::toString()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItem(com.adobe.epubcheck.opf.OPFItem, com.adobe.epubcheck.opf.OPFHandler)",
            "com.adobe.epubcheck.opf.OPFHandler::getSpineItems()"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.adobe.epubcheck.opf.OPFItem.Builder::fallback(java.lang.String)",
            "com.adobe.epubcheck.api.EPUBLocation::<init>(io.mola.galimatias.URL, java.lang.String, int, int, java.lang.Object)",
            "com.adobe.epubcheck.util.XmlReportAbstract::<init>(java.io.PrintWriter, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.api.EPUBLocation::of(io.mola.galimatias.URL, com.adobe.epubcheck.ocf.OCFContainer)",
            "com.adobe.epubcheck.opf.OPFItem.Builder::hasContentDocumentFallback(boolean)",
            "com.adobe.epubcheck.opf.MetadataSet::containsPrimary(com.adobe.epubcheck.vocab.Property, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssAttributeMatchSelector::<init>(java.lang.String, org.idpf.epubcheck.util.css.CssGrammar.CssAttributeMatchSelector.Type, org.idpf.epubcheck.util.css.CssLocation)",
            "com.adobe.epubcheck.opf.OPFItems::getItemByURL(io.mola.galimatias.URL)",
            "com.adobe.epubcheck.xml.XMLParser::addContentHandler(org.xml.sax.ContentHandler)",
            "com.adobe.epubcheck.xml.XMLValidator.ErrorHandlerImpl::warning(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.opf.LinkedResource.Builder::refines(java.lang.String)",
            "com.adobe.epubcheck.dtbook.DTBookChecker::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.util.OPSType::<init>(java.lang.String, com.adobe.epubcheck.util.EPUBVersion)",
            "com.adobe.epubcheck.xml.handlers.ReportingErrorHandler::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "org.w3c.epubcheck.core.references.ResourceRegistry::getOPFItem(io.mola.galimatias.URL)",
            "com.adobe.epubcheck.ocf.OCFCheckerState::getMappingDocument()",
            "com.adobe.epubcheck.reporting.ItemMetadata::getItemByName(java.util.Map, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFHandler30::processDCElem()",
            "com.adobe.epubcheck.ops.OPSHandler::processJavascript()",
            "com.adobe.epubcheck.ocf.OCFContainer.Builder::<init>()",
            "org.idpf.epubcheck.util.css.CssScanner::_and()",
            "com.adobe.epubcheck.opf.OPFChecker::checkItemContent(com.adobe.epubcheck.opf.OPFItem)",
            "com.adobe.epubcheck.overlay.ClipTime::<init>(double)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssQuantity::<init>(java.lang.String, org.idpf.epubcheck.util.css.CssGrammar.CssQuantity.Unit, org.idpf.epubcheck.util.css.CssLocation)",
            "org.w3c.epubcheck.util.url.URLFragment::equals(java.lang.Object)",
            "com.adobe.epubcheck.ops.OPSHandler::checkImage(java.lang.String, java.lang.String)",
            "org.w3c.epubcheck.core.CheckerFactory::newChecker(com.adobe.epubcheck.opf.ValidationContext)",
            "org.idpf.epubcheck.util.saxon.Int64ValueSequence::<init>(net.sf.saxon.value.Int64Value)",
            "com.adobe.epubcheck.opf.OPFItem.Builder::hasFallbackStyle()",
            "com.adobe.epubcheck.opf.ValidationContext::of(io.mola.galimatias.URL)",
            "com.adobe.epubcheck.xml.handlers.DefaultResolver::<init>(com.adobe.epubcheck.util.EPUBVersion)",
            "com.adobe.epubcheck.css.CSSHandler::correctedColumnNumber(int, int)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkScript()",
            "com.adobe.epubcheck.css.CSSHandler::getCorrectedEPUBLocation(int, int, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssSource::equals(java.lang.Object)",
            "com.adobe.epubcheck.ops.OPSHandler::checkObject()",
            "com.adobe.epubcheck.opf.ValidationContext.ValidationContextBuilder::featureReport(com.adobe.epubcheck.api.FeatureReport)",
            "com.adobe.epubcheck.overlay.ClipTime::getTimeInMs()",
            "org.idpf.epubcheck.util.css.CssScanner::matches(int, com.google.common.base.CharMatcher)",
            "com.adobe.epubcheck.opf.PublicationResourceChecker::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.xml.handlers.DelegateLocator::getXMLVersion()",
            "org.idpf.epubcheck.util.css.CssScanner::scan()",
            "org.idpf.epubcheck.util.css.CssInputStream::map(byte[])",
            "com.adobe.epubcheck.reporting.CheckMessage::addCheckMessage(java.util.List, com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "org.idpf.epubcheck.util.css.CssToken::toString()",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::setDocumentLocator(org.xml.sax.Locator)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssComposedConstruct::<init>(org.idpf.epubcheck.util.css.CssGrammar.CssConstruct.Type, org.idpf.epubcheck.util.css.CssLocation)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkPagination()",
            "com.adobe.epubcheck.opf.OPFHandler::getReference(int)",
            "org.idpf.epubcheck.util.css.CssParser::scan(java.io.Reader, java.lang.String, org.idpf.epubcheck.util.css.CssErrorHandler)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.adobe.epubcheck.opf.OPFChecker30::getPreferredMediaType(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFItems::build(java.util.Map, java.lang.Iterable, com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.vocab.PrefixDeclarationParser::skip(java.io.Reader, int, com.google.common.base.CharMatcher, com.google.common.base.CharMatcher)",
            "com.adobe.epubcheck.opf.ValidationContext.ValidationContextBuilder::resourceProvider(com.adobe.epubcheck.util.GenericResourceProvider)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssDeclaration::<init>(java.lang.String, org.idpf.epubcheck.util.css.CssLocation)",
            "org.idpf.epubcheck.util.css.CssScanner::_string()",
            "com.adobe.epubcheck.ops.OPSHandler::processHyperlink(io.mola.galimatias.URL)",
            "org.idpf.epubcheck.util.css.CssScanner.CssEscapeMemoizer::reset(org.idpf.epubcheck.util.css.CssToken.TokenBuilder)",
            "com.adobe.epubcheck.opf.ResourceCollections::getByRole(java.lang.String)",
            "com.adobe.epubcheck.ops.OPSChecker::validate(java.util.List)",
            "org.idpf.epubcheck.util.css.CssScanner::_uri()",
            "com.adobe.epubcheck.util.Messages::get(java.lang.String, java.lang.Object[])",
            "com.adobe.epubcheck.reporting.CheckingReport::sortCollections()",
            "com.adobe.epubcheck.opf.ValidationContext.ValidationContextBuilder::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.messages.DefaultSeverities::get(com.adobe.epubcheck.messages.MessageId)",
            "com.thaiopensource.util.Localizer::getBundle()",
            "org.idpf.epubcheck.util.css.CssScanner::matches(int, com.google.common.base.CharMatcher)",
            "com.adobe.epubcheck.ocf.OCFContainerFileChecker::<init>(com.adobe.epubcheck.opf.ValidationContext, com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.api.FeatureReport::hasFeature(com.adobe.epubcheck.util.FeatureEnum)",
            "com.adobe.epubcheck.xml.XMLValidator.ErrorHandlerImpl::fatalError(org.xml.sax.SAXParseException)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssUnicodeRange::<init>(java.lang.String, org.idpf.epubcheck.util.css.CssLocation)",
            "org.idpf.epubcheck.util.css.CssToken.TokenBuilder::getLast()",
            "com.adobe.epubcheck.util.Messages::<init>(java.util.Locale, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_function()",
            "org.w3c.epubcheck.core.references.ResourceRegistry::getIDType(java.lang.String, org.w3c.epubcheck.core.references.Resource)",
            "com.adobe.epubcheck.xml.handlers.DelegateDefaultHandler.Builder::setEntityResolver(org.xml.sax.EntityResolver)",
            "com.adobe.epubcheck.xml.model.XMLElement::getAttribute(int)",
            "com.adobe.epubcheck.util.DateParser::getCalendar(java.lang.String)",
            "com.adobe.epubcheck.api.EpubCheck::<init>(java.io.InputStream, com.adobe.epubcheck.api.Report, java.lang.String, com.adobe.epubcheck.api.EPUBProfile)",
            "com.adobe.epubcheck.xml.handlers.DelegateDefaultHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.css.CSSHandler::correctedLineNumber(int)",
            "com.adobe.epubcheck.util.DateParserTest::testisISO8601Date()",
            "com.adobe.epubcheck.util.InvalidDateException::<init>(java.lang.String)",
            "com.adobe.epubcheck.vocab.Property::isAllowed(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.xml.model.XMLElement::getAttributeCount()",
            "com.adobe.epubcheck.api.EPUBLocation::equals(java.lang.Object)",
            "com.adobe.epubcheck.tool.EpubChecker::processEpubFile(java.lang.String[])",
            "com.adobe.epubcheck.opf.LinkedResources::getById(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssScanner::_includes()",
            "com.adobe.epubcheck.opf.OPFHandler30::processItemProperties(com.adobe.epubcheck.opf.OPFItem.Builder, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFContainer::<init>(com.adobe.epubcheck.ocf.OCFContainer.Builder)",
            "com.adobe.epubcheck.util.DateParserTest::main(java.lang.String[])",
            "com.adobe.epubcheck.xml.handlers.WrappingDefaultHandler::ignorableWhitespace(char[], int, int)",
            "com.adobe.epubcheck.xml.handlers.WrappingDefaultHandler::unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "org.w3c.epubcheck.util.microsyntax.ViewportMeta::parse(java.lang.String, org.w3c.epubcheck.util.microsyntax.ViewportMeta.ErrorHandler)",
            "com.adobe.epubcheck.vocab.UncheckedVocab::lookup(java.lang.String)",
            "org.w3c.epubcheck.util.url.URLFragment::parse(io.mola.galimatias.URL, java.lang.String)",
            "com.adobe.epubcheck.overlay.ClipTime::notSet()",
            "com.adobe.epubcheck.ocf.OCFContainer.Builder::addResource(com.adobe.epubcheck.ocf.OCFResource)",
            "org.idpf.epubcheck.util.css.CssParser::handleDeclarationBlock(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssContentHandler, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ops.OPSHandler::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkOtherMetaFiles(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.messages.LocalizedMessages::getInstance(java.util.Locale)",
            "org.w3c.epubcheck.core.references.ResourceRegistry::registerID(java.lang.String, org.w3c.epubcheck.core.references.Reference.Type, io.mola.galimatias.URL)",
            "com.adobe.epubcheck.util.XmpReportImpl::generateSignificantProperty(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.ResourceCollections::<init>(java.lang.Iterable)",
            "org.idpf.epubcheck.util.css.ForgivingErrorHandler::error(org.idpf.epubcheck.util.css.CssExceptions.CssException)",
            "com.adobe.epubcheck.css.CSSHandler::resolveAndRegister(java.lang.String, int, int, java.lang.String, org.w3c.epubcheck.core.references.Reference.Type)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorCombinator::<init>(char, org.idpf.epubcheck.util.css.CssLocation)",
            "com.adobe.epubcheck.opf.ValidationContext.ValidationContextBuilder::mimetype(java.lang.String)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::handleDocTypeUserInfo(java.lang.String, java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.saxon.Int64ValueSequence::<init>(net.sf.saxon.value.Int64Value)",
            "com.adobe.epubcheck.util.JsonWriter::createJsonWriter(boolean)",
            "org.idpf.epubcheck.util.css.CssToken.TokenBuilder::toArray()",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::findReservedStringInHTMLCustomNamespace(java.lang.String)",
            "com.adobe.epubcheck.messages.MessageDictionaryDumper::dump(java.io.OutputStreamWriter)",
            "com.adobe.epubcheck.vocab.VocabUtil::parsePrefixDeclaration(java.lang.String, java.util.Map, java.util.Map, java.util.Set, com.adobe.epubcheck.api.Report, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.util.SourceSet.Parser::removeTrailingCommas(java.lang.StringBuilder)",
            "com.adobe.epubcheck.ocf.OCFCheckerState::getPublicationVersion()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::check()",
            "com.adobe.epubcheck.xml.handlers.WrappingDefaultHandler::error(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.ncx.NCXHandler::startElement()",
            "com.adobe.epubcheck.overlay.SmilClock::secondsValueRounded()",
            "org.idpf.epubcheck.util.css.CssReader::unread(int[], org.idpf.epubcheck.util.css.CssReader.Mark)",
            "org.w3c.epubcheck.core.references.Resource::isInSpine()",
            "com.adobe.epubcheck.tool.EpubChecker::run(java.lang.String[])",
            "com.adobe.epubcheck.overlay.ClipTime::subtract(com.adobe.epubcheck.overlay.ClipTime)",
            "com.adobe.epubcheck.util.XmlReportImpl::generateProperty(java.lang.String, boolean)",
            "com.adobe.epubcheck.reporting.ItemMetadata::setId(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSimpleSelectorSequence::toCssString()",
            "com.adobe.epubcheck.ops.OPSHandler30::startMediaSource()",
            "com.adobe.epubcheck.overlay.ClipTime::roundedToMilliSeconds()",
            "com.adobe.epubcheck.ocf.OCFCheckerState::addType(io.mola.galimatias.URL, java.lang.String)",
            "com.adobe.epubcheck.reporting.CheckMessage::findLocation(com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.reporting.CheckingReport::getJsonReport(java.lang.String)",
            "com.thaiopensource.util.Localizer::message(java.lang.String, java.lang.Object)",
            "com.adobe.epubcheck.vocab.VocabUtil::parsePropertyList(java.lang.String, java.util.Map, com.adobe.epubcheck.opf.ValidationContext, com.adobe.epubcheck.api.EPUBLocation)",
            "org.w3c.epubcheck.util.url.URLUtils::getDataURLType(io.mola.galimatias.URL)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeeker::peek()",
            "com.adobe.epubcheck.util.WriterReportImpl::error(java.lang.String, int, int, java.lang.String)",
            "com.adobe.epubcheck.css.CSSChecker::checkPublicationBeforeContent()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkHead()",
            "com.adobe.epubcheck.ops.OPSHandler30::checkCiteAttribute()",
            "com.adobe.epubcheck.opf.MetadataSet::containsPrimary(com.adobe.epubcheck.vocab.Property)",
            "com.adobe.epubcheck.ocf.OCFContainer::isRemote(io.mola.galimatias.URL)",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkOverlaysStyles()",
            "com.adobe.epubcheck.vocab.EnumVocab::<init>(java.lang.Class, com.google.common.base.CaseFormat, java.lang.String)",
            "com.adobe.epubcheck.util.ReportingLevel::getReportingLevel(com.adobe.epubcheck.messages.Severity)",
            "org.idpf.epubcheck.util.css.CssReader::unread(int[], int, int, org.idpf.epubcheck.util.css.CssReader.Mark)",
            "com.adobe.epubcheck.util.XmlReportAbstract::getNameFromPath(java.lang.String)",
            "org.w3c.epubcheck.util.url.URLFragment.Parser::parseTimeSegment(java.lang.String)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.idpf.epubcheck.util.css.CssScanner::_suffixmatch()",
            "com.adobe.epubcheck.messages.DefaultSeverities::get(com.adobe.epubcheck.messages.MessageId)",
            "com.adobe.epubcheck.overlay.OverlayHandler::checkProperties()",
            "com.adobe.epubcheck.messages.LocalizedMessageDictionary::<init>(java.util.Locale)",
            "com.adobe.epubcheck.opf.OPFHandler30::reportItem(com.adobe.epubcheck.opf.OPFItem)",
            "com.adobe.epubcheck.util.InvalidVersionException::<init>(java.lang.String)",
            "org.w3c.epubcheck.core.references.Resource::isInSpine()",
            "com.adobe.epubcheck.util.SourceSet.Parser::error(com.adobe.epubcheck.util.SourceSet.ParseError, int)",
            "org.idpf.epubcheck.util.css.CssScanner::forwardMatch(java.lang.String, boolean, boolean)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::<init>(java.util.Locale)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::getImageSizes()",
            "com.adobe.epubcheck.xml.handlers.ReportingErrorHandler::error(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.opf.OPFHandler30::processLinkProperties(java.lang.String)",
            "org.w3c.epubcheck.core.references.URLChecker::resolveURL(java.lang.String, boolean, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.xml.model.XMLElement::getAttribute(java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFCheckerState::addError(java.lang.String)",
            "com.adobe.epubcheck.reporting.CheckMessage::safeCompare(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFCheckerState::getPublicationID()",
            "com.adobe.epubcheck.util.WriterReportImpl::<init>(java.io.PrintWriter, java.lang.String, boolean)",
            "org.idpf.epubcheck.util.css.CssReader::forward(int)",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::checkXMLVersion()",
            "org.w3c.epubcheck.util.url.URLFragment::<init>(org.w3c.epubcheck.util.url.URLFragment.Parser)",
            "com.adobe.epubcheck.opf.OPFHandler::getItemByURL(io.mola.galimatias.URL)",
            "com.adobe.epubcheck.messages.LocalizedMessages::getInstance(java.util.Locale)",
            "com.adobe.epubcheck.util.XmpReportImpl::<init>(java.io.PrintWriter, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.OPFHandler30::processDCElem()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssTypeSelector::<init>(java.lang.String, org.idpf.epubcheck.util.css.CssLocation)",
            "org.w3c.epubcheck.core.references.Resource.Builder::url(io.mola.galimatias.URL)",
            "com.adobe.epubcheck.util.ValidatorMap.Builder::putAll(com.adobe.epubcheck.xml.XMLValidators[])",
            "org.idpf.epubcheck.util.css.CssInputStream::map(byte[])",
            "com.adobe.epubcheck.ocf.OCFCheckerState::addProperty(com.adobe.epubcheck.vocab.Property)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSimpleSelectorSequence::<init>(org.idpf.epubcheck.util.css.CssLocation)",
            "com.adobe.epubcheck.ops.OPSHandler::checkLink()",
            "org.idpf.epubcheck.util.css.CssScanner::_hashname()",
            "com.adobe.epubcheck.util.XmlReportImpl::generateProperty(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.xml.HTMLUtils::isDataAttribute(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.tool.Checker::main(java.lang.String[])",
            "org.idpf.epubcheck.util.saxon.ColumnNumberFunction::makeCallExpression()",
            "com.adobe.epubcheck.reporting.CheckingReport::getItems()",
            "com.adobe.epubcheck.util.outWriter::print(java.lang.String)",
            "com.adobe.epubcheck.overlay.OverlayHandler::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.opf.OPFHandler30::processItemrefProperties(com.adobe.epubcheck.opf.OPFItem.Builder, java.lang.String)",
            "com.adobe.epubcheck.util.DefaultReportImpl::formatMessage(com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.util.Archive::listFiles()",
            "com.adobe.epubcheck.reporting.CheckingReport::setParameters()",
            "com.adobe.epubcheck.opf.ValidationContext.ValidationContextBuilder::mimetype(java.lang.String)",
            "com.adobe.epubcheck.opf.OPFHandler30::getCollections()",
            "com.adobe.epubcheck.ocf.OCFCheckerState::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssAttributeMatchSelector::<init>(java.lang.String, org.idpf.epubcheck.util.css.CssGrammar.CssAttributeMatchSelector.Type, org.idpf.epubcheck.util.css.CssLocation)",
            "org.w3c.epubcheck.util.url.URLFragment.Parser::parse(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.vocab.EnumVocab::get(java.lang.Enum)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::setDocumentLocator(org.xml.sax.Locator)",
            "com.adobe.epubcheck.messages.LocalizedMessageDictionary::getMessage(com.adobe.epubcheck.messages.MessageId)",
            "org.idpf.epubcheck.util.css.CssSource::toString()",
            "com.adobe.epubcheck.ops.OPSHandler30::processMeta()",
            "org.idpf.epubcheck.util.css.CssLocation::<init>(int, int, int, java.lang.String)",
            "com.adobe.epubcheck.reporting.CheckingReport::getJsonReport(java.lang.String)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkDeclaredPackageDocuments(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.opf.ResourceCollection::hasRole(com.adobe.epubcheck.opf.ResourceCollection.Roles)",
            "com.adobe.epubcheck.ops.OPSHandler30::getMouseEvents()",
            "com.adobe.epubcheck.util.JsonWriter::writeJson(java.lang.Object, java.io.OutputStream)",
            "com.adobe.epubcheck.api.MasterReport::setEpubFileName(java.lang.String)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkRemoteReference(org.w3c.epubcheck.core.references.Reference, java.util.Optional)",
            "com.adobe.epubcheck.opf.OPFChecker30::isFontType(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssAttributeMatchSelector::toString()",
            "com.adobe.epubcheck.util.XmlReportAbstract::makeElement(java.lang.String)",
            "com.adobe.epubcheck.overlay.ClipTime::floorToMilliSeconds()",
            "com.adobe.epubcheck.messages.Message::<init>(com.adobe.epubcheck.messages.MessageId, com.adobe.epubcheck.messages.Severity, com.adobe.epubcheck.messages.Severity, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.xml.handlers.DelegateLocator::getEncoding()",
            "com.adobe.epubcheck.xml.handlers.XMLHandler::setDocumentLocator(org.xml.sax.Locator)",
            "com.adobe.epubcheck.opf.OPFChecker::checkContent()",
            "com.adobe.epubcheck.opf.OPFChecker30::isAudioType(java.lang.String)",
            "com.adobe.epubcheck.ocf.PackageDocumentData.Builder::withType(java.lang.String)",
            "com.adobe.epubcheck.opf.LinkedResource::<init>(com.adobe.epubcheck.opf.LinkedResource.Builder)",
            "com.adobe.epubcheck.util.FileResourceProvider::openStream(io.mola.galimatias.URL)",
            "com.adobe.epubcheck.opf.OPFChecker30::isCoreMediaType(java.lang.String)",
            "com.adobe.epubcheck.css.CSSChecker::checkContent()",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkFragment(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource, org.w3c.epubcheck.util.url.URLFragment)",
            "com.adobe.epubcheck.xml.handlers.BaseURLHandler::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "org.idpf.epubcheck.util.css.CssScanner::_ident()",
            "com.adobe.epubcheck.util.Archive::<init>(java.lang.String, boolean)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::check()",
            "com.adobe.epubcheck.ocf.OCFContainerFileHandler::processMappingDoc()",
            "com.adobe.epubcheck.xml.handlers.BaseURLHandler::<init>(com.adobe.epubcheck.opf.ValidationContext, io.mola.galimatias.URL)",
            "com.adobe.epubcheck.ocf.PackageDocumentPeeker::<init>(com.adobe.epubcheck.opf.ValidationContext, com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.opf.FallbackChainResolver::<init>(java.util.Map, com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.overlay.SmilClock::toString()",
            "com.adobe.epubcheck.opf.OPFHandler30::processCollectionRole(java.lang.String)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkDictCollectionContent(com.adobe.epubcheck.opf.ResourceCollection)",
            "org.idpf.epubcheck.util.saxon.SystemIdFunction::makeCallExpression()",
            "org.idpf.epubcheck.util.css.CssToken::equals(java.lang.Object)",
            "com.adobe.epubcheck.xml.XMLValidator.BasicResolver::open(com.thaiopensource.resolver.Input)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkCollectionsContent()",
            "org.idpf.epubcheck.util.css.CssScanner::<init>(java.io.Reader, java.lang.String, org.idpf.epubcheck.util.css.CssErrorHandler, org.idpf.epubcheck.util.css.CssToken.CssTokenConsumer, java.util.Locale)",
            "com.adobe.epubcheck.opf.PublicationResourceChecker::check()",
            "com.adobe.epubcheck.opf.PublicationResourceChecker::checkResourceExists(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.opf.OPFItem.Builder::remote(boolean)",
            "com.adobe.epubcheck.xml.HTMLUtils::isCustomNamespace(java.lang.String)",
            "com.adobe.epubcheck.opf.OPFHandler::characters(char[], int, int)",
            "com.adobe.epubcheck.util.DateParserTest::testisISO8601Date()",
            "com.adobe.epubcheck.ocf.encryption.AdobeFontManglingFilter::decrypt(java.io.InputStream)",
            "org.w3c.epubcheck.core.references.URLChecker::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.opf.OPFChecker30::checkNav()",
            "com.adobe.epubcheck.overlay.OverlayChecker::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkImageDimensions()",
            "com.adobe.epubcheck.xml.handlers.LocationHandler::location()",
            "com.adobe.epubcheck.ocf.OCFZipChecker::getIntFromBytes(byte[], int)",
            "com.adobe.epubcheck.util.ResourceUtil::getResourceURL(java.lang.String)",
            "com.adobe.epubcheck.util.JsonWriter::createJsonWriter(boolean)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkOverlaysStyles()",
            "com.adobe.epubcheck.ops.OPSHandler30::endMediaElement()",
            "com.adobe.epubcheck.util.XmlReportAbstract::correctToUtf8(java.lang.String)",
            "com.adobe.epubcheck.reporting.ItemMetadata::handleInfo(com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "org.w3c.epubcheck.core.references.ResourceRegistry::getIDPosition(java.lang.String, org.w3c.epubcheck.core.references.Resource)",
            "com.adobe.epubcheck.ocf.OCFMetaFileChecker::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.overlay.OverlayHandler::checkItemReferences()",
            "com.adobe.epubcheck.overlay.SmilClock::subtractTime(com.adobe.epubcheck.overlay.SmilClock)",
            "org.idpf.epubcheck.util.css.CssReader::next()",
            "com.adobe.epubcheck.ocf.OCFFilenameChecker::<init>(java.lang.String, com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.tool.EpubChecker::displayHelp()",
            "org.idpf.epubcheck.util.css.CssInputStream::<init>(java.io.InputStream)",
            "com.adobe.epubcheck.messages.OverriddenMessages::loadOverriddenMessageSeverities()",
            "com.adobe.epubcheck.util.outWriter::println(java.lang.Object)",
            "org.idpf.epubcheck.util.css.CssScanner::_num()",
            "org.idpf.epubcheck.util.css.CssScanner::append(com.google.common.base.CharMatcher, org.idpf.epubcheck.util.css.CssToken.TokenBuilder)",
            "com.adobe.epubcheck.api.EPUBLocation::of(io.mola.galimatias.URL, com.adobe.epubcheck.ocf.OCFContainer)",
            "com.adobe.epubcheck.reporting.CheckerMetadata::setStartDate()",
            "com.adobe.epubcheck.opf.OPFItem.Builder::fallbackStyle(java.lang.String)",
            "com.adobe.epubcheck.util.CheckUtil::readBytes(java.io.InputStream, byte[], int, int)",
            "com.adobe.epubcheck.ocf.OCFZipResources::getCompressionMethod(java.util.zip.ZipEntry)",
            "org.idpf.epubcheck.util.css.CssInputStream::getBOM()",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::processPackage(org.xml.sax.Attributes)",
            "com.adobe.epubcheck.util.Messages.UTF8Control::newBundle(java.lang.String, java.util.Locale, java.lang.String, java.lang.ClassLoader, boolean)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createTypeSelector(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.util.XmlReportImpl::generateProperty(java.lang.String, long)",
            "com.adobe.epubcheck.util.XmlReportAbstract::generateElement(java.lang.String, java.lang.String, java.util.List)",
            "com.adobe.epubcheck.dict.SearchKeyMapChecker::checkContent()",
            "com.adobe.epubcheck.ocf.PackageDocumentPeekerHandler::<init>(com.adobe.epubcheck.opf.ValidationContext, com.adobe.epubcheck.ocf.OCFCheckerState)",
            "com.adobe.epubcheck.xml.handlers.ReportingErrorHandler::warning(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.ocf.OCFContainerFileHandler::processRootFile()",
            "org.idpf.epubcheck.util.css.CssSource::newReader()",
            "org.idpf.epubcheck.util.css.CssReader::unread(int, org.idpf.epubcheck.util.css.CssReader.Mark)",
            "org.idpf.epubcheck.util.css.CssLocation::create(org.idpf.epubcheck.util.css.CssReader)",
            "org.idpf.epubcheck.util.css.CssScanner::_cdc()",
            "com.adobe.epubcheck.opf.ResourceCollection.Builder::collection(com.adobe.epubcheck.opf.ResourceCollection)",
            "com.adobe.epubcheck.xml.XMLValidator.ErrorHandlerImpl::fatalError(org.xml.sax.SAXParseException)",
            "com.adobe.epubcheck.xml.handlers.PreprocessingDefaultHandler::preprocessAttributes(java.lang.String, org.xml.sax.Attributes)",
            "com.adobe.epubcheck.css.CSSHandler::declaration(org.idpf.epubcheck.util.css.CssGrammar.CssDeclaration)",
            "org.idpf.epubcheck.util.css.CssScanner::equals(int[], int[], boolean)",
            "com.adobe.epubcheck.opf.ValidationContext.ValidationContextBuilder::featureReport(com.adobe.epubcheck.api.FeatureReport)",
            "com.adobe.epubcheck.opf.OPFHandler::isValidRole(java.lang.String)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSymbol::<init>(java.lang.String, org.idpf.epubcheck.util.css.CssLocation)",
            "com.adobe.epubcheck.opf.OPFChecker30::isVideoType(java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler30::checkLink()",
            "com.adobe.epubcheck.ops.OPSHandler30::processInlineScripts()",
            "com.adobe.epubcheck.overlay.OverlayHandler::processAudioSrc()",
            "com.adobe.epubcheck.reporting.CheckMessage::addCheckMessage(java.util.List, com.adobe.epubcheck.messages.Message, com.adobe.epubcheck.api.EPUBLocation, java.lang.Object[])",
            "com.adobe.epubcheck.ocf.OCFChecker::checkPublicationVersion(com.adobe.epubcheck.ocf.OCFCheckerState)",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createCombinator(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ops.OPSHandler::checkDependentCondition(com.adobe.epubcheck.messages.MessageId, boolean, boolean, com.adobe.epubcheck.api.EPUBLocation)",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::externalEntityDecl(java.lang.String, java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.nav.NavHandler::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.util.DefaultReportImpl::<init>(java.lang.String, java.lang.String, boolean)",
            "org.idpf.epubcheck.util.css.CssScanner::_prefixmatch()",
            "com.adobe.epubcheck.api.EPUBLocation::safeCompare(java.lang.String, java.lang.String)",
            "org.w3c.epubcheck.core.references.ResourceReferencesChecker::checkFallbacks(org.w3c.epubcheck.core.references.Reference, org.w3c.epubcheck.core.references.Resource)",
            "com.adobe.epubcheck.util.JsonWriter::<init>(org.codehaus.jackson.map.ObjectMapper)",
            "com.adobe.epubcheck.opf.OPFItem.Builder::location(com.adobe.epubcheck.api.EPUBLocation)",
            "org.w3c.epubcheck.core.references.ResourceRegistry::getIDType(java.lang.String, org.w3c.epubcheck.core.references.Resource)",
            "org.idpf.epubcheck.util.css.CssExceptions.CssException::equals(java.lang.Object)",
            "com.adobe.epubcheck.util.ValidatorMap::getValidators(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.ocf.encryption.IDPFFontManglingFilter::decrypt(java.io.InputStream)",
            "com.adobe.epubcheck.xml.handlers.LocationHandler::<init>(com.adobe.epubcheck.opf.ValidationContext)",
            "org.idpf.epubcheck.util.css.CssToken.TokenBuilder::<init>(org.idpf.epubcheck.util.css.CssReader, org.idpf.epubcheck.util.css.CssErrorHandler, java.util.Locale)",
            "com.adobe.epubcheck.xml.model.XMLElement::setPrivateData(java.lang.String, java.lang.Object)",
            "com.adobe.epubcheck.xml.handlers.DelegateDefaultHandler::startDocument()",
            "org.idpf.epubcheck.util.css.CssGrammar.CssSelectorConstructFactory::createSimpleSelectorSequence(org.idpf.epubcheck.util.css.CssToken, org.idpf.epubcheck.util.css.CssTokenList.CssTokenIterator, org.idpf.epubcheck.util.css.CssErrorHandler)",
            "com.adobe.epubcheck.ocf.OCFChecker::checkZipFile()",
            "com.adobe.epubcheck.opf.PublicationResourceChecker::checkResourceCanBeDecrypted(com.adobe.epubcheck.opf.ValidationContext)",
            "com.adobe.epubcheck.css.CSSHandler::handleFontFaceInfo()",
            "com.adobe.epubcheck.ops.OPSHandler30::processSemantics()",
            "com.adobe.epubcheck.ocf.OCFCheckerState::getMappingDocument()",
            "com.adobe.epubcheck.xml.handlers.DeclarationHandler::startEntity(java.lang.String)",
            "com.adobe.epubcheck.xml.handlers.DelegateDefaultHandler::startPrefixMapping(java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssExceptions.CssScannerException::<init>(org.idpf.epubcheck.util.css.CssExceptions.CssErrorCode, org.idpf.epubcheck.util.css.CssLocation, java.util.Locale, java.lang.Object[])",
            "com.adobe.epubcheck.opf.OPFItems::getItemByURL(io.mola.galimatias.URL)",
            "com.adobe.epubcheck.util.Messages::getBundleName(java.lang.Class)",
            "com.adobe.epubcheck.ocf.OCFChecker::reportFeatures(java.util.Map)",
            "org.w3c.epubcheck.util.url.URLUtils::docURL(io.mola.galimatias.URL)",
            "com.adobe.epubcheck.messages.OverriddenMessageDictionary::<init>(java.io.File, com.adobe.epubcheck.api.Report)",
            "com.adobe.epubcheck.xml.HTMLUtils::isCaseInsensitiveAttribute(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.ops.OPSHandler::checkHRef(java.lang.String, java.lang.String)",
            "org.idpf.epubcheck.util.css.CssToken.TokenBuilder::toArray()",
            "com.adobe.epubcheck.ncx.NCXChecker::checkContent()",
            "com.adobe.epubcheck.xml.handlers.WrappingDefaultHandler::processingInstruction(java.lang.String, java.lang.String)",
            "com.adobe.epubcheck.opf.MetadataSet.Metadata::equals(java.lang.Object)",
            "org.idpf.epubcheck.util.css.CssScanner.CssEscapeMemoizer::get(int)",
            "com.adobe.epubcheck.reporting.ItemMetadata::setRenditionLayout(java.lang.String)",
            "com.adobe.epubcheck.xml.handlers.ReportingErrorHandler::<init>(com.adobe.epubcheck.opf.ValidationContext, boolean)",
            "com.adobe.epubcheck.overlay.OverlayHandler::processTextSrc()",
            "com.adobe.epubcheck.bitmap.BitmapChecker::checkContent()",
            "com.adobe.epubcheck.util.SourceSet::parse(java.lang.String)",
            "com.adobe.epubcheck.util.WriterReportImpl::info(java.lang.String, com.adobe.epubcheck.util.FeatureEnum, java.lang.String)",
            "com.adobe.epubcheck.util.SourceSet.Parser::parse(java.lang.CharSequence)"
        ]
    }
]