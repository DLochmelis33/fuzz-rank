[
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::ask_inner_get(java.lang.String, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ItalianDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getDynamicNoun(java.lang.String, com.force.i18n.Renameable, boolean, boolean)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::ask_inner_get(java.lang.String, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ItalianDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getDynamicNoun(java.lang.String, com.force.i18n.Renameable, boolean, boolean)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.grammar.parser.NounRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.HumanLanguage.Helper::getTranslationFallbackLanguageLocale(java.util.Locale)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunctionOverride(java.util.Locale)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::equals(java.lang.Object)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LanguageProvider.Helper::<init>(com.force.i18n.HumanLanguage, java.util.List)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianAdjective::deriveDefaultString(com.force.i18n.grammar.AdjectiveForm, java.lang.String, com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.commons.util.collection.ExpandableArray::set(int, java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::writeJson(java.lang.Appendable, java.util.Collection, java.util.Set)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::put(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::escapeToHtml(java.lang.String, boolean)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.FinnishDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::escapeForMessageFormat(java.lang.String, java.lang.StringBuilder, boolean)",
            "com.force.i18n.commons.text.TextUtil::logValue(java.lang.String, java.lang.CharSequence)",
            "com.force.i18n.grammar.impl.AmharicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ArabicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.LanguageDictionary::getTerm(java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.BaseLocalizer::convertTo4DigitYear(java.text.DateFormat, java.util.Locale)",
            "com.force.i18n.grammar.LanguageDictionary::put(java.lang.String, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.parser.ModifierRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.NounFormMap::<init>(java.util.Collection)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::writeJsonOverrides(java.lang.Appendable, java.lang.String)",
            "com.force.i18n.grammar.Noun::getCloseButNoCigarString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.commons.text.TextUtil::trim(java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.grammar.impl.SimpleDeclension::getDefaultClassifier(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.commons.text.GenericTrieMatcher::match(java.util.List, int)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::ask_inner_get(java.lang.String, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ItalianDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getDynamicNoun(java.lang.String, com.force.i18n.Renameable, boolean, boolean)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.grammar.parser.NounRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.HumanLanguage.Helper::getTranslationFallbackLanguageLocale(java.util.Locale)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunctionOverride(java.util.Locale)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::equals(java.lang.Object)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LanguageProvider.Helper::<init>(com.force.i18n.HumanLanguage, java.util.List)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianAdjective::deriveDefaultString(com.force.i18n.grammar.AdjectiveForm, java.lang.String, com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.commons.util.collection.ExpandableArray::set(int, java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::writeJson(java.lang.Appendable, java.util.Collection, java.util.Set)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::put(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::escapeToHtml(java.lang.String, boolean)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.FinnishDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::escapeForMessageFormat(java.lang.String, java.lang.StringBuilder, boolean)",
            "com.force.i18n.commons.text.TextUtil::logValue(java.lang.String, java.lang.CharSequence)",
            "com.force.i18n.grammar.impl.AmharicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ArabicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.LanguageDictionary::getTerm(java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.BaseLocalizer::convertTo4DigitYear(java.text.DateFormat, java.util.Locale)",
            "com.force.i18n.grammar.LanguageDictionary::put(java.lang.String, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.parser.ModifierRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.NounFormMap::<init>(java.util.Collection)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::writeJsonOverrides(java.lang.Appendable, java.lang.String)",
            "com.force.i18n.grammar.Noun::getCloseButNoCigarString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.commons.text.TextUtil::trim(java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.grammar.impl.SimpleDeclension::getDefaultClassifier(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.commons.text.GenericTrieMatcher::match(java.util.List, int)",
            "com.force.i18n.commons.text.TrieMatcher::match(java.lang.CharSequence, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.RefTag::getTermsFromLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Object)",
            "com.force.i18n.commons.text.TrieMatcher::replaceMultiple(java.lang.String, com.force.i18n.commons.text.TrieMatcher)",
            "com.force.i18n.grammar.impl.KoreanDeclension.KoreanNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::getArticleForm(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.Noun, com.force.i18n.grammar.NounForm, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.impl.HungarianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.RomanianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.TrieMatcher::contains(java.lang.CharSequence, int)",
            "com.force.i18n.grammar.impl.BalticDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.ArticledDeclension.LegacyArticledNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.GreekDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.CounterRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.settings.BasePropertyFile::inner_get(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::writeJson(java.lang.Appendable, boolean, java.util.Collection)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ModifierFormMap::getForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::parseAllDictionaries()",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.HumanLanguage.Helper::toFoldedCase(com.force.i18n.HumanLanguage, java.lang.String)",
            "com.force.i18n.grammar.impl.ArmenianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.BengaliDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.TurkicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.ModifierRefTag::extraJson(com.force.i18n.grammar.LanguageDictionary, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.impl.GermanicDeclension.YiddishDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.ChoiceTag::addLabelData(java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::getNounOverride(com.force.i18n.grammar.Noun)",
            "com.force.i18n.commons.text.CaseFolder::toFoldedCase(char, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjective::deriveDefaultString(com.force.i18n.grammar.AdjectiveForm, java.lang.String, com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.RomanceDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.PluralRefTag::getData(com.force.i18n.grammar.LanguageDictionary, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.I18nJavaUtil::dirLastModified(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.TrieMatcher::<init>(java.util.List, java.util.List)",
            "com.force.i18n.grammar.impl.CatalanDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.FrenchDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.TermAttributes::getAdjectiveForm(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.Noun, com.force.i18n.grammar.NounForm, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.DefaultLanguagePluralRulesImpl::fromString(java.lang.String)",
            "com.force.i18n.commons.text.GenericTrieMatcher.GenericTrieMatch::<init>(int, java.util.List, java.util.List)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.HungarianDeclension::getRequiredCases()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.settings.SharedKeyMap::keySet()",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::validateDst(com.force.i18n.LabelSet)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJsonTerm(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.GrammaticalTerm, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GenderRefTag::toJson(com.force.i18n.grammar.LanguageDictionary, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.grammar.impl.SimpleDeclension.PluralNounWithClassifier::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ModifierFormMap::<init>(java.util.Collection)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::<init>(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSet)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::appendLabel(java.lang.Appendable, java.lang.String, java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::getExactString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GenderRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension.PersianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::shareKeys(com.force.i18n.settings.SharedKeyMap)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::write(com.force.i18n.grammar.GrammaticalLabelSet)",
            "com.force.i18n.commons.text.TrieMatch::<init>(int, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension.LuxembourgishDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::ask_inner_get(java.lang.String, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ItalianDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getDynamicNoun(java.lang.String, com.force.i18n.Renameable, boolean, boolean)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.grammar.parser.NounRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.HumanLanguage.Helper::getTranslationFallbackLanguageLocale(java.util.Locale)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunctionOverride(java.util.Locale)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::equals(java.lang.Object)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LanguageProvider.Helper::<init>(com.force.i18n.HumanLanguage, java.util.List)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianAdjective::deriveDefaultString(com.force.i18n.grammar.AdjectiveForm, java.lang.String, com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.commons.util.collection.ExpandableArray::set(int, java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::writeJson(java.lang.Appendable, java.util.Collection, java.util.Set)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::put(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::escapeToHtml(java.lang.String, boolean)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.FinnishDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::escapeForMessageFormat(java.lang.String, java.lang.StringBuilder, boolean)",
            "com.force.i18n.commons.text.TextUtil::logValue(java.lang.String, java.lang.CharSequence)",
            "com.force.i18n.grammar.impl.AmharicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ArabicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.LanguageDictionary::getTerm(java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.BaseLocalizer::convertTo4DigitYear(java.text.DateFormat, java.util.Locale)",
            "com.force.i18n.grammar.LanguageDictionary::put(java.lang.String, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.parser.ModifierRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.NounFormMap::<init>(java.util.Collection)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::writeJsonOverrides(java.lang.Appendable, java.lang.String)",
            "com.force.i18n.grammar.Noun::getCloseButNoCigarString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.commons.text.TextUtil::trim(java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.grammar.impl.SimpleDeclension::getDefaultClassifier(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.commons.text.GenericTrieMatcher::match(java.util.List, int)",
            "com.force.i18n.commons.text.TrieMatcher::match(java.lang.CharSequence, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.RefTag::getTermsFromLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Object)",
            "com.force.i18n.commons.text.TrieMatcher::replaceMultiple(java.lang.String, com.force.i18n.commons.text.TrieMatcher)",
            "com.force.i18n.grammar.impl.KoreanDeclension.KoreanNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::getArticleForm(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.Noun, com.force.i18n.grammar.NounForm, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.impl.HungarianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.RomanianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.TrieMatcher::contains(java.lang.CharSequence, int)",
            "com.force.i18n.grammar.impl.BalticDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.ArticledDeclension.LegacyArticledNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.GreekDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.CounterRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.settings.BasePropertyFile::inner_get(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::writeJson(java.lang.Appendable, boolean, java.util.Collection)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ModifierFormMap::getForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::parseAllDictionaries()",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.HumanLanguage.Helper::toFoldedCase(com.force.i18n.HumanLanguage, java.lang.String)",
            "com.force.i18n.grammar.impl.ArmenianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.BengaliDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.TurkicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.ModifierRefTag::extraJson(com.force.i18n.grammar.LanguageDictionary, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.impl.GermanicDeclension.YiddishDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.ChoiceTag::addLabelData(java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::getNounOverride(com.force.i18n.grammar.Noun)",
            "com.force.i18n.commons.text.CaseFolder::toFoldedCase(char, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjective::deriveDefaultString(com.force.i18n.grammar.AdjectiveForm, java.lang.String, com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.RomanceDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.PluralRefTag::getData(com.force.i18n.grammar.LanguageDictionary, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.I18nJavaUtil::dirLastModified(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.TrieMatcher::<init>(java.util.List, java.util.List)",
            "com.force.i18n.grammar.impl.CatalanDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.FrenchDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.TermAttributes::getAdjectiveForm(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.Noun, com.force.i18n.grammar.NounForm, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.DefaultLanguagePluralRulesImpl::fromString(java.lang.String)",
            "com.force.i18n.commons.text.GenericTrieMatcher.GenericTrieMatch::<init>(int, java.util.List, java.util.List)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.HungarianDeclension::getRequiredCases()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.settings.SharedKeyMap::keySet()",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::validateDst(com.force.i18n.LabelSet)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJsonTerm(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.GrammaticalTerm, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GenderRefTag::toJson(com.force.i18n.grammar.LanguageDictionary, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.grammar.impl.SimpleDeclension.PluralNounWithClassifier::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ModifierFormMap::<init>(java.util.Collection)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::<init>(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSet)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::appendLabel(java.lang.Appendable, java.lang.String, java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::getExactString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GenderRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension.PersianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::shareKeys(com.force.i18n.settings.SharedKeyMap)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::write(com.force.i18n.grammar.GrammaticalLabelSet)",
            "com.force.i18n.commons.text.TrieMatch::<init>(int, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension.LuxembourgishDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)",
            "com.force.i18n.LabelSetImpl::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::doParseNumber(java.lang.String, java.text.NumberFormat)",
            "com.force.i18n.BaseLocalizer::doParseTime(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.LanguageDictionary::putAll(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.settings.BasePropertyFile::getParamList(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAliases(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl)",
            "com.force.i18n.grammar.parser.RefTag::getTermsFromLabels(com.force.i18n.grammar.LanguageDictionary, java.lang.Iterable)",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.Noun::toJson(java.lang.Appendable)",
            "com.force.i18n.DefaultHumanLanguageImpl.DefaultHumanLanguageImplProvider::<init>()",
            "com.force.i18n.HumanLanguage.Helper::getSystemEmailEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.impl.FinnishDeclension.EstonianDeclension::getRequiredCases()",
            "com.force.i18n.grammar.parser.ModifierRefTag::fixupModifier(com.force.i18n.grammar.parser.NounRefTag, com.force.i18n.grammar.parser.TermRefTag, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::shouldFixJdkDateBug(java.util.Locale)",
            "com.force.i18n.grammar.impl.GermanicDeclension.DutchDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.PluralRefTag::toJson(com.force.i18n.grammar.LanguageDictionary, java.util.List)",
            "com.force.i18n.settings.SharedKeyMap::setAt(int, java.lang.Object)",
            "com.force.i18n.grammar.NounModifier::toJson(java.lang.Appendable)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.ChoiceTag::setDefault(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXML(java.lang.Object, java.io.OutputStreamWriter)",
            "com.force.i18n.settings.SharedKeyMap::put(java.lang.Object, java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::getNounByPluralAlias(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.ModifierRefTag::getKey(java.lang.String, com.force.i18n.grammar.parser.NounRefTag, boolean, com.force.i18n.grammar.parser.TermAttributes)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension.SimplePluralNounWithGender::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticledPluralNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.BantuDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::get(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.impl.RomanianDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.SlavicDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.Noun::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.parser.ModifierRefTag::getForm(com.force.i18n.grammar.LanguageDictionary, boolean)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.text.GenericUniquefy::unique(java.lang.Object)",
            "com.force.i18n.commons.text.Uniquefy::unique(java.lang.String)",
            "com.force.i18n.grammar.parser.GenderRefTag::getData(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.Renameable[])",
            "com.force.i18n.BaseLocalizer::getDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::getInputDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.text.TextUtil::initCap(java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resize(int)",
            "com.force.i18n.grammar.impl.GreekDeclension.GreekNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.LanguageDictionary::getNoun(java.lang.String, boolean)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getParamList(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.ConcurrentUniquefy::unique(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::logFallbackWarning(java.lang.Object, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.NounFormMap::getForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.LabelUtils.Nounifier::generateModifierToXmlTag(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(char)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::set2DigitYearStart(java.text.DateFormat, java.util.TimeZone)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::getAllDefinedValues()",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanDeclension::formLowercaseNounForm(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.GermanicDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.GermanicDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.HungarianDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.RomanianDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::contains(java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleNameFormatter::appendNamePart(java.lang.StringBuilder, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap::remove(int)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension.PersianNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.DefaultHumanLanguageImpl.DefaultHumanLanguageImplProvider::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::error(java.lang.String, java.lang.String)",
            "com.force.i18n.SimpleLocaleAttributesUtil::<init>(java.lang.Iterable)",
            "com.force.i18n.commons.util.collection.IntHashMap::rehash()",
            "com.force.i18n.commons.text.CaseFolder::toFoldedCase(java.lang.String, boolean)",
            "com.force.i18n.grammar.LanguageDictionary::forAllTerms(com.force.i18n.grammar.GrammaticalTerm.TermType, java.util.function.BiConsumer)",
            "com.force.i18n.BaseLocalizer::getTimeFormatHelper(java.text.DateFormat, int, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.FinnishDeclension::getRequiredCases()",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianArticle::validate(java.lang.String)",
            "com.force.i18n.grammar.parser.NounRefTag::makeArticled(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.PluralRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.settings.BasePropertyFile::get(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.impl.ArabicDeclension::addAlifForAccusative(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::setNounOverride(com.force.i18n.grammar.Noun, com.force.i18n.grammar.Noun, double)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::getSAXParser(boolean)",
            "com.force.i18n.settings.MapPropertyFileData::put(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.IntHashMap::<init>(int, float)",
            "com.force.i18n.grammar.impl.HungarianDeclension::getArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.RomanceDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.grammar.Noun::getDefaultString(boolean)",
            "com.force.i18n.grammar.impl.RomanceDeclension.RomanceNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::getCacheBuilder(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.grammar.parser.NounRefTag::resolveNoun(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::resetMap(java.util.Collection, boolean)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::validate(java.lang.String)",
            "com.force.i18n.grammar.ArticledDeclension.LegacyArticledNoun::<init>(com.force.i18n.grammar.ArticledDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticledPluralNoun::<init>(com.force.i18n.grammar.ArticledDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl.CompositePropertyFileDataImpl::getSection(java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, com.force.i18n.Renameable[], java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getStringThrow(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.BalticDeclension.BalticAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.BantuDeclension.BantuAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::<init>(com.force.i18n.grammar.impl.BulgarianDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexArticledNoun::<init>(com.force.i18n.grammar.ArticledDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexNoun::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.EnglishDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.FinnishDeclension.FinnishAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicNoun::<init>(com.force.i18n.grammar.impl.GermanicDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension.IndoAryanAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.MalayoPolynesianDeclension.HawaiianDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.RomanceDeclension.RomanceNoun::<init>(com.force.i18n.grammar.impl.RomanceDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.RomanceDeclension::getArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::<init>(com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension.PersianNoun::<init>(com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.parser.AdnominalRefTag::getWithResolvedNounTag(com.force.i18n.grammar.parser.NounRefTag)",
            "com.force.i18n.commons.text.DeferredStringBuilder::appendAsDifferent(java.lang.CharSequence)",
            "com.force.i18n.grammar.GrammaticalTerm::compareTo(com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.impl.BalticDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.SlavicDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateAdjective(java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.settings.SharedKeyMap::removeAt(int)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::isEmptyOrWhitespace(java.lang.CharSequence)",
            "com.force.i18n.commons.util.collection.IntHashMap::put(int, java.lang.Object)",
            "com.force.i18n.grammar.impl.EnglishDeclension.EnglishArticle::setString(com.force.i18n.grammar.ArticleForm, java.lang.String)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::doParseNumber(java.lang.String, java.text.NumberFormat)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.HumanLanguage.Helper::getSystemEmailEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXML(java.lang.Object, java.io.OutputStreamWriter)",
            "com.force.i18n.grammar.LanguageDictionary::getNounByPluralAlias(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.ModifierRefTag::getKey(java.lang.String, com.force.i18n.grammar.parser.NounRefTag, boolean, com.force.i18n.grammar.parser.TermAttributes)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::getDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::getInputDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getParamList(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(char)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::contains(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap::remove(int)",
            "com.force.i18n.DefaultHumanLanguageImpl.DefaultHumanLanguageImplProvider::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.SimpleLocaleAttributesUtil::<init>(java.lang.Iterable)",
            "com.force.i18n.BaseLocalizer::getTimeFormatHelper(java.text.DateFormat, int, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.LanguageDictionary::setNounOverride(com.force.i18n.grammar.Noun, com.force.i18n.grammar.Noun, double)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::getCacheBuilder(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::resetMap(java.util.Collection, boolean)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.GrammaticalTerm::compareTo(com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateAdjective(java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.settings.SharedKeyMap::removeAt(int)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::hashCode()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::getLoader(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(char)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseAccountingCurrency(java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.util.collection.IntHashMap.BackingIntSet::remove(int)",
            "com.force.i18n.DefaultHumanLanguageImpl::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.BaseLocalizer::getGmtTimeFormat()",
            "com.force.i18n.grammar.GrammaticalTerm::compareTo(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::characters(char[], int, int)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getEmailEncoding()",
            "com.force.i18n.grammar.parser.RefTag::toString()",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::resetLabels()",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date)",
            "com.force.i18n.settings.SharedKeyMap.1.1::remove()",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.commons.util.collection.AbstractIntMap::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.text.GenericTrieMatcher::begins(java.util.List)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunction(java.util.Locale)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.BackingIntSet::remove(int)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::characters(char[], int, int)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.settings.SharedKeyMap.1.1::remove()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(char)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getEmailEncoding()",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::<init>(java.net.URL, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalTerm::compareTo(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.DefaultHumanLanguageImpl::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.BaseLocalizer::parseNumber(java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::resetLabels()",
            "com.force.i18n.BaseLocalizer::getGmtTimeFormat()",
            "com.force.i18n.grammar.parser.TermRefTag::toString()",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)"
        ]
    }
]