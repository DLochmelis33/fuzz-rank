[
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::deleteListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::getListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.runtime.config.ConfigMap::set(java.lang.String, org.byteskript.skript.runtime.config.ConfigMap, java.lang.String)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.Skript.RuntimeClassLoader::loadClass(java.lang.String)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::addObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::deleteListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::createClassName(java.lang.String, java.lang.String)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::deleteListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::createClassName(java.lang.String, java.lang.String)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.config.ConfigMap::setMapValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ScriptClassLoader::loadClass(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::deleteListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.Skript::createClassName(java.lang.String, java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::deleteMapValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.ScriptClassLoader::loadClass(java.lang.String)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::deleteListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::getListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.runtime.config.ConfigMap::set(java.lang.String, org.byteskript.skript.runtime.config.ConfigMap, java.lang.String)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.Skript.RuntimeClassLoader::loadClass(java.lang.String)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::addObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.config.ConfigMap::setMapValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ScriptClassLoader::loadClass(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::setMapValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.ScriptClassLoader::loadClass(java.lang.String)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::getListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::getListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.runtime.config.ConfigMap::set(java.lang.String, org.byteskript.skript.runtime.config.ConfigMap, java.lang.String)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.Skript.RuntimeClassLoader::loadClass(java.lang.String)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::addObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.config.ConfigMap::deleteMapValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ScriptClassLoader::loadClass(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::setMapValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.ScriptClassLoader::loadClass(java.lang.String)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::deleteListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::getListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.runtime.config.ConfigMap::set(java.lang.String, org.byteskript.skript.runtime.config.ConfigMap, java.lang.String)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.Skript.RuntimeClassLoader::loadClass(java.lang.String)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::addObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.config.ConfigMap::setMapValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ScriptClassLoader::loadClass(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::setMapValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.ScriptClassLoader::loadClass(java.lang.String)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)"
        ]
    }
]