[
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::hashCode()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.commons.util.collection.AbstractIntMap::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.text.GenericTrieMatcher::begins(java.util.List)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunction(java.util.Locale)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::addSection(java.lang.String, java.util.Map)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getSystemEmailEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::doParseNumber(java.lang.String, java.text.NumberFormat)",
            "com.force.i18n.grammar.LanguageDictionary::getNounByPluralAlias(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.ModifierRefTag::getKey(java.lang.String, com.force.i18n.grammar.parser.NounRefTag, boolean, com.force.i18n.grammar.parser.TermAttributes)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::getDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::getInputDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getParamList(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap::remove(int)",
            "com.force.i18n.DefaultHumanLanguageImpl.DefaultHumanLanguageImplProvider::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.SimpleLocaleAttributesUtil::<init>(java.lang.Iterable)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::resetMap(java.util.Collection, boolean)",
            "com.force.i18n.BaseLocalizer::getTimeFormatHelper(java.text.DateFormat, int, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::contains(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::getCacheBuilder(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.LanguageDictionary::setNounOverride(com.force.i18n.grammar.Noun, com.force.i18n.grammar.Noun, double)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArmenianDeclension.ArmenianNounForm::equals(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::getLoader(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArmenianDeclension.ArmenianNounForm::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::addSection(java.lang.String, java.util.Map)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parsePercent(java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.util.collection.IntHashMap.BackingIntSet::remove(int)",
            "com.force.i18n.DefaultHumanLanguageImpl::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.BaseLocalizer::getGmtTimeFormat()",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::characters(char[], int, int)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getEmailEncoding()",
            "com.force.i18n.grammar.parser.RefTag::toString()",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::resetLabels()",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArmenianDeclension.ArmenianNounForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.BackingIntSet::remove(int)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getEmailEncoding()",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::<init>(java.net.URL, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.DefaultHumanLanguageImpl::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.BaseLocalizer::parseNumber(java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::resetLabels()",
            "com.force.i18n.BaseLocalizer::getGmtTimeFormat()",
            "com.force.i18n.grammar.parser.TermRefTag::toString()",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.commons.util.collection.AbstractIntMap::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.text.GenericTrieMatcher::begins(java.util.List)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunction(java.util.Locale)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::addSection(java.lang.String, java.util.Map)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::doParseNumber(java.lang.String, java.text.NumberFormat)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.HumanLanguage.Helper::getSystemEmailEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXML(java.lang.Object, java.io.OutputStreamWriter)",
            "com.force.i18n.grammar.LanguageDictionary::getNounByPluralAlias(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.ModifierRefTag::getKey(java.lang.String, com.force.i18n.grammar.parser.NounRefTag, boolean, com.force.i18n.grammar.parser.TermAttributes)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::getDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::getInputDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getParamList(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(char)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::contains(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap::remove(int)",
            "com.force.i18n.DefaultHumanLanguageImpl.DefaultHumanLanguageImplProvider::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.SimpleLocaleAttributesUtil::<init>(java.lang.Iterable)",
            "com.force.i18n.BaseLocalizer::getTimeFormatHelper(java.text.DateFormat, int, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.LanguageDictionary::setNounOverride(com.force.i18n.grammar.Noun, com.force.i18n.grammar.Noun, double)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::getCacheBuilder(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::resetMap(java.util.Collection, boolean)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.GrammaticalTerm::compareTo(com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateAdjective(java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.settings.SharedKeyMap::removeAt(int)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::getLoader(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(char)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseAccountingCurrency(java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.util.collection.IntHashMap.BackingIntSet::remove(int)",
            "com.force.i18n.DefaultHumanLanguageImpl::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.BaseLocalizer::getGmtTimeFormat()",
            "com.force.i18n.grammar.GrammaticalTerm::compareTo(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::characters(char[], int, int)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getEmailEncoding()",
            "com.force.i18n.grammar.parser.RefTag::toString()",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::resetLabels()",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date)",
            "com.force.i18n.settings.SharedKeyMap.1.1::remove()",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.BackingIntSet::remove(int)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::characters(char[], int, int)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.settings.SharedKeyMap.1.1::remove()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(char)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getEmailEncoding()",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::<init>(java.net.URL, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalTerm::compareTo(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.DefaultHumanLanguageImpl::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.BaseLocalizer::parseNumber(java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::resetLabels()",
            "com.force.i18n.BaseLocalizer::getGmtTimeFormat()",
            "com.force.i18n.grammar.parser.TermRefTag::toString()",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.GenericTrieMatcher::begins(java.util.List)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.commons.util.collection.AbstractIntMap::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.text.GenericTrieMatcher::begins(java.util.List)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunction(java.util.Locale)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getSystemEmailEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::doParseNumber(java.lang.String, java.text.NumberFormat)",
            "com.force.i18n.grammar.LanguageDictionary::getNounByPluralAlias(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.ModifierRefTag::getKey(java.lang.String, com.force.i18n.grammar.parser.NounRefTag, boolean, com.force.i18n.grammar.parser.TermAttributes)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::getInputDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::getDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getParamList(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap::remove(int)",
            "com.force.i18n.DefaultHumanLanguageImpl.DefaultHumanLanguageImplProvider::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.SimpleLocaleAttributesUtil::<init>(java.lang.Iterable)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::resetMap(java.util.Collection, boolean)",
            "com.force.i18n.BaseLocalizer::getTimeFormatHelper(java.text.DateFormat, int, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::contains(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::getCacheBuilder(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.LanguageDictionary::setNounOverride(com.force.i18n.grammar.Noun, com.force.i18n.grammar.Noun, double)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArmenianDeclension.ArmenianNounForm::equals(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::getLoader(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArmenianDeclension.ArmenianNounForm::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, int)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseCurrency(java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.util.collection.IntHashMap.BackingIntSet::remove(int)",
            "com.force.i18n.DefaultHumanLanguageImpl::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.BaseLocalizer::getGmtTimeFormat()",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::characters(char[], int, int)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getEmailEncoding()",
            "com.force.i18n.grammar.parser.RefTag::toString()",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::resetLabels()",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArmenianDeclension.ArmenianNounForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.BackingIntSet::remove(int)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getEmailEncoding()",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::<init>(java.net.URL, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.DefaultHumanLanguageImpl::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.BaseLocalizer::parseNumber(java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::resetLabels()",
            "com.force.i18n.BaseLocalizer::getGmtTimeFormat()",
            "com.force.i18n.grammar.parser.TermRefTag::toString()",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::hashCode()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.commons.util.collection.AbstractIntMap::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.text.GenericTrieMatcher::begins(java.util.List)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunction(java.util.Locale)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getSystemEmailEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::doParseNumber(java.lang.String, java.text.NumberFormat)",
            "com.force.i18n.grammar.LanguageDictionary::getNounByPluralAlias(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.ModifierRefTag::getKey(java.lang.String, com.force.i18n.grammar.parser.NounRefTag, boolean, com.force.i18n.grammar.parser.TermAttributes)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::getInputDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::getDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getParamList(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(char)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap::remove(int)",
            "com.force.i18n.DefaultHumanLanguageImpl.DefaultHumanLanguageImplProvider::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.SimpleLocaleAttributesUtil::<init>(java.lang.Iterable)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::resetMap(java.util.Collection, boolean)",
            "com.force.i18n.BaseLocalizer::getTimeFormatHelper(java.text.DateFormat, int, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::contains(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::getCacheBuilder(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.LanguageDictionary::setNounOverride(com.force.i18n.grammar.Noun, com.force.i18n.grammar.Noun, double)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::getLoader(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(char)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseCurrency(java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.util.collection.IntHashMap.BackingIntSet::remove(int)",
            "com.force.i18n.DefaultHumanLanguageImpl::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.BaseLocalizer::getGmtTimeFormat()",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::characters(char[], int, int)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getEmailEncoding()",
            "com.force.i18n.grammar.parser.RefTag::toString()",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::resetLabels()",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.BackingIntSet::remove(int)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(char)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getEmailEncoding()",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::<init>(java.net.URL, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.DefaultHumanLanguageImpl::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.BaseLocalizer::parseNumber(java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::resetLabels()",
            "com.force.i18n.BaseLocalizer::getGmtTimeFormat()",
            "com.force.i18n.grammar.parser.TermRefTag::toString()",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)"
        ]
    }
]