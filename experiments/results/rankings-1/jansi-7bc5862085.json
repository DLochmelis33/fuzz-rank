[
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseScreen(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseLine(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processSetAttribute(int)",
            "org.fusesource.jansi.AnsiConsole::getBoolean(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::testAnsi(boolean)",
            "org.fusesource.jansi.io.ColorsAnsiProcessor::processEscapeCommand(java.util.ArrayList, int)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String, java.lang.Object[])"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseScreen(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseLine(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processSetAttribute(int)",
            "org.fusesource.jansi.AnsiConsole::getBoolean(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::testAnsi(boolean)",
            "org.fusesource.jansi.io.ColorsAnsiProcessor::processEscapeCommand(java.util.ArrayList, int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String, java.lang.Object[])",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseScreen(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseLine(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processSetAttribute(int)",
            "org.fusesource.jansi.AnsiConsole::getBoolean(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::testAnsi(boolean)",
            "org.fusesource.jansi.io.ColorsAnsiProcessor::processEscapeCommand(java.util.ArrayList, int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])",
            "org.fusesource.jansi.io.FastBufferedOutputStream::write(byte[], int, int)",
            "org.fusesource.jansi.Ansi::cursor(int, int)",
            "org.fusesource.jansi.Ansi::cursorUp(int)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])",
            "org.fusesource.jansi.io.FastBufferedOutputStream::write(byte[], int, int)",
            "org.fusesource.jansi.Ansi::cursor(int, int)",
            "org.fusesource.jansi.Ansi::cursorMove(int, int)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.io.FastBufferedOutputStream::write(byte[], int, int)",
            "org.fusesource.jansi.Ansi::cursor(int, int)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::cursorMove(int, int)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseScreen(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseLine(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processSetAttribute(int)",
            "org.fusesource.jansi.AnsiConsole::getBoolean(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::testAnsi(boolean)",
            "org.fusesource.jansi.io.ColorsAnsiProcessor::processEscapeCommand(java.util.ArrayList, int)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseScreen(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseLine(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processSetAttribute(int)",
            "org.fusesource.jansi.AnsiConsole::getBoolean(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::testAnsi(boolean)",
            "org.fusesource.jansi.io.ColorsAnsiProcessor::processEscapeCommand(java.util.ArrayList, int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseScreen(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseLine(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processSetAttribute(int)",
            "org.fusesource.jansi.AnsiConsole::getBoolean(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::testAnsi(boolean)",
            "org.fusesource.jansi.io.ColorsAnsiProcessor::processEscapeCommand(java.util.ArrayList, int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])",
            "org.fusesource.jansi.io.FastBufferedOutputStream::write(byte[], int, int)",
            "org.fusesource.jansi.Ansi::cursor(int, int)",
            "org.fusesource.jansi.Ansi::scrollDown(int)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String, java.lang.Object[])",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])",
            "org.fusesource.jansi.io.FastBufferedOutputStream::write(byte[], int, int)",
            "org.fusesource.jansi.Ansi::cursor(int, int)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.io.FastBufferedOutputStream::write(byte[], int, int)",
            "org.fusesource.jansi.Ansi::cursor(int, int)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.Ansi::render(java.lang.String, java.lang.Object[])"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseScreen(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseLine(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processSetAttribute(int)",
            "org.fusesource.jansi.AnsiConsole::getBoolean(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::testAnsi(boolean)",
            "org.fusesource.jansi.io.ColorsAnsiProcessor::processEscapeCommand(java.util.ArrayList, int)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseScreen(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseLine(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processSetAttribute(int)",
            "org.fusesource.jansi.AnsiConsole::getBoolean(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::testAnsi(boolean)",
            "org.fusesource.jansi.io.ColorsAnsiProcessor::processEscapeCommand(java.util.ArrayList, int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseScreen(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseLine(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processSetAttribute(int)",
            "org.fusesource.jansi.AnsiConsole::getBoolean(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::testAnsi(boolean)",
            "org.fusesource.jansi.io.ColorsAnsiProcessor::processEscapeCommand(java.util.ArrayList, int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])",
            "org.fusesource.jansi.io.FastBufferedOutputStream::write(byte[], int, int)",
            "org.fusesource.jansi.Ansi::cursor(int, int)",
            "org.fusesource.jansi.Ansi::cursorLeft(int)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])",
            "org.fusesource.jansi.io.FastBufferedOutputStream::write(byte[], int, int)",
            "org.fusesource.jansi.Ansi::cursor(int, int)",
            "org.fusesource.jansi.Ansi::cursorMove(int, int)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.io.FastBufferedOutputStream::write(byte[], int, int)",
            "org.fusesource.jansi.Ansi::cursor(int, int)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::cursorMove(int, int)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.Ansi::render(java.lang.String, java.lang.Object[])"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseLine(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseScreen(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processSetAttribute(int)",
            "org.fusesource.jansi.AnsiConsole::getBoolean(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::testAnsi(boolean)",
            "org.fusesource.jansi.io.ColorsAnsiProcessor::processEscapeCommand(java.util.ArrayList, int)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseLine(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseScreen(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processSetAttribute(int)",
            "org.fusesource.jansi.AnsiConsole::getBoolean(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::testAnsi(boolean)",
            "org.fusesource.jansi.io.ColorsAnsiProcessor::processEscapeCommand(java.util.ArrayList, int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String, java.lang.Object[])",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiProcessor::optionInt(java.util.ArrayList, int)",
            "org.fusesource.jansi.internal.OSInfo::translateOSNameToFolderName(java.lang.String)",
            "org.fusesource.jansi.AnsiRenderer::render(java.lang.String, java.lang.Appendable)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseLine(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processEraseScreen(int)",
            "org.fusesource.jansi.io.WindowsAnsiProcessor::processSetAttribute(int)",
            "org.fusesource.jansi.AnsiConsole::getBoolean(java.lang.String)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.AnsiMain::testAnsi(boolean)",
            "org.fusesource.jansi.io.ColorsAnsiProcessor::processEscapeCommand(java.util.ArrayList, int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])",
            "org.fusesource.jansi.io.FastBufferedOutputStream::write(byte[], int, int)",
            "org.fusesource.jansi.Ansi::cursor(int, int)",
            "org.fusesource.jansi.Ansi::cursorRight(int)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::render(java.lang.String, java.lang.Object[])",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])",
            "org.fusesource.jansi.io.FastBufferedOutputStream::write(byte[], int, int)",
            "org.fusesource.jansi.Ansi::cursor(int, int)",
            "org.fusesource.jansi.Ansi::cursorMove(int, int)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.fusesource.jansi.io.AnsiOutputStream::write(int)",
            "org.fusesource.jansi.AnsiMain::main(java.lang.String[])",
            "org.fusesource.jansi.io.FastBufferedOutputStream::write(byte[], int, int)",
            "org.fusesource.jansi.Ansi::cursor(int, int)",
            "org.fusesource.jansi.internal.Kernel32::readConsoleKeyInput(long, int, boolean)",
            "org.fusesource.jansi.Ansi::cursorMove(int, int)",
            "org.fusesource.jansi.Ansi::render(java.lang.String)",
            "org.fusesource.jansi.internal.OSInfo::main(java.lang.String[])"
        ]
    }
]