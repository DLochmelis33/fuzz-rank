[
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.printer.DelegatingOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.printer.DelegatingOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.SearchCommandHandler::performAdditionalSearch(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.3(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.3(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.printer.DelegatingOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.SearchCommandHandler::performAdditionalSearch(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::combineResponses(it.mulders.mcs.search.SearchResponse.Response, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.search.SearchQuery::search(java.lang.String)",
            "it.mulders.mcs.cli.ClasspathVersionProvider::getVersion()",
            "it.mulders.mcs.cli.CommandClassFactory::create(java.lang.Class)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.0(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.cli.ClasspathVersionProvider::getVersion()",
            "it.mulders.mcs.cli.CommandClassFactory::create(java.lang.Class)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.2(it.mulders.mcs.search.SearchResponse.Response, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.Cli.SearchCommand::call()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.CommandClassFactory::create(java.lang.Class)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.2(it.mulders.mcs.search.SearchResponse.Response, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.ClasspathVersionProvider::getVersion()",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.3(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.Cli.SearchCommand::call()"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.printer.DelegatingOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.printer.DelegatingOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.SearchCommandHandler::performAdditionalSearch(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.3(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.3(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.printer.DelegatingOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.SearchCommandHandler::performAdditionalSearch(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::combineResponses(it.mulders.mcs.search.SearchResponse.Response, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.search.SearchQuery::search(java.lang.String)",
            "it.mulders.mcs.cli.ClasspathVersionProvider::getVersion()",
            "it.mulders.mcs.cli.CommandClassFactory::create(java.lang.Class)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.0(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.cli.ClasspathVersionProvider::getVersion()",
            "it.mulders.mcs.cli.CommandClassFactory::create(java.lang.Class)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.2(it.mulders.mcs.search.SearchResponse.Response, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.Cli.SearchCommand::call()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.CommandClassFactory::create(java.lang.Class)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.2(it.mulders.mcs.search.SearchResponse.Response, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.ClasspathVersionProvider::getVersion()",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.3(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.Cli.SearchCommand::call()"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.printer.DelegatingOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.printer.DelegatingOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.SearchCommandHandler::performAdditionalSearch(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.0(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.3(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.printer.DelegatingOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.SearchCommandHandler::performAdditionalSearch(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::combineResponses(it.mulders.mcs.search.SearchResponse.Response, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.search.SearchQuery::search(java.lang.String)",
            "it.mulders.mcs.cli.ClasspathVersionProvider::getVersion()",
            "it.mulders.mcs.cli.CommandClassFactory::create(java.lang.Class)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.0(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.cli.ClasspathVersionProvider::getVersion()",
            "it.mulders.mcs.cli.CommandClassFactory::create(java.lang.Class)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.2(it.mulders.mcs.search.SearchResponse.Response, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.Cli.SearchCommand::call()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.CommandClassFactory::create(java.lang.Class)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.2(it.mulders.mcs.search.SearchResponse.Response, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.ClasspathVersionProvider::getVersion()",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.0(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.Cli.SearchCommand::call()"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.printer.DelegatingOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.printer.DelegatingOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.SearchCommandHandler::performAdditionalSearch(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.0(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.3(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "it.mulders.mcs.search.printer.TabularOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.printer.DelegatingOutputPrinter::print(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response, java.io.PrintStream)",
            "it.mulders.mcs.search.SearchCommandHandler::performAdditionalSearch(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::combineResponses(it.mulders.mcs.search.SearchResponse.Response, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.search.SearchQuery::search(java.lang.String)",
            "it.mulders.mcs.cli.ClasspathVersionProvider::getVersion()",
            "it.mulders.mcs.cli.CommandClassFactory::create(java.lang.Class)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.3(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.cli.ClasspathVersionProvider::getVersion()",
            "it.mulders.mcs.cli.CommandClassFactory::create(java.lang.Class)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.2(it.mulders.mcs.search.SearchResponse.Response, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.Cli.SearchCommand::call()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "it.mulders.mcs.search.SearchCommandHandler::lambda.search.1(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.CommandClassFactory::create(java.lang.Class)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.2(it.mulders.mcs.search.SearchResponse.Response, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.ClasspathVersionProvider::getVersion()",
            "it.mulders.mcs.common.SearchResponseBodyHandler::toSearchResponse(java.io.InputStream)",
            "it.mulders.mcs.search.SearchCommandHandler::lambda.performAdditionalSearch.3(it.mulders.mcs.search.SearchQuery, it.mulders.mcs.search.SearchResponse.Response)",
            "it.mulders.mcs.cli.Cli.SearchCommand::call()"
        ]
    }
]