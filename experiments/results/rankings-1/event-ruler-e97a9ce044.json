[
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.io.Reader)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.6(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)",
            "software.amazon.event.ruler.ByteMachine::extendShortcutTransition(software.amazon.event.ruler.ByteState, software.amazon.event.ruler.ByteTransition, software.amazon.event.ruler.input.InputCharacter, int)",
            "software.amazon.event.ruler.NameState::addSubRule(java.lang.Object, double, software.amazon.event.ruler.Patterns, boolean)",
            "software.amazon.event.ruler.Event::traverseArray(com.fasterxml.jackson.core.JsonParser, java.util.TreeMap, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.JsonRuleCompiler::parseObject(java.util.List, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::loadObject(com.fasterxml.jackson.databind.JsonNode, java.util.Map, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.Ruler::matchesOneOf(com.fasterxml.jackson.databind.JsonNode, java.util.List)",
            "software.amazon.event.ruler.ByteMachine::addSuffixMatch(byte[], java.util.Set, java.util.Map)",
            "software.amazon.event.ruler.CompoundByteTransition::getTransitions()",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::writeRules(java.util.Map, java.util.List, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.ByteMachine::addMatchReferences(software.amazon.event.ruler.ByteMatch)",
            "software.amazon.event.ruler.RuleCompiler::writeRules(java.util.Map, java.lang.String, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.GenericMachine::addStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set[])"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.8(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)",
            "software.amazon.event.ruler.ByteMachine::extendShortcutTransition(software.amazon.event.ruler.ByteState, software.amazon.event.ruler.ByteTransition, software.amazon.event.ruler.input.InputCharacter, int)",
            "software.amazon.event.ruler.NameState::addSubRule(java.lang.Object, double, software.amazon.event.ruler.Patterns, boolean)",
            "software.amazon.event.ruler.Event::traverseArray(com.fasterxml.jackson.core.JsonParser, java.util.TreeMap, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.JsonRuleCompiler::parseObject(java.util.List, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::loadObject(com.fasterxml.jackson.databind.JsonNode, java.util.Map, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.Ruler::matchesOneOf(com.fasterxml.jackson.databind.JsonNode, java.util.List)",
            "software.amazon.event.ruler.ByteMachine::addSuffixMatch(byte[], java.util.Set, java.util.Map)",
            "software.amazon.event.ruler.CompoundByteTransition::getTransitions()",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::writeRules(java.util.Map, java.util.List, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.ByteMachine::addMatchReferences(software.amazon.event.ruler.ByteMatch)",
            "software.amazon.event.ruler.RuleCompiler::writeRules(java.util.Map, java.lang.String, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.GenericMachine::addStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set[])",
            "software.amazon.event.ruler.GenericMachine::deleteStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set)",
            "software.amazon.event.ruler.ByteMachine::doTransitionOn(java.lang.String, java.util.Set, boolean)",
            "software.amazon.event.ruler.ACFinder::addNameState(java.util.Set, software.amazon.event.ruler.NameState, software.amazon.event.ruler.Patterns, software.amazon.event.ruler.ACTask, int, software.amazon.event.ruler.ArrayMembership)",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::parseRuleObject(java.util.Map, java.util.Deque, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::doFlatten(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.8(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.lang.String)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)",
            "software.amazon.event.ruler.ByteMachine::extendShortcutTransition(software.amazon.event.ruler.ByteState, software.amazon.event.ruler.ByteTransition, software.amazon.event.ruler.input.InputCharacter, int)",
            "software.amazon.event.ruler.NameState::addSubRule(java.lang.Object, double, software.amazon.event.ruler.Patterns, boolean)",
            "software.amazon.event.ruler.Event::traverseArray(com.fasterxml.jackson.core.JsonParser, java.util.TreeMap, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.JsonRuleCompiler::parseObject(java.util.List, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::loadObject(com.fasterxml.jackson.databind.JsonNode, java.util.Map, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.Ruler::matchesOneOf(com.fasterxml.jackson.databind.JsonNode, java.util.List)",
            "software.amazon.event.ruler.ByteMachine::addSuffixMatch(byte[], java.util.Set, java.util.Map)",
            "software.amazon.event.ruler.CompoundByteTransition::getTransitions()",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::writeRules(java.util.Map, java.util.List, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.ByteMachine::addMatchReferences(software.amazon.event.ruler.ByteMatch)",
            "software.amazon.event.ruler.RuleCompiler::writeRules(java.util.Map, java.lang.String, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.GenericMachine::addStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set[])",
            "software.amazon.event.ruler.GenericMachine::deleteStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set)",
            "software.amazon.event.ruler.ByteMachine::doTransitionOn(java.lang.String, java.util.Set, boolean)",
            "software.amazon.event.ruler.ACFinder::addNameState(java.util.Set, software.amazon.event.ruler.NameState, software.amazon.event.ruler.Patterns, software.amazon.event.ruler.ACTask, int, software.amazon.event.ruler.ArrayMembership)",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::parseRuleObject(java.util.Map, java.util.Deque, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::doFlatten(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::addStep(java.util.List, java.util.Map, java.lang.Object)",
            "software.amazon.event.ruler.MachineComplexityEvaluator::evaluate(software.amazon.event.ruler.ByteState)",
            "software.amazon.event.ruler.Finder::moveFromWithPriorCandidates(java.util.Set, software.amazon.event.ruler.NameState, software.amazon.event.ruler.Patterns, int, software.amazon.event.ruler.Task)",
            "software.amazon.event.ruler.ACFinder::tryStep(software.amazon.event.ruler.ACTask)",
            "software.amazon.event.ruler.RuleCompiler::parseObject(java.util.Map, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.NameState::gatherObjects(java.util.Set, int)",
            "software.amazon.event.ruler.Finder::tryValueMatching(software.amazon.event.ruler.Task, software.amazon.event.ruler.Step)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.8(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(java.lang.String)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::approximateObjectCount()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::approximateObjectCount()"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.7(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.6(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)",
            "software.amazon.event.ruler.ByteMachine::extendShortcutTransition(software.amazon.event.ruler.ByteState, software.amazon.event.ruler.ByteTransition, software.amazon.event.ruler.input.InputCharacter, int)",
            "software.amazon.event.ruler.NameState::addSubRule(java.lang.Object, double, software.amazon.event.ruler.Patterns, boolean)",
            "software.amazon.event.ruler.Event::traverseArray(com.fasterxml.jackson.core.JsonParser, java.util.TreeMap, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.JsonRuleCompiler::parseObject(java.util.List, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::loadObject(com.fasterxml.jackson.databind.JsonNode, java.util.Map, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.Ruler::matchesOneOf(com.fasterxml.jackson.databind.JsonNode, java.util.List)",
            "software.amazon.event.ruler.ByteMachine::addSuffixMatch(byte[], java.util.Set, java.util.Map)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::writeRules(java.util.Map, java.util.List, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.ByteMachine::addMatchReferences(software.amazon.event.ruler.ByteMatch)",
            "software.amazon.event.ruler.RuleCompiler::writeRules(java.util.Map, java.lang.String, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.GenericMachine::addStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set[])"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.6(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)",
            "software.amazon.event.ruler.ByteMachine::extendShortcutTransition(software.amazon.event.ruler.ByteState, software.amazon.event.ruler.ByteTransition, software.amazon.event.ruler.input.InputCharacter, int)",
            "software.amazon.event.ruler.NameState::addSubRule(java.lang.Object, double, software.amazon.event.ruler.Patterns, boolean)",
            "software.amazon.event.ruler.Event::traverseArray(com.fasterxml.jackson.core.JsonParser, java.util.TreeMap, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.JsonRuleCompiler::parseObject(java.util.List, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::loadObject(com.fasterxml.jackson.databind.JsonNode, java.util.Map, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.Ruler::matchesOneOf(com.fasterxml.jackson.databind.JsonNode, java.util.List)",
            "software.amazon.event.ruler.ByteMachine::addSuffixMatch(byte[], java.util.Set, java.util.Map)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::writeRules(java.util.Map, java.util.List, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.ByteMachine::addMatchReferences(software.amazon.event.ruler.ByteMatch)",
            "software.amazon.event.ruler.RuleCompiler::writeRules(java.util.Map, java.lang.String, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.GenericMachine::addStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set[])",
            "software.amazon.event.ruler.GenericMachine::deleteStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set)",
            "software.amazon.event.ruler.ByteMachine::doTransitionOn(java.lang.String, java.util.Set, boolean)",
            "software.amazon.event.ruler.ACFinder::addNameState(java.util.Set, software.amazon.event.ruler.NameState, software.amazon.event.ruler.Patterns, software.amazon.event.ruler.ACTask, int, software.amazon.event.ruler.ArrayMembership)",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::parseRuleObject(java.util.Map, java.util.Deque, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::doFlatten(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.6(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.lang.String)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)",
            "software.amazon.event.ruler.ByteMachine::extendShortcutTransition(software.amazon.event.ruler.ByteState, software.amazon.event.ruler.ByteTransition, software.amazon.event.ruler.input.InputCharacter, int)",
            "software.amazon.event.ruler.NameState::addSubRule(java.lang.Object, double, software.amazon.event.ruler.Patterns, boolean)",
            "software.amazon.event.ruler.Event::traverseArray(com.fasterxml.jackson.core.JsonParser, java.util.TreeMap, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.JsonRuleCompiler::parseObject(java.util.List, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::loadObject(com.fasterxml.jackson.databind.JsonNode, java.util.Map, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.Ruler::matchesOneOf(com.fasterxml.jackson.databind.JsonNode, java.util.List)",
            "software.amazon.event.ruler.ByteMachine::addSuffixMatch(byte[], java.util.Set, java.util.Map)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::writeRules(java.util.Map, java.util.List, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.ByteMachine::addMatchReferences(software.amazon.event.ruler.ByteMatch)",
            "software.amazon.event.ruler.RuleCompiler::writeRules(java.util.Map, java.lang.String, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.GenericMachine::addStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set[])",
            "software.amazon.event.ruler.GenericMachine::deleteStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set)",
            "software.amazon.event.ruler.ByteMachine::doTransitionOn(java.lang.String, java.util.Set, boolean)",
            "software.amazon.event.ruler.ACFinder::addNameState(java.util.Set, software.amazon.event.ruler.NameState, software.amazon.event.ruler.Patterns, software.amazon.event.ruler.ACTask, int, software.amazon.event.ruler.ArrayMembership)",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::parseRuleObject(java.util.Map, java.util.Deque, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::doFlatten(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::addStep(java.util.List, java.util.Map, java.lang.Object)",
            "software.amazon.event.ruler.MachineComplexityEvaluator::evaluate(software.amazon.event.ruler.ByteState)",
            "software.amazon.event.ruler.Finder::moveFromWithPriorCandidates(java.util.Set, software.amazon.event.ruler.NameState, software.amazon.event.ruler.Patterns, int, software.amazon.event.ruler.Task)",
            "software.amazon.event.ruler.ACFinder::tryStep(software.amazon.event.ruler.ACTask)",
            "software.amazon.event.ruler.RuleCompiler::parseObject(java.util.Map, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.NameState::gatherObjects(java.util.Set, int)",
            "software.amazon.event.ruler.Finder::tryValueMatching(software.amazon.event.ruler.Task, software.amazon.event.ruler.Step)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.io.InputStream)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::approximateObjectCount()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.io.InputStream)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::approximateObjectCount()"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.8(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.8(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)",
            "software.amazon.event.ruler.ByteMachine::extendShortcutTransition(software.amazon.event.ruler.ByteState, software.amazon.event.ruler.ByteTransition, software.amazon.event.ruler.input.InputCharacter, int)",
            "software.amazon.event.ruler.NameState::addSubRule(java.lang.Object, double, software.amazon.event.ruler.Patterns, boolean)",
            "software.amazon.event.ruler.Event::traverseArray(com.fasterxml.jackson.core.JsonParser, java.util.TreeMap, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.JsonRuleCompiler::parseObject(java.util.List, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::loadObject(com.fasterxml.jackson.databind.JsonNode, java.util.Map, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.Ruler::matchesOneOf(com.fasterxml.jackson.databind.JsonNode, java.util.List)",
            "software.amazon.event.ruler.ByteMachine::addSuffixMatch(byte[], java.util.Set, java.util.Map)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::writeRules(java.util.Map, java.util.List, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.ByteMachine::addMatchReferences(software.amazon.event.ruler.ByteMatch)",
            "software.amazon.event.ruler.RuleCompiler::writeRules(java.util.Map, java.lang.String, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.GenericMachine::addStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set[])"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.io.InputStream)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.7(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)",
            "software.amazon.event.ruler.ByteMachine::extendShortcutTransition(software.amazon.event.ruler.ByteState, software.amazon.event.ruler.ByteTransition, software.amazon.event.ruler.input.InputCharacter, int)",
            "software.amazon.event.ruler.NameState::addSubRule(java.lang.Object, double, software.amazon.event.ruler.Patterns, boolean)",
            "software.amazon.event.ruler.Event::traverseArray(com.fasterxml.jackson.core.JsonParser, java.util.TreeMap, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.JsonRuleCompiler::parseObject(java.util.List, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::loadObject(com.fasterxml.jackson.databind.JsonNode, java.util.Map, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.Ruler::matchesOneOf(com.fasterxml.jackson.databind.JsonNode, java.util.List)",
            "software.amazon.event.ruler.ByteMachine::addSuffixMatch(byte[], java.util.Set, java.util.Map)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::writeRules(java.util.Map, java.util.List, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.ByteMachine::addMatchReferences(software.amazon.event.ruler.ByteMatch)",
            "software.amazon.event.ruler.RuleCompiler::writeRules(java.util.Map, java.lang.String, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.GenericMachine::addStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set[])",
            "software.amazon.event.ruler.GenericMachine::deleteStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set)",
            "software.amazon.event.ruler.ByteMachine::doTransitionOn(java.lang.String, java.util.Set, boolean)",
            "software.amazon.event.ruler.ACFinder::addNameState(java.util.Set, software.amazon.event.ruler.NameState, software.amazon.event.ruler.Patterns, software.amazon.event.ruler.ACTask, int, software.amazon.event.ruler.ArrayMembership)",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::parseRuleObject(java.util.Map, java.util.Deque, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::doFlatten(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.7(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.io.Reader)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)",
            "software.amazon.event.ruler.ByteMachine::extendShortcutTransition(software.amazon.event.ruler.ByteState, software.amazon.event.ruler.ByteTransition, software.amazon.event.ruler.input.InputCharacter, int)",
            "software.amazon.event.ruler.NameState::addSubRule(java.lang.Object, double, software.amazon.event.ruler.Patterns, boolean)",
            "software.amazon.event.ruler.Event::traverseArray(com.fasterxml.jackson.core.JsonParser, java.util.TreeMap, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.JsonRuleCompiler::parseObject(java.util.List, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::loadObject(com.fasterxml.jackson.databind.JsonNode, java.util.Map, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.Ruler::matchesOneOf(com.fasterxml.jackson.databind.JsonNode, java.util.List)",
            "software.amazon.event.ruler.ByteMachine::addSuffixMatch(byte[], java.util.Set, java.util.Map)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::writeRules(java.util.Map, java.util.List, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.ByteMachine::addMatchReferences(software.amazon.event.ruler.ByteMatch)",
            "software.amazon.event.ruler.RuleCompiler::writeRules(java.util.Map, java.lang.String, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.GenericMachine::addStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set[])",
            "software.amazon.event.ruler.GenericMachine::deleteStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set)",
            "software.amazon.event.ruler.ByteMachine::doTransitionOn(java.lang.String, java.util.Set, boolean)",
            "software.amazon.event.ruler.ACFinder::addNameState(java.util.Set, software.amazon.event.ruler.NameState, software.amazon.event.ruler.Patterns, software.amazon.event.ruler.ACTask, int, software.amazon.event.ruler.ArrayMembership)",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::parseRuleObject(java.util.Map, java.util.Deque, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::doFlatten(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::addStep(java.util.List, java.util.Map, java.lang.Object)",
            "software.amazon.event.ruler.MachineComplexityEvaluator::evaluate(software.amazon.event.ruler.ByteState)",
            "software.amazon.event.ruler.Finder::moveFromWithPriorCandidates(java.util.Set, software.amazon.event.ruler.NameState, software.amazon.event.ruler.Patterns, int, software.amazon.event.ruler.Task)",
            "software.amazon.event.ruler.ACFinder::tryStep(software.amazon.event.ruler.ACTask)",
            "software.amazon.event.ruler.RuleCompiler::parseObject(java.util.Map, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.NameState::gatherObjects(java.util.Set, int)",
            "software.amazon.event.ruler.Finder::tryValueMatching(software.amazon.event.ruler.Task, software.amazon.event.ruler.Step)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.lang.String)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::approximateObjectCount()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.io.InputStream)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::approximateObjectCount()"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.io.Reader)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.7(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)",
            "software.amazon.event.ruler.ByteMachine::extendShortcutTransition(software.amazon.event.ruler.ByteState, software.amazon.event.ruler.ByteTransition, software.amazon.event.ruler.input.InputCharacter, int)",
            "software.amazon.event.ruler.NameState::addSubRule(java.lang.Object, double, software.amazon.event.ruler.Patterns, boolean)",
            "software.amazon.event.ruler.Event::traverseArray(com.fasterxml.jackson.core.JsonParser, java.util.TreeMap, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.JsonRuleCompiler::parseObject(java.util.List, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::loadObject(com.fasterxml.jackson.databind.JsonNode, java.util.Map, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.Ruler::matchesOneOf(com.fasterxml.jackson.databind.JsonNode, java.util.List)",
            "software.amazon.event.ruler.ByteMachine::addSuffixMatch(byte[], java.util.Set, java.util.Map)",
            "software.amazon.event.ruler.CompoundByteTransition::getTransitions()",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::writeRules(java.util.Map, java.util.List, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.ByteMachine::addMatchReferences(software.amazon.event.ruler.ByteMatch)",
            "software.amazon.event.ruler.RuleCompiler::writeRules(java.util.Map, java.lang.String, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.GenericMachine::addStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set[])"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.lang.String)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.8(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)",
            "software.amazon.event.ruler.ByteMachine::extendShortcutTransition(software.amazon.event.ruler.ByteState, software.amazon.event.ruler.ByteTransition, software.amazon.event.ruler.input.InputCharacter, int)",
            "software.amazon.event.ruler.NameState::addSubRule(java.lang.Object, double, software.amazon.event.ruler.Patterns, boolean)",
            "software.amazon.event.ruler.Event::traverseArray(com.fasterxml.jackson.core.JsonParser, java.util.TreeMap, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.JsonRuleCompiler::parseObject(java.util.List, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::loadObject(com.fasterxml.jackson.databind.JsonNode, java.util.Map, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.Ruler::matchesOneOf(com.fasterxml.jackson.databind.JsonNode, java.util.List)",
            "software.amazon.event.ruler.ByteMachine::addSuffixMatch(byte[], java.util.Set, java.util.Map)",
            "software.amazon.event.ruler.CompoundByteTransition::getTransitions()",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::writeRules(java.util.Map, java.util.List, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.ByteMachine::addMatchReferences(software.amazon.event.ruler.ByteMatch)",
            "software.amazon.event.ruler.RuleCompiler::writeRules(java.util.Map, java.lang.String, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.GenericMachine::addStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set[])",
            "software.amazon.event.ruler.GenericMachine::deleteStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set)",
            "software.amazon.event.ruler.ByteMachine::doTransitionOn(java.lang.String, java.util.Set, boolean)",
            "software.amazon.event.ruler.ACFinder::addNameState(java.util.Set, software.amazon.event.ruler.NameState, software.amazon.event.ruler.Patterns, software.amazon.event.ruler.ACTask, int, software.amazon.event.ruler.ArrayMembership)",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::parseRuleObject(java.util.Map, java.util.Deque, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::doFlatten(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.io.Reader)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.io.InputStream)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)"
        ]
    },
    {
        "strategyName": "BraindeadWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "software.amazon.event.ruler.ByteState::getCeilings()",
            "software.amazon.event.ruler.GenericMachine::deletePattern(software.amazon.event.ruler.NameState, java.lang.String, software.amazon.event.ruler.Patterns)",
            "software.amazon.event.ruler.ByteMachine::extendShortcutTransition(software.amazon.event.ruler.ByteState, software.amazon.event.ruler.ByteTransition, software.amazon.event.ruler.input.InputCharacter, int)",
            "software.amazon.event.ruler.NameState::addSubRule(java.lang.Object, double, software.amazon.event.ruler.Patterns, boolean)",
            "software.amazon.event.ruler.Event::traverseArray(com.fasterxml.jackson.core.JsonParser, java.util.TreeMap, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.JsonRuleCompiler::parseObject(java.util.List, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::loadObject(com.fasterxml.jackson.databind.JsonNode, java.util.Map, software.amazon.event.ruler.Event.Progress)",
            "software.amazon.event.ruler.Ruler::matchesOneOf(com.fasterxml.jackson.databind.JsonNode, java.util.List)",
            "software.amazon.event.ruler.ByteMachine::addSuffixMatch(byte[], java.util.Set, java.util.Map)",
            "software.amazon.event.ruler.CompoundByteTransition::getTransitions()",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::writeRules(java.util.Map, java.util.List, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.ByteMachine::addMatchReferences(software.amazon.event.ruler.ByteMatch)",
            "software.amazon.event.ruler.RuleCompiler::writeRules(java.util.Map, java.lang.String, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.GenericMachine::addStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set[])",
            "software.amazon.event.ruler.GenericMachine::deleteStep(software.amazon.event.ruler.NameState, java.util.List, int, java.util.Map, java.lang.Object, java.util.List, java.util.Set)",
            "software.amazon.event.ruler.ByteMachine::doTransitionOn(java.lang.String, java.util.Set, boolean)",
            "software.amazon.event.ruler.ACFinder::addNameState(java.util.Set, software.amazon.event.ruler.NameState, software.amazon.event.ruler.Patterns, software.amazon.event.ruler.ACTask, int, software.amazon.event.ruler.ArrayMembership)",
            "software.amazon.event.ruler.RuleCompiler.ListBasedRuleCompiler::parseRuleObject(java.util.Map, java.util.Deque, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.Event::doFlatten(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::addStep(java.util.List, java.util.Map, java.lang.Object)",
            "software.amazon.event.ruler.MachineComplexityEvaluator::evaluate(software.amazon.event.ruler.ByteState)",
            "software.amazon.event.ruler.Finder::moveFromWithPriorCandidates(java.util.Set, software.amazon.event.ruler.NameState, software.amazon.event.ruler.Patterns, int, software.amazon.event.ruler.Task)",
            "software.amazon.event.ruler.ACFinder::tryStep(software.amazon.event.ruler.ACTask)",
            "software.amazon.event.ruler.RuleCompiler::parseObject(java.util.Map, software.amazon.event.ruler.Path, com.fasterxml.jackson.core.JsonParser, boolean)",
            "software.amazon.event.ruler.NameState::gatherObjects(java.util.Set, int)",
            "software.amazon.event.ruler.Finder::tryValueMatching(software.amazon.event.ruler.Task, software.amazon.event.ruler.Step)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::lambda.deleteRule.7(java.lang.Object, java.util.Map)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::approximateObjectCount()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "software.amazon.event.ruler.Ruler::matchesRule(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::deleteRule(java.lang.Object, java.io.Reader)",
            "software.amazon.event.ruler.GenericMachine::evaluateComplexity(software.amazon.event.ruler.MachineComplexityEvaluator)",
            "software.amazon.event.ruler.Ruler::matches(java.lang.String, java.lang.String)",
            "software.amazon.event.ruler.GenericMachine::rulesForEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.GenericMachine::rulesForJSONEvent(com.fasterxml.jackson.databind.JsonNode)",
            "software.amazon.event.ruler.ByteMap::toString()",
            "software.amazon.event.ruler.GenericMachine::approximateObjectCount()"
        ]
    }
]