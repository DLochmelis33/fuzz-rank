[
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::ask_inner_get(java.lang.String, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ItalianDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getDynamicNoun(java.lang.String, com.force.i18n.Renameable, boolean, boolean)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::ask_inner_get(java.lang.String, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ItalianDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getDynamicNoun(java.lang.String, com.force.i18n.Renameable, boolean, boolean)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.grammar.parser.NounRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.HumanLanguage.Helper::getTranslationFallbackLanguageLocale(java.util.Locale)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunctionOverride(java.util.Locale)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LanguageProvider.Helper::<init>(com.force.i18n.HumanLanguage, java.util.List)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianAdjective::deriveDefaultString(com.force.i18n.grammar.AdjectiveForm, java.lang.String, com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.commons.util.collection.ExpandableArray::set(int, java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::writeJson(java.lang.Appendable, java.util.Collection, java.util.Set)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::put(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::escapeToHtml(java.lang.String, boolean)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.FinnishDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::escapeForMessageFormat(java.lang.String, java.lang.StringBuilder, boolean)",
            "com.force.i18n.commons.text.TextUtil::logValue(java.lang.String, java.lang.CharSequence)",
            "com.force.i18n.grammar.impl.AmharicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ArabicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.LanguageDictionary::getTerm(java.lang.String)",
            "com.force.i18n.grammar.parser.TermAttributes::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.BaseLocalizer::convertTo4DigitYear(java.text.DateFormat, java.util.Locale)",
            "com.force.i18n.grammar.LanguageDictionary::put(java.lang.String, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.parser.ModifierRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.NounFormMap::<init>(java.util.Collection)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::writeJsonOverrides(java.lang.Appendable, java.lang.String)",
            "com.force.i18n.grammar.Noun::getCloseButNoCigarString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.commons.text.TextUtil::trim(java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.grammar.impl.SimpleDeclension::getDefaultClassifier(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.commons.text.GenericTrieMatcher::match(java.util.List, int)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::ask_inner_get(java.lang.String, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ItalianDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getDynamicNoun(java.lang.String, com.force.i18n.Renameable, boolean, boolean)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.grammar.parser.NounRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.HumanLanguage.Helper::getTranslationFallbackLanguageLocale(java.util.Locale)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunctionOverride(java.util.Locale)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LanguageProvider.Helper::<init>(com.force.i18n.HumanLanguage, java.util.List)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianAdjective::deriveDefaultString(com.force.i18n.grammar.AdjectiveForm, java.lang.String, com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.commons.util.collection.ExpandableArray::set(int, java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::writeJson(java.lang.Appendable, java.util.Collection, java.util.Set)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::put(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::escapeToHtml(java.lang.String, boolean)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.FinnishDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::escapeForMessageFormat(java.lang.String, java.lang.StringBuilder, boolean)",
            "com.force.i18n.commons.text.TextUtil::logValue(java.lang.String, java.lang.CharSequence)",
            "com.force.i18n.grammar.impl.AmharicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ArabicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.LanguageDictionary::getTerm(java.lang.String)",
            "com.force.i18n.grammar.parser.TermAttributes::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.BaseLocalizer::convertTo4DigitYear(java.text.DateFormat, java.util.Locale)",
            "com.force.i18n.grammar.LanguageDictionary::put(java.lang.String, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.parser.ModifierRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.NounFormMap::<init>(java.util.Collection)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::writeJsonOverrides(java.lang.Appendable, java.lang.String)",
            "com.force.i18n.grammar.Noun::getCloseButNoCigarString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.commons.text.TextUtil::trim(java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.grammar.impl.SimpleDeclension::getDefaultClassifier(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.commons.text.GenericTrieMatcher::match(java.util.List, int)",
            "com.force.i18n.commons.text.TrieMatcher::match(java.lang.CharSequence, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.RefTag::getTermsFromLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Object)",
            "com.force.i18n.commons.text.TrieMatcher::replaceMultiple(java.lang.String, com.force.i18n.commons.text.TrieMatcher)",
            "com.force.i18n.grammar.impl.KoreanDeclension.KoreanNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::getArticleForm(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.Noun, com.force.i18n.grammar.NounForm, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.impl.HungarianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.RomanianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.TrieMatcher::contains(java.lang.CharSequence, int)",
            "com.force.i18n.grammar.impl.BalticDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.ArticledDeclension.LegacyArticledNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.GreekDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.CounterRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.settings.BasePropertyFile::inner_get(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::writeJson(java.lang.Appendable, boolean, java.util.Collection)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ModifierFormMap::getForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::parseAllDictionaries()",
            "com.force.i18n.I18nJavaUtil::dirLastModified(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.HumanLanguage.Helper::toFoldedCase(com.force.i18n.HumanLanguage, java.lang.String)",
            "com.force.i18n.grammar.impl.ArmenianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.BengaliDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.TurkicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.ModifierRefTag::extraJson(com.force.i18n.grammar.LanguageDictionary, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getNounOverride(com.force.i18n.grammar.Noun)",
            "com.force.i18n.commons.text.CaseFolder::toFoldedCase(char, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjective::deriveDefaultString(com.force.i18n.grammar.AdjectiveForm, java.lang.String, com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.RomanceDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.PluralRefTag::getData(com.force.i18n.grammar.LanguageDictionary, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.commons.text.TrieMatcher::<init>(java.util.List, java.util.List)",
            "com.force.i18n.grammar.impl.CatalanDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.FrenchDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.TermAttributes::getAdjectiveForm(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.Noun, com.force.i18n.grammar.NounForm, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.DefaultLanguagePluralRulesImpl::fromString(java.lang.String)",
            "com.force.i18n.commons.text.GenericTrieMatcher.GenericTrieMatch::<init>(int, java.util.List, java.util.List)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.HungarianDeclension::getRequiredCases()",
            "com.force.i18n.grammar.impl.GermanicDeclension.YiddishDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.ChoiceTag::addLabelData(java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::validateDst(com.force.i18n.LabelSet)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJsonTerm(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.GrammaticalTerm, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GenderRefTag::toJson(com.force.i18n.grammar.LanguageDictionary, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.grammar.impl.SimpleDeclension.PluralNounWithClassifier::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ModifierFormMap::<init>(java.util.Collection)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::<init>(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSet)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::appendLabel(java.lang.Appendable, java.lang.String, java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::getExactString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GenderRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.settings.SharedKeyMap::keySet()",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension.PersianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.Noun::toJson(java.lang.Appendable)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::shareKeys(com.force.i18n.settings.SharedKeyMap)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::write(com.force.i18n.grammar.GrammaticalLabelSet)",
            "com.force.i18n.commons.text.TrieMatch::<init>(int, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension.LuxembourgishDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::ask_inner_get(java.lang.String, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ItalianDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getDynamicNoun(java.lang.String, com.force.i18n.Renameable, boolean, boolean)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.grammar.parser.NounRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.HumanLanguage.Helper::getTranslationFallbackLanguageLocale(java.util.Locale)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunctionOverride(java.util.Locale)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LanguageProvider.Helper::<init>(com.force.i18n.HumanLanguage, java.util.List)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianAdjective::deriveDefaultString(com.force.i18n.grammar.AdjectiveForm, java.lang.String, com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.commons.util.collection.ExpandableArray::set(int, java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::writeJson(java.lang.Appendable, java.util.Collection, java.util.Set)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::put(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::escapeToHtml(java.lang.String, boolean)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.FinnishDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::escapeForMessageFormat(java.lang.String, java.lang.StringBuilder, boolean)",
            "com.force.i18n.commons.text.TextUtil::logValue(java.lang.String, java.lang.CharSequence)",
            "com.force.i18n.grammar.impl.AmharicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ArabicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.LanguageDictionary::getTerm(java.lang.String)",
            "com.force.i18n.grammar.parser.TermAttributes::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.BaseLocalizer::convertTo4DigitYear(java.text.DateFormat, java.util.Locale)",
            "com.force.i18n.grammar.LanguageDictionary::put(java.lang.String, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.parser.ModifierRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.NounFormMap::<init>(java.util.Collection)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::writeJsonOverrides(java.lang.Appendable, java.lang.String)",
            "com.force.i18n.grammar.Noun::getCloseButNoCigarString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.commons.text.TextUtil::trim(java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.grammar.impl.SimpleDeclension::getDefaultClassifier(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.commons.text.GenericTrieMatcher::match(java.util.List, int)",
            "com.force.i18n.commons.text.TrieMatcher::match(java.lang.CharSequence, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.RefTag::getTermsFromLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Object)",
            "com.force.i18n.commons.text.TrieMatcher::replaceMultiple(java.lang.String, com.force.i18n.commons.text.TrieMatcher)",
            "com.force.i18n.grammar.impl.KoreanDeclension.KoreanNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::getArticleForm(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.Noun, com.force.i18n.grammar.NounForm, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.impl.HungarianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.RomanianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.TrieMatcher::contains(java.lang.CharSequence, int)",
            "com.force.i18n.grammar.impl.BalticDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.ArticledDeclension.LegacyArticledNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.GreekDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.CounterRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.settings.BasePropertyFile::inner_get(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::writeJson(java.lang.Appendable, boolean, java.util.Collection)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ModifierFormMap::getForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::parseAllDictionaries()",
            "com.force.i18n.I18nJavaUtil::dirLastModified(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.HumanLanguage.Helper::toFoldedCase(com.force.i18n.HumanLanguage, java.lang.String)",
            "com.force.i18n.grammar.impl.ArmenianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.BengaliDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.TurkicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.ModifierRefTag::extraJson(com.force.i18n.grammar.LanguageDictionary, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getNounOverride(com.force.i18n.grammar.Noun)",
            "com.force.i18n.commons.text.CaseFolder::toFoldedCase(char, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjective::deriveDefaultString(com.force.i18n.grammar.AdjectiveForm, java.lang.String, com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.RomanceDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.PluralRefTag::getData(com.force.i18n.grammar.LanguageDictionary, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.commons.text.TrieMatcher::<init>(java.util.List, java.util.List)",
            "com.force.i18n.grammar.impl.CatalanDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.FrenchDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.TermAttributes::getAdjectiveForm(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.Noun, com.force.i18n.grammar.NounForm, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.DefaultLanguagePluralRulesImpl::fromString(java.lang.String)",
            "com.force.i18n.commons.text.GenericTrieMatcher.GenericTrieMatch::<init>(int, java.util.List, java.util.List)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.HungarianDeclension::getRequiredCases()",
            "com.force.i18n.grammar.impl.GermanicDeclension.YiddishDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.ChoiceTag::addLabelData(java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::validateDst(com.force.i18n.LabelSet)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJsonTerm(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.GrammaticalTerm, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GenderRefTag::toJson(com.force.i18n.grammar.LanguageDictionary, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.grammar.impl.SimpleDeclension.PluralNounWithClassifier::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ModifierFormMap::<init>(java.util.Collection)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::<init>(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSet)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::appendLabel(java.lang.Appendable, java.lang.String, java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::getExactString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GenderRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.settings.SharedKeyMap::keySet()",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getApproximateArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension.PersianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.Noun::toJson(java.lang.Appendable)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::shareKeys(com.force.i18n.settings.SharedKeyMap)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::write(com.force.i18n.grammar.GrammaticalLabelSet)",
            "com.force.i18n.commons.text.TrieMatch::<init>(int, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension.LuxembourgishDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)",
            "com.force.i18n.LabelSetImpl::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::putAll(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.settings.BasePropertyFile::getParamList(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAliases(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl)",
            "com.force.i18n.grammar.parser.RefTag::getTermsFromLabels(com.force.i18n.grammar.LanguageDictionary, java.lang.Iterable)",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream, boolean)",
            "com.force.i18n.DefaultHumanLanguageImpl.DefaultHumanLanguageImplProvider::<init>()",
            "com.force.i18n.HumanLanguage.Helper::getSystemEmailEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.impl.FinnishDeclension.EstonianDeclension::getRequiredCases()",
            "com.force.i18n.grammar.parser.ModifierRefTag::fixupModifier(com.force.i18n.grammar.parser.NounRefTag, com.force.i18n.grammar.parser.TermRefTag, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::doParseNumber(java.lang.String, java.text.NumberFormat)",
            "com.force.i18n.BaseLocalizer::doParseTime(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.NounModifier::toJson(java.lang.Appendable)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.ChoiceTag::setDefault(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXML(java.lang.Object, java.io.OutputStreamWriter)",
            "com.force.i18n.settings.SharedKeyMap::put(java.lang.Object, java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::getNounByPluralAlias(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.ModifierRefTag::getKey(java.lang.String, com.force.i18n.grammar.parser.NounRefTag, boolean, com.force.i18n.grammar.parser.TermAttributes)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension.SimplePluralNounWithGender::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticledPluralNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.BantuDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::get(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.impl.RomanianDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.SlavicDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.Noun::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.parser.ModifierRefTag::getForm(com.force.i18n.grammar.LanguageDictionary, boolean)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::shouldFixJdkDateBug(java.util.Locale)",
            "com.force.i18n.grammar.impl.GermanicDeclension.DutchDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.PluralRefTag::toJson(com.force.i18n.grammar.LanguageDictionary, java.util.List)",
            "com.force.i18n.settings.SharedKeyMap::setAt(int, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::getInputDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.text.TextUtil::initCap(java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resize(int)",
            "com.force.i18n.grammar.impl.GreekDeclension.GreekNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.LanguageDictionary::getNoun(java.lang.String, boolean)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getParamList(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.ConcurrentUniquefy::unique(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::logFallbackWarning(java.lang.Object, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.NounFormMap::getForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.text.CaseFolder::toFoldedCase(java.lang.String, boolean)",
            "com.force.i18n.LabelUtils.Nounifier::generateModifierToXmlTag(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.text.GenericUniquefy::unique(java.lang.Object)",
            "com.force.i18n.commons.text.Uniquefy::unique(java.lang.String)",
            "com.force.i18n.grammar.parser.GenderRefTag::getData(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.Renameable[])",
            "com.force.i18n.LocaleNameFormatter::appendNamePart(java.lang.StringBuilder, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap::remove(int)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension.PersianNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.DefaultHumanLanguageImpl.DefaultHumanLanguageImplProvider::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::error(java.lang.String, java.lang.String)",
            "com.force.i18n.SimpleLocaleAttributesUtil::<init>(java.lang.Iterable)",
            "com.force.i18n.commons.util.collection.IntHashMap::rehash()",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::resetMap(java.util.Collection, boolean)",
            "com.force.i18n.grammar.LanguageDictionary::forAllTerms(com.force.i18n.grammar.GrammaticalTerm.TermType, java.util.function.BiConsumer)",
            "com.force.i18n.BaseLocalizer::getTimeFormatHelper(java.text.DateFormat, int, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, boolean)",
            "com.force.i18n.grammar.impl.FinnishDeclension::getRequiredCases()",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianArticle::validate(java.lang.String)",
            "com.force.i18n.grammar.parser.NounRefTag::makeArticled(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.PluralRefTag::toString(com.force.i18n.grammar.LanguageDictionary, boolean, java.lang.Object[], com.force.i18n.Renameable[])",
            "com.force.i18n.settings.BasePropertyFile::get(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::set2DigitYearStart(java.text.DateFormat, java.util.TimeZone)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::getAllDefinedValues()",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanDeclension::formLowercaseNounForm(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.GermanicDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.HungarianDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.RomanianDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::contains(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.IntHashMap::<init>(int, float)",
            "com.force.i18n.grammar.impl.HungarianDeclension::getArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(char)",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.RomanceDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.grammar.Noun::getDefaultString(boolean)",
            "com.force.i18n.grammar.impl.RomanceDeclension.RomanceNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::getCacheBuilder(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.grammar.parser.NounRefTag::resolveNoun(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.impl.DravidianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.grammar.Adjective::validate(java.lang.String)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.ArticledDeclension.LegacyArticledNoun::<init>(com.force.i18n.grammar.ArticledDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticledPluralNoun::<init>(com.force.i18n.grammar.ArticledDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl.CompositePropertyFileDataImpl::getSection(java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getStringThrow(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, com.force.i18n.Renameable[], java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.BalticDeclension.BalticAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.BantuDeclension.BantuAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::<init>(com.force.i18n.grammar.impl.BulgarianDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexArticledNoun::<init>(com.force.i18n.grammar.ArticledDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexNoun::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.EnglishDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.FinnishDeclension.FinnishAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicNoun::<init>(com.force.i18n.grammar.impl.GermanicDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension.IndoAryanAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.MalayoPolynesianDeclension.HawaiianDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.RomanceDeclension.RomanceNoun::<init>(com.force.i18n.grammar.impl.RomanceDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.RomanceDeclension::getArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::<init>(com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension.PersianNoun::<init>(com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.parser.AdjectiveRefTag::getNewModifierRef(com.force.i18n.grammar.parser.NounRefTag, com.force.i18n.grammar.parser.TermRefTag, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.AdnominalRefTag::getWithResolvedNounTag(com.force.i18n.grammar.parser.NounRefTag)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.impl.ArabicDeclension::addAlifForAccusative(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::setNounOverride(com.force.i18n.grammar.Noun, com.force.i18n.grammar.Noun, double)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::getSAXParser(boolean)",
            "com.force.i18n.settings.MapPropertyFileData::put(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::isEmptyOrWhitespace(java.lang.CharSequence)",
            "com.force.i18n.commons.util.collection.IntHashMap::put(int, java.lang.Object)",
            "com.force.i18n.grammar.impl.EnglishDeclension.EnglishArticle::setString(com.force.i18n.grammar.ArticleForm, java.lang.String)",
            "com.force.i18n.grammar.impl.KoreanDeclension.KoreanAdjective::setString(com.force.i18n.grammar.AdjectiveForm, java.lang.String)",
            "com.force.i18n.grammar.impl.MalayoPolynesianDeclension.HawaiianDeclension.HawaiianArticle::setString(com.force.i18n.grammar.ArticleForm, java.lang.String)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.impl.GreekDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::subArray(java.lang.Object[], int, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::makeLabelHintIfRequested(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.parser.RefTag::appendJsonLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Appendable, java.lang.Object, java.util.Set)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::writeJson(java.lang.Appendable, com.force.i18n.grammar.RenamingProvider, com.force.i18n.grammar.LanguageDictionary, java.util.Collection)",
            "com.force.i18n.grammar.LanguageDictionary::format(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean, boolean)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAlias(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl, com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam, java.util.Set)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::convertEscapedToUnicode(java.lang.String)",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean, boolean)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils.Nounifier::generateNounToXmlTag(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SlavicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Adjective::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::copyFallbackTerms(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::finishParsingLabelsNew(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::write(com.force.i18n.HumanLanguage, java.io.File, boolean, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getDefaultFileEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(com.force.i18n.commons.util.collection.ExpandableArray)",
            "com.force.i18n.grammar.Noun::defaultValidate(java.lang.String, java.util.Collection)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateNoun(java.lang.String, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::load(com.force.i18n.settings.PropertyFileData, java.util.Map)",
            "com.force.i18n.I18nJavaUtil::urlDirLastModified(java.net.URL, boolean, boolean)",
            "com.force.i18n.grammar.Article::defaultValidate(java.lang.String, java.util.Set)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.util.Locale)",
            "com.force.i18n.commons.text.GenericTrieMatcher::<init>(java.util.List, java.util.List, java.lang.Class)",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher, com.force.i18n.commons.text.GenericTrieMatcher.MatchValidator)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::formatString(java.lang.Object, com.force.i18n.Renameable[], java.lang.Object[], boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXMLCensored(java.io.OutputStreamWriter, java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputTimeFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateFormat(java.util.Locale, int, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleDateFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.SectionTag::addLabelData(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::endElement()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes, boolean)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.BaseLocalizer::doParseDate(java.lang.String, java.text.DateFormat)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.LabelUtils.Nounifier::nounifyString(java.lang.String)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::deserializeFormMap(java.io.ObjectInputStream, com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.LabelSetDescriptorImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::read()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LabelUtils.Nounifier::<init>(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::serializeFormMap(java.io.ObjectOutputStream, java.util.Map)",
            "com.force.i18n.grammar.Noun::clone(com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith, java.util.Map)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream, boolean)",
            "com.force.i18n.HumanLanguage.Helper::getSystemEmailEncoding(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::doParseNumber(java.lang.String, java.text.NumberFormat)",
            "com.force.i18n.grammar.LanguageDictionary::getNounByPluralAlias(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.ModifierRefTag::getKey(java.lang.String, com.force.i18n.grammar.parser.NounRefTag, boolean, com.force.i18n.grammar.parser.TermAttributes)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::getDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::getInputDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getParamList(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap::remove(int)",
            "com.force.i18n.DefaultHumanLanguageImpl.DefaultHumanLanguageImplProvider::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.SimpleLocaleAttributesUtil::<init>(java.lang.Iterable)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::resetMap(java.util.Collection, boolean)",
            "com.force.i18n.BaseLocalizer::getTimeFormatHelper(java.text.DateFormat, int, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::getOrCreateArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::contains(java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::getCacheBuilder(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.LanguageDictionary::setNounOverride(com.force.i18n.grammar.Noun, com.force.i18n.grammar.Noun, double)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::compareTo(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::getLoader(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parsePercent(java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.commons.util.collection.IntHashMap.BackingIntSet::remove(int)",
            "com.force.i18n.DefaultHumanLanguageImpl::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.BaseLocalizer::getGmtTimeFormat()",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::characters(char[], int, int)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getEmailEncoding()",
            "com.force.i18n.grammar.parser.RefTag::toString()",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::resetLabels()",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.commons.util.collection.AbstractIntMap::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.text.GenericTrieMatcher::begins(java.util.List)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunction(java.util.Locale)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.parser.LabelValidator::renderDynamicLabel(com.force.i18n.HumanLanguage, java.lang.String, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::lambda.generateLabels.1(java.io.File, boolean, boolean, java.util.concurrent.atomic.AtomicInteger, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String, int)",
            "com.force.i18n.LabelUtils::nounify(java.lang.String, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader.1::load(java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::remove()",
            "com.force.i18n.LabelDebug::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.1::contains(java.lang.Object)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, com.force.i18n.Renameable[], java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.LanguageDictionary.NounVersionOverride::equals(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Class)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::compareTo(java.lang.Object)",
            "com.force.i18n.commons.util.collection.IntHashMap.BackingIntSet::remove(int)",
            "com.force.i18n.settings.BasePropertyFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.LanguageDictionary::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::<init>(java.lang.Object[])",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray(java.lang.Object[])",
            "com.force.i18n.LabelSetDescriptorImpl.MultipleRoots::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, com.force.i18n.Renameable[], java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::compare(java.lang.Object, java.lang.Object)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.LocaleNameFormatter::format(java.util.Locale, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.sql.ResultSet)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::toString()",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.TermAttributes::hashCode()",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.LabelValidator::validateReferencedCaseFormsExistTest(java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.sql.ResultSet, com.force.i18n.commons.text.Uniquefy)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getFileEncoding()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getEmailEncoding()",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String, java.util.List)",
            "com.force.i18n.BaseLocalizer::parseDate(java.lang.String, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.settings.BasePropertyFile::doSubstitutions()",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getUsedTerms(java.util.Collection)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.settings.BasePropertyFile::getNumListEntryParams(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getCensoredString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, com.force.i18n.Renameable[], java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String, boolean, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.parser.TermAttributes::toJson()",
            "com.force.i18n.grammar.parser.LabelValidator::getInvalidAliases(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.Noun::setString(com.force.i18n.grammar.LanguageDeclension, java.sql.ResultSet)",
            "com.force.i18n.LocalizerFactory::getTranslatedLanguageLabel(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer::labelExists(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::<init>(java.net.URL, java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "com.force.i18n.DefaultHumanLanguageImpl::getAllLanguagesList(com.force.i18n.DefaultHumanLanguageImpl.LanguageType)",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.I18nJavaUtil::urlLastModified(java.net.URL)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::formatTime(java.util.Date, int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.BaseLocalizer::parseNumber(java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::generateLabels(java.io.File, boolean, boolean)",
            "com.force.i18n.grammar.Noun::equals(java.lang.Object)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::resetLabels()",
            "com.force.i18n.BaseLocalizer::getGmtTimeFormat()",
            "com.force.i18n.grammar.parser.TermRefTag::toString()",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::readObject(java.io.ObjectInputStream)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.01,
        "entryPoints": [
            "com.force.i18n.commons.text.GenericTrieMatcher::makeMap(java.lang.Class)",
            "com.force.i18n.LanguageProvider.Helper::getNewMap()",
            "com.force.i18n.commons.util.collection.LruCache::<init>(int, int)",
            "com.force.i18n.grammar.impl.EsperantoDeclension::createAdjective(java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.Article::<init>(com.force.i18n.grammar.ArticledDeclension, java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension.IndoAryanNoun::validateGender(java.lang.String)",
            "com.force.i18n.grammar.AbstractLanguageDeclension::getArticleForm(com.force.i18n.grammar.ArticleForm)",
            "com.force.i18n.commons.util.collection.IntHashMap.IEntry::<init>(int, java.lang.Object, com.force.i18n.commons.util.collection.IntHashMap.IEntry)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexArticledNoun::makeSkinny()",
            "com.force.i18n.grammar.impl.KoreanDeclension.KoreanNoun::getDefaultString(boolean)",
            "com.force.i18n.BaseLocalizer.ICUFormatFixer::overrideDateLocaleFor(java.util.Locale)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::getKey(java.lang.reflect.Method)",
            "com.force.i18n.grammar.parser.CounterRefTag::toJson(com.force.i18n.grammar.LanguageDictionary, java.util.List)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.BaseLocalizer.FormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.DefaultHumanLanguageImpl.DefaultHumanLanguageImplProvider::getTranslationFallbackLanguage(com.force.i18n.DefaultHumanLanguageImpl)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.05,
        "entryPoints": [
            "com.force.i18n.grammar.impl.DravidianDeclension.MalayalamDeclension::getRequiredCases()",
            "com.force.i18n.grammar.parser.TermRefTag::getTermsInUse(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.Noun::getClosestString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.settings.BasePropertyFile::containsSection(java.lang.String)",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::<init>(java.util.Map, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoHint(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.impl.RomanceDeclension.RomanceArticle::readResolve()",
            "com.force.i18n.grammar.impl.IndoAryanDeclension.IndoAryanAdjectiveForm::hashCode()",
            "com.force.i18n.commons.text.TextUtil::escapeToHtml(java.lang.String)",
            "com.force.i18n.grammar.Adjective::getString(com.force.i18n.grammar.ModifierForm)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.GermanicDeclension.NorwegianDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.LocaleInfoImpl::hashCode()",
            "com.force.i18n.commons.text.TrieMatcher::compile(java.util.List, java.util.List)",
            "com.force.i18n.grammar.impl.SlavicDeclension.GeorgianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.GenderTag::endElement()",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticle::<init>(com.force.i18n.grammar.ArticledDeclension, java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.CounterTag::endElement()",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticle::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.GermanicDeclension.NorwegianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.KoreanDeclension.KoreanAdjective::<init>(com.force.i18n.grammar.impl.KoreanDeclension, java.lang.String, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.LabelSetDescriptorImpl.JarRootFinder::apply(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.CaseFolder::toFoldedCase(java.lang.String)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduAdjective::setString(com.force.i18n.grammar.AdjectiveForm, java.lang.String)",
            "com.force.i18n.grammar.AbstractLanguageDeclension.SimpleAdjective::getString(com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.I18nJavaUtil::getOverrideProperties()",
            "com.force.i18n.settings.SharedKeyMap::createEmptySharedKeyMaps(java.util.List, int)",
            "com.force.i18n.grammar.impl.BulgarianDeclension::createAdjective(java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.impl.ItalianDeclension.ItalianArticle::readResolve()",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::getKey()",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::initEnglishLabelProvider()",
            "com.force.i18n.BaseLocalizer.FormatFixer::getTimeInstance(int, java.util.Locale)",
            "com.force.i18n.grammar.impl.KoreanDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.FinnishDeclension.FinnishNounForm::equals(java.lang.Object)",
            "com.force.i18n.commons.util.collection.ExpandableArray::resizeArray(java.lang.Object[], int)",
            "com.force.i18n.grammar.parser.AdnominalRefTag::hashCode()",
            "com.force.i18n.grammar.impl.IndoAryanDeclension.MarathiDeclension::getRequiredCases()",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension::getRequiredCases()",
            "com.force.i18n.grammar.impl.BalticDeclension.BalticAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.MalteseDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::<init>(com.force.i18n.grammar.impl.BulgarianDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.Article::validate(java.lang.String)",
            "com.force.i18n.I18nJavaUtil::getDefaultProperties()",
            "com.force.i18n.BaseLocalizer::formatISO8601WithMilliSeconds(java.util.Date)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduNoun::getAllDefinedValues()",
            "com.force.i18n.grammar.parser.GenderRefTag::getTermsInUse(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer::getLocaleInputDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.NounModifier::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.Adjective::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String)",
            "com.force.i18n.LocaleNameFormatter::<init>(java.lang.Iterable)",
            "com.force.i18n.LocaleInfoBuilder::useEasternNameOrder()",
            "com.force.i18n.commons.util.collection.IntHashMap::containsValue(java.lang.Object)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::getSAXParser(boolean)",
            "com.force.i18n.grammar.impl.EsperantoDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLocalizer::makeComparator()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler.NounTag::setString(java.lang.String, com.force.i18n.grammar.parser.TermAttributes)",
            "com.force.i18n.grammar.LegacyArticledNounForm::<init>(com.force.i18n.grammar.NounForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.ChoiceTag::getDefault()",
            "com.force.i18n.commons.util.collection.IntHashMap::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.commons.text.GenericTrieMatcher::match(java.util.List, int)",
            "com.force.i18n.grammar.impl.ForwardingLanguageDeclension::invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])",
            "com.force.i18n.grammar.parser.TermRefTag::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.grammar.impl.SimpleDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.RomanianDeclension::getRequiredNounArticles()",
            "com.force.i18n.grammar.impl.RomanceDeclension.PortugueseDeclension::createArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.DravidianDeclension.TamilDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.HumanLanguage, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.grammar.AbstractLanguageDeclension.SimplePluralNounWithGender::getAllDefinedValues()",
            "com.force.i18n.grammar.impl.BalticDeclension.BalticAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension.PersianNoun::readResolve()",
            "com.force.i18n.grammar.parser.TermAttributes::<init>(com.force.i18n.grammar.LanguageDeclension, org.xml.sax.Attributes)",
            "com.force.i18n.commons.util.collection.IntHashMap::entrySet()",
            "com.force.i18n.commons.text.GenericTrieMatcher::match(java.util.List)",
            "com.force.i18n.grammar.LanguageDictionary::<init>(com.force.i18n.HumanLanguage, com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.impl.SemiticDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.LabelSetDescriptorImpl::getForOtherLanguage(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticle::getAllValues()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.GrammaticalTerm::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String)",
            "com.force.i18n.grammar.AbstractLanguageDeclension.SimpleAdjective::validate(java.lang.String)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.1,
        "entryPoints": [
            "com.force.i18n.grammar.impl.BengaliDeclension::createArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.RomanceDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.EnglishDeclension.EnglishArticle::getString(com.force.i18n.grammar.ArticleForm)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::getDescriptor(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::<init>(java.net.URL, java.lang.String, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.grammar.impl.TurkicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::contains(int)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl.ImmutableMapUnion::containsKey(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.ErrorInfo::getMessage()",
            "com.force.i18n.grammar.impl.GrammaticalTermMapImpl::containsKey(java.lang.String)",
            "com.force.i18n.grammar.impl.CatalanDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.ItalianDeclension.ItalianArticle::<init>(com.force.i18n.grammar.impl.ItalianDeclension, java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.settings.BasePropertyFile::getBoolean(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjective::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::<init>(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive, int)",
            "com.force.i18n.settings.SharedKeyMap::inner_get(java.lang.Object)",
            "com.force.i18n.I18nJavaUtil::dirLastModified(java.io.File, boolean)",
            "com.force.i18n.BaseLocalizer::getTimeFormat(int)",
            "com.force.i18n.grammar.impl.SemiticDeclension::getArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.settings.ParameterNotFoundException::<init>(java.lang.String, java.lang.Throwable)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::checkAM(java.text.DateFormat, java.util.Locale)",
            "com.force.i18n.grammar.GrammaticalTerm::hashCode()",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianAdjective::setString(com.force.i18n.grammar.AdjectiveForm, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl.CompositePropertyFileDataImpl::getSectionNames()",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence)",
            "com.force.i18n.grammar.impl.SimpleDeclension.SimpleNoun::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.lang.String, boolean, boolean)",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream, boolean)",
            "com.force.i18n.grammar.impl.SlavicDeclension.SlavicNoun::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser.AliasParam::makeLabelRef(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.BantuDeclension.BantuAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNoun::<init>(com.force.i18n.grammar.impl.AmharicDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.settings.SharedKeyMap::keySet()",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl.ImmutableMapUnion::get(java.lang.Object)",
            "com.force.i18n.grammar.impl.HungarianDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.LabelSetImpl::formatString(java.lang.Object)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ModifierFormMap::getForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.AdjectiveRefTag::getForm(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.grammar.NounForm, com.force.i18n.grammar.Noun, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.LocaleAttributesUtilBuilder::add(com.force.i18n.LocaleInfoBuilder)",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(java.lang.CharSequence, int, int)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunctionOverride(java.util.Locale)",
            "com.force.i18n.grammar.impl.HungarianDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexAdjectiveForm::<init>(com.force.i18n.grammar.LanguageDeclension, int)",
            "com.force.i18n.settings.BasePropertyFile::attachSharedKeyMap(com.force.i18n.settings.SharedKeyMap)",
            "com.force.i18n.grammar.parser.RefTag::getTermsFromLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Object)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::makeSkinny()",
            "com.force.i18n.grammar.impl.GermanicDeclension.DutchDeclension::getRequiredGenders()",
            "com.force.i18n.settings.BasePropertyFile.SubstitutionException::<init>(java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.parser.TestLanguageLabelSetDescriptor::hashCode()",
            "com.force.i18n.settings.TrackingHandler::resolveEntity(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.BengaliDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.parser.CounterRefTag::getTermsInUse(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.ArticledDeclension.LegacyArticledNoun::<init>(com.force.i18n.grammar.ArticledDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.settings.SkinnyMapPropertyFileData::<init>(com.force.i18n.settings.MapPropertyFileData)",
            "com.force.i18n.grammar.impl.SimpleDeclension.PluralNounWithClassifier::getAllDefinedValues()",
            "com.force.i18n.grammar.impl.GermanicDeclension.IcelandicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.NounRefTag::unique()",
            "com.force.i18n.grammar.parser.ArticleRefTag::unique()",
            "com.force.i18n.BaseLocalizer::getMediumTimeFormat()",
            "com.force.i18n.grammar.parser.NounRefTag::resolveNoun(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.Renameable[])",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl.ImmutableMapUnion::<init>(java.util.Map, java.util.Map)",
            "com.force.i18n.grammar.impl.TurkicDeclension::getArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.SimpleDeclension.PluralNounWithClassifier::getDefaultString(boolean)",
            "com.force.i18n.grammar.impl.GermanicDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.grammar.impl.MalayoPolynesianDeclension.HawaiianDeclension::getArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler::<init>(java.net.URL, com.force.i18n.settings.PropertyFileData, com.force.i18n.grammar.parser.GrammaticalLabelFileParser)",
            "com.force.i18n.grammar.impl.KoreanDeclension.KoreanNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.GermanicDeclension.LuxembourgishDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNoun::getExactString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.LanguageDictionary::createAdjective(java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition, boolean)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNounForm::<init>(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle, int)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getComparator(int)",
            "com.force.i18n.grammar.impl.DravidianDeclension.DravidianNounForm::<init>(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, int)",
            "com.force.i18n.grammar.parser.ArticleRefTag::getForm(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.grammar.NounForm, com.force.i18n.grammar.Noun, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::ask_inner_get(java.lang.String, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::<init>(com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticledPluralNoun::getDefaultString(boolean)",
            "com.force.i18n.grammar.parser.NounRefTag::makeUninflected(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.NounPhrase::getAdjectiveLoc(int)",
            "com.force.i18n.grammar.impl.RomanianDeclension::getRequiredNounArticles()",
            "com.force.i18n.grammar.impl.GermanicDeclension.NorwegianDeclension::getRequiredGenders()",
            "com.force.i18n.grammar.ArticledDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.FinnishDeclension.FinnishAdjectiveForm::<init>(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, int)",
            "com.force.i18n.settings.BasePropertyFile::containsListParam(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::resolve(java.nio.file.Path, com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexNoun::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.grammar.impl.RomanceDeclension.RomanceAdjective::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.settings.BasePropertyFile::setLastModified(long)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::resolveAliases(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSetImpl)",
            "com.force.i18n.grammar.impl.FrenchDeclension.FrenchAdjective::getString(com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.grammar.impl.SlavicDeclension.VariantSerboCroatianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ArabicDeclension::addAlifForAccusative(java.lang.String)",
            "com.force.i18n.grammar.parser.GenderRefTag::toJson(com.force.i18n.grammar.LanguageDictionary, java.util.List)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::setCacheMaxSize(long)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.UnsupportedAsSimpleDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.Noun::validateValues(java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashSet::contains(int)",
            "com.force.i18n.I18nJavaUtil::getProperty(java.lang.String)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension.PunjabiDeclension::getRequiredCases()",
            "com.force.i18n.DefaultLanguagePluralRulesImpl::forLanguage(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.TermRefTag::isAdjective()",
            "com.force.i18n.commons.text.Uniquefy::unique(java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::writeDuplicateLabelsFile(java.io.Writer)",
            "com.force.i18n.HumanLanguage.Helper::getTranslationFallbackLanguageLocale(java.util.Locale)",
            "com.force.i18n.grammar.impl.KoreanDeclension.KoreanAdjective::readResolve()",
            "com.force.i18n.grammar.impl.BalticDeclension.BalticAdjectiveForm::hashCode()",
            "com.force.i18n.grammar.parser.AdjectiveRefTag::unique()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::readResolve()",
            "com.force.i18n.grammar.LanguageDictionary::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.grammar.impl.EnglishDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.commons.text.GenericTrieMatcher::replaceMultiple(java.util.List, com.force.i18n.commons.text.GenericTrieMatcher)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.AdjectiveRefTag::getNewModifierRef(com.force.i18n.grammar.parser.NounRefTag, com.force.i18n.grammar.parser.TermRefTag, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.BaseLocalizer::getDateFormat(int)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.grammar.impl.GreekDeclension::getRequiredCases()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabel(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.settings.SharedKeyMap::createSharedKeyMaps(java.util.List, boolean)",
            "com.force.i18n.grammar.impl.BantuDeclension.BantuAdjective::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.BaseTag::addTag(com.force.i18n.grammar.parser.RefTag)",
            "com.force.i18n.commons.text.GenericTrieMatcher.GenericTrieMatch::<init>(int, java.util.List, java.util.List)",
            "com.force.i18n.commons.text.GenericTrieMatcher::findIn(java.util.List, int)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::getPropertyLong(java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile.MetaDataInfo::setLocator(org.xml.sax.Locator)",
            "com.force.i18n.grammar.impl.ArmenianDeclension::createAdjective(java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.parser.ArticleRefTag::<init>(java.lang.String, com.force.i18n.grammar.parser.NounRefTag, com.force.i18n.grammar.parser.TermRefTag, boolean, com.force.i18n.grammar.parser.TermAttributes)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.UnsupportedAsSimpleDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.BaseLocalizer::formatDate(java.util.Date, int)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.BasqueDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl.CompositePropertyFileDataImpl::removeSection(java.lang.String)",
            "com.force.i18n.commons.util.collection.ExpandableArray::toArray()",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicNounForm::hashCode()",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.Adjective::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.impl.BantuDeclension::createAdjective(java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.BaseLocalizer.ICUFormatFixer::getTimeInstance(int, java.util.Locale)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl.CompositePropertyFileDataImpl::remove(java.lang.String, java.lang.String)",
            "com.force.i18n.LabelSetDescriptorImpl::hasOverridingFiles()",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.commons.text.TextUtil.CollatingComparator::<init>(java.text.Collator)",
            "com.force.i18n.grammar.impl.AmharicDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension.PersianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.TurkicDeclension.TurkishNoun::<init>(com.force.i18n.grammar.impl.TurkicDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexArticleForm::<init>(com.force.i18n.grammar.LanguageDeclension, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::getSAXParser(boolean)",
            "com.force.i18n.grammar.LanguageDictionary::getAllTermNames(com.force.i18n.grammar.GrammaticalTerm.TermType)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicNounForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension.MarathiDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.TextUtil::initCap(java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::applyPattern(java.text.DateFormat, java.lang.String, java.util.Locale)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduNoun::readResolve()",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.StringTag::addBufferedText()",
            "com.force.i18n.grammar.impl.RomanianDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.GermanicDeclension.YiddishDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.settings.SharedKeyMap::createEmptySharedKeyMaps(int, com.force.i18n.settings.SharedKeyMap)",
            "com.force.i18n.grammar.impl.BengaliDeclension::getAllowedArticleTypes()",
            "com.force.i18n.grammar.impl.MalayoPolynesianDeclension.HawaiianDeclension.HawaiianArticle::setString(com.force.i18n.grammar.ArticleForm, java.lang.String)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunction(java.util.Locale)",
            "com.force.i18n.settings.BasePropertyFile::outputValueXML(java.lang.Object, java.io.OutputStreamWriter)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension::getRequiredCases()",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::put(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.NounPhrase::getNounRefTag()",
            "com.force.i18n.grammar.impl.HebrewDeclension::getDefiniteArticlePrefix(com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::parse(java.net.URL, com.force.i18n.settings.TrackingHandler)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianArticle::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexArticleForm::appendJsFormReplacement(java.lang.Appendable, java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getListConfigValues(java.lang.String)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.2,
        "entryPoints": [
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianAdjective::readResolve()",
            "com.force.i18n.grammar.GrammaticalTermMap::validate()",
            "com.force.i18n.grammar.impl.RomanianDeclension::getOtherForms()",
            "com.force.i18n.grammar.Noun::getClosestString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.commons.util.collection.AbstractIntSet::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension.IndoAryanNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.SimpleDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.parser.ArticleRefTag::getArticleRefTag(java.lang.String, com.force.i18n.grammar.parser.NounRefTag, com.force.i18n.grammar.parser.TermRefTag, boolean, com.force.i18n.grammar.parser.TermAttributes)",
            "com.force.i18n.commons.text.TrieMatch::<init>(int, java.lang.String, java.lang.String)",
            "com.force.i18n.LabelSetDescriptorImpl::<init>(java.net.URL, com.force.i18n.HumanLanguage, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl.CompositePropertyFileDataImpl::contains(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.BantuDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.settings.BasePropertyFile.MetaDataInfo::setSourceFile(java.io.File)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.SerializationProxy::<init>(com.force.i18n.grammar.impl.ComplexGrammaticalForm)",
            "com.force.i18n.BaseLocalizer::getDateFormat(int)",
            "com.force.i18n.grammar.AbstractLanguageDeclension.SimplePluralNounWithGender::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.BaseLocalizer::parseTime(java.lang.String, int)",
            "com.force.i18n.LabelRef::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension.IndoAryanAdjectiveForm::<init>(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageCase, int)",
            "com.force.i18n.grammar.impl.RomanianDeclension.RomanianArticle::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::readResolve()",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::contains(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::getDefaultString(boolean)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::set(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.LanguageDictionary::getNames(java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::resetMap()",
            "com.force.i18n.grammar.LanguageDeclension::getNounForm(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::<init>(com.force.i18n.grammar.impl.BulgarianDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.BalticDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.settings.SharedKeyMap::inner_get(java.lang.Object)",
            "com.force.i18n.grammar.parser.GenderRefTag::getTermsInUse(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getInt(java.lang.String, java.lang.String)",
            "com.force.i18n.LanguageProvider.Helper::getLanguageForLocale(java.lang.String)",
            "com.force.i18n.grammar.parser.LabelValidator::getDuplicates(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.LanguageDictionary::getNoun(java.lang.String, boolean)",
            "com.force.i18n.settings.MapPropertyFileData::getPublicSectionNames()",
            "com.force.i18n.grammar.impl.KoreanDeclension::getDefaultClassifier()",
            "com.force.i18n.grammar.GrammaticalTerm::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.settings.MapPropertyFileData::removeSection(java.lang.String)",
            "com.force.i18n.commons.util.settings.IniFileUtil::intern(java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::appendLabel(java.lang.Appendable, java.lang.String, java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler.NounVersionOverrideTag::setString(java.lang.String, com.force.i18n.grammar.parser.TermAttributes)",
            "com.force.i18n.commons.text.TrieMatcher::compile(java.util.List, java.util.List)",
            "com.force.i18n.grammar.impl.RomanianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.EsperantoDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.LocaleNameFormatter::<init>(com.force.i18n.LocaleAttributesUtil)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::log(java.lang.String)",
            "com.force.i18n.LanguageProvider.Helper::<init>(com.force.i18n.HumanLanguage, java.util.List)",
            "com.force.i18n.grammar.impl.FrenchDeclension::createAdjective(java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.impl.HungarianDeclension::createArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.HungarianDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.parser.LabelValidator::loadDictionary(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.grammar.parser.TermAttributes::overrideArticle(com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduNoun::readResolve()",
            "com.force.i18n.grammar.LanguageDictionary::getNounOverride(com.force.i18n.grammar.Noun)",
            "com.force.i18n.grammar.parser.ArticleRefTag::getNewModifierRef(com.force.i18n.grammar.parser.NounRefTag, com.force.i18n.grammar.parser.TermRefTag, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.settings.SkinnyMapPropertyFileData::<init>(com.force.i18n.settings.MapPropertyFileData)",
            "com.force.i18n.grammar.impl.TurkicDeclension::getArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.CatalanDeclension.CatalanArticle::getString(com.force.i18n.grammar.ArticleForm)",
            "com.force.i18n.grammar.impl.BengaliDeclension.BengaliNoun::<init>(com.force.i18n.grammar.impl.BengaliDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.lang.String, com.force.i18n.grammar.LanguageGender, boolean, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.NounPhrase::isNounSet()",
            "com.force.i18n.grammar.impl.SlavicDeclension.SlavicNounForm::hashCode()",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::delete()",
            "com.force.i18n.grammar.impl.GermanicDeclension.NorwegianDeclension::getRequiredGenders()",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoHint(java.lang.String, java.lang.String, boolean)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::getAliasMap()",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjective::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.commons.text.DeferredStringBuilder::subSequence(int, int)",
            "com.force.i18n.grammar.LanguageDictionary::setNounOverride(com.force.i18n.grammar.Noun, com.force.i18n.grammar.Noun, double)",
            "com.force.i18n.grammar.impl.BengaliDeclension::getAllowedArticleTypes()",
            "com.force.i18n.I18nDateUtil::parseTimestamp_NoStupidExceptionRemap(java.lang.String)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.LanguageDictionary, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.grammar.AbstractLanguageDeclension.SimpleAdjective::readResolve()",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicArticle::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.TurkicDeclension::getAllowedArticleTypes()",
            "com.force.i18n.grammar.impl.MalayoPolynesianDeclension.HawaiianDeclension::getRequiredStartsWith()",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicNounForm::<init>(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle, int)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::setSectionAsPublic(java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap::<init>(int)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewAdjective::deriveDefaultString(com.force.i18n.grammar.AdjectiveForm, java.lang.String, com.force.i18n.grammar.AdjectiveForm)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanDeclension::formLowercaseNounForm(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.BantuDeclension.ZuluDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::<init>(java.io.File, java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.parser.TermAttributes::toNullStr(java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::getAllUddXmlFiles()",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::containsSection(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.grammar.parser.TermAttributes::getArticleForm()",
            "com.force.i18n.commons.util.collection.IntHashMap::keySet()",
            "com.force.i18n.commons.text.GenericTrieMatcher.GenericTrieMatch::<init>(int, java.util.List, java.util.List)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::parse(org.xml.sax.InputSource, com.force.i18n.settings.TrackingHandler)",
            "com.force.i18n.LocalizerFactory::set(com.force.i18n.LocalizerProvider)",
            "com.force.i18n.settings.BasePropertyFile::getParams(java.lang.String, java.util.Set)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.parser.NounRefTag::calcHashCode()",
            "com.force.i18n.HumanLanguage.Helper::getFileNameServletEncoding(com.force.i18n.HumanLanguage, boolean)",
            "com.force.i18n.grammar.impl.GermanicDeclension::getArticleForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.GrammaticalLocalizer::makeCollator()",
            "com.force.i18n.settings.BasePropertyFile::outputXML(java.io.OutputStream)",
            "com.force.i18n.BaseLocalizer.ICUFormatFixer::getTimeInstance(int, java.util.Locale)",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider.RealLabelDebugContinuation::<init>(java.util.List)",
            "com.force.i18n.grammar.impl.ArmenianDeclension::getArticleForms()",
            "com.force.i18n.grammar.impl.FrenchDeclension.FrenchArticle::setString(com.force.i18n.grammar.ArticleForm, java.lang.String)",
            "com.force.i18n.LabelSetImpl::processMissingLabel(java.lang.String, boolean)",
            "com.force.i18n.commons.util.collection.AbstractIntMap::isEmpty()",
            "com.force.i18n.grammar.impl.HungarianDeclension.HungarianArticle::getString(com.force.i18n.grammar.ArticleForm)",
            "com.force.i18n.grammar.impl.ItalianDeclension::getRequiredStartsWith()",
            "com.force.i18n.commons.text.DeferredStringBuilder::append(char)",
            "com.force.i18n.grammar.impl.BulgarianDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.LocaleInfoImpl::equals(java.lang.Object)",
            "com.force.i18n.LabelRef::<init>(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.Noun::setStartsWith(com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.settings.BasePropertyFile.MetaDataInfo::setDeprecated(boolean)",
            "com.force.i18n.commons.util.collection.ExpandableArray.Itr::next()",
            "com.force.i18n.grammar.impl.SlavicDeclension.SlovenianDeclension::getMasculineAnimateForms()",
            "com.force.i18n.grammar.parser.PluralRefTag::equals(java.lang.Object)",
            "com.force.i18n.BaseLocalizer.ICUFormatFixer::getCalendar(java.util.TimeZone, java.util.Locale)",
            "com.force.i18n.BaseLocalizer::getMessageFormat(java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashSet::<init>(int)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getParamList(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelThrow(java.lang.String, java.lang.String, java.lang.Object[])",
            "com.force.i18n.grammar.impl.CatalanDeclension.CatalanAdjective::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.impl.DravidianDeclension.DravidianNounForm::hashCode()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::setContinuation(com.force.i18n.LabelDebugProvider.LabelDebugContinuation)",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticledPluralNoun::readResolve()",
            "com.force.i18n.grammar.impl.CatalanDeclension.CatalanArticle::<init>(com.force.i18n.grammar.impl.CatalanDeclension, java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.FinnishDeclension.EstonianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.SlavicDeclension.SlavicAdjectiveForm::hashCode()",
            "com.force.i18n.grammar.ArticledDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.BantuDeclension.BantuAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexArticledNoun::<init>(com.force.i18n.grammar.ArticledDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.AbstractLanguageDeclension.SimplePluralNoun::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, java.lang.String, boolean, boolean)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::getDateTimeInstance(int, int, java.util.Locale)",
            "com.force.i18n.grammar.impl.GreekDeclension.GreekNoun::<init>(com.force.i18n.grammar.impl.GermanicDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.RenamingProviderFactory.DefaultRenamingProviderImpl::getPackagedNoun(com.force.i18n.HumanLanguage, java.lang.String)",
            "com.force.i18n.BaseLocalizer.JdkFormatFixer::checkAM(java.text.DateFormat, java.util.Locale)",
            "com.force.i18n.grammar.impl.DravidianDeclension.DravidianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.settings.PropertyFileData::get(java.lang.String, java.lang.String)",
            "com.force.i18n.BaseLocalizer.ICUFormatFixer::getAccountingCurrencyFormat(java.util.Locale)",
            "com.force.i18n.settings.BasePropertyFile::getInt(java.lang.String, java.lang.String, int)",
            "com.force.i18n.LocalizerFactory::getDefaultLocalizer()",
            "com.force.i18n.settings.SharedKeyMap::unmaskNull(java.lang.Object)",
            "com.force.i18n.settings.MapPropertyFileData::<init>(java.util.Locale)",
            "com.force.i18n.settings.SharedKeyMap::maskNull(java.lang.Object)",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticledPluralNoun::getDefaultString(boolean)",
            "com.force.i18n.settings.SkinnyMapPropertyFileData::put(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::addInvalidLabel(com.force.i18n.grammar.parser.GrammaticalLabelFileParser.ErrorType, java.lang.String, java.lang.String, java.net.URL, int, java.lang.Object[])",
            "com.force.i18n.grammar.impl.AmharicDeclension.AmharicAdjectiveForm::hashCode()",
            "com.force.i18n.commons.text.TextUtil::escapeToXml(java.lang.CharSequence, boolean, boolean, boolean)",
            "com.force.i18n.SimpleLocaleAttributesUtil::<init>(java.lang.Iterable)",
            "com.force.i18n.grammar.LanguageDictionary::isArticle(java.lang.String)",
            "com.force.i18n.grammar.parser.NounRefTag::getReference()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::setLabelHintMode(java.lang.String)",
            "com.force.i18n.grammar.LanguageDictionary::setString(com.force.i18n.grammar.Article, com.force.i18n.grammar.ArticleForm, java.lang.String)",
            "com.force.i18n.grammar.parser.NounRefTag::makeArticled(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.GrammaticalTerm::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.commons.text.GenericTrieMatcher::match(java.util.List)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::compute(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.grammar.parser.PluralRefTag::getTermsInUse(com.force.i18n.grammar.LanguageDictionary)",
            "com.force.i18n.grammar.Noun::readResolve()",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.grammar.impl.TurkicDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.DravidianDeclension::createAdjective(java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.parser.ArticleRefTag::unique()",
            "com.force.i18n.grammar.AbstractLanguageDeclension::createNoun(java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.util.Map)",
            "com.force.i18n.grammar.parser.TermRefTag::equals(java.lang.Object)",
            "com.force.i18n.DefaultLanguagePluralRulesImpl::fromString(java.lang.String)",
            "com.force.i18n.commons.text.TrieMatcher::compile(java.lang.String[], java.lang.String[])",
            "com.force.i18n.BaseLocalizer.FormatFixer::getDateInstance(int, java.util.Locale)",
            "com.force.i18n.grammar.parser.LabelValidator::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.grammar.parser.NounRefTag::unique()",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticledPluralNoun::getExactString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.ArticleRefTag::getForm(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.grammar.NounForm, com.force.i18n.grammar.Noun, com.force.i18n.grammar.GrammaticalTerm)",
            "com.force.i18n.grammar.impl.DravidianDeclension.TamilDeclension::getRequiredCases()",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicNoun::validateGender(java.lang.String)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::<init>(com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension, java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getString(java.lang.String, com.force.i18n.Renameable[], java.lang.String, boolean)",
            "com.force.i18n.SimpleLocaleAttributesUtil::useEasternNameOrder(java.util.Locale)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.TurkicDeclension.TurkishNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.settings.BasePropertyFile::setLastModified(long)",
            "com.force.i18n.grammar.offline.JavaScriptLabelsGenerator::<init>(java.io.File)",
            "com.force.i18n.commons.util.collection.IntHashSet::remove(int)",
            "com.force.i18n.commons.util.collection.IntHashMap.HashIterator::nextEntry()",
            "com.force.i18n.grammar.impl.TurkicDeclension::getRequiredCases()",
            "com.force.i18n.grammar.impl.MalayoPolynesianDeclension.HawaiianDeclension::createArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::getSection(java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizerFactory::findLabelSet(com.force.i18n.HumanLanguage)",
            "com.force.i18n.commons.text.GenericTrieMatcher::makeMap(java.lang.Class)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjective::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl.CompositePropertyFileDataImpl::put(java.lang.String, java.lang.String, java.lang.Object)",
            "com.force.i18n.grammar.NounModifier::setInheritedFromDefault(boolean)",
            "com.force.i18n.grammar.impl.CatalanDeclension.CatalanAdjective::readResolve()",
            "com.force.i18n.grammar.LanguageDeclension::getPluralRules()",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicNounForm::hashCode()",
            "com.force.i18n.grammar.AbstractLanguageDeclension::enumMapFilterNulls(java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object, java.lang.Enum, java.lang.Object)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension.GujaratiDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.RenamingProviderFactory.DefaultRenamingProviderImpl::getNoun(com.force.i18n.HumanLanguage, com.force.i18n.Renameable)",
            "com.force.i18n.grammar.impl.AmharicDeclension::getDefiniteArticlePrefix(com.force.i18n.grammar.LanguageStartsWith)",
            "com.force.i18n.grammar.offline.PluralRulesJsImpl::getSelectFunctionOverride(java.util.Locale)",
            "com.force.i18n.commons.text.TextUtil::escapeForMessageFormat(java.lang.String, java.lang.StringBuilder, boolean)",
            "com.force.i18n.grammar.impl.SlavicDeclension.SlovenianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticledPluralNoun::getAllDefinedValues()",
            "com.force.i18n.grammar.Noun::validateValues(java.lang.String)",
            "com.force.i18n.grammar.impl.HungarianDeclension.HungarianNoun::validateGender(java.lang.String)",
            "com.force.i18n.grammar.impl.DravidianDeclension.KannadaDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.parser.RefTag::getTermsFromLabelValue(com.force.i18n.grammar.LanguageDictionary, java.lang.Object)",
            "com.force.i18n.commons.util.settings.IniFileUtil::intern(java.lang.Object)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getStringThrow(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getListConfigValues(java.lang.String)",
            "com.force.i18n.BaseLocalizer::getInputDateFormat()",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getList(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.RomanceDeclension.PortugueseDeclension::createArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.IrishDeclension.IrishNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.HindiUrduDeclension.HindiUrduNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::readResolve()",
            "com.force.i18n.grammar.impl.RomanceDeclension.SpanishDeclension::createArticle(java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.BalticDeclension::getRequiredGenders()",
            "com.force.i18n.grammar.impl.DravidianDeclension.DravidianNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.ArmenianDeclension.ArmenianNounForm::hashCode()",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.grammar.impl.SlavicDeclension::getExactNounForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguagePossessive, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.LabelSetImpl::getFilenameFromLabelSection(java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader::<init>(com.force.i18n.grammar.parser.LabelSetLoaderConfig)",
            "com.force.i18n.grammar.impl.DravidianDeclension.DravidianNoun::makeSkinny()",
            "com.force.i18n.BaseLocalizer::getCurrencyFormat(java.util.Locale)",
            "com.force.i18n.grammar.impl.RomanceDeclension.RomanceNoun::validateGender(java.lang.String)",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticle::getAllValues()",
            "com.force.i18n.grammar.impl.CatalanDeclension.CatalanArticle::setString(com.force.i18n.grammar.ArticleForm, java.lang.String)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getFloat(java.lang.String, java.lang.String, float)",
            "com.force.i18n.grammar.impl.KoreanDeclension::createAdjective(java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.impl.CatalanDeclension::getRequiredStartsWith()",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetLoader::<init>(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor, boolean, com.force.i18n.grammar.GrammaticalLabelSetProvider)",
            "com.force.i18n.commons.util.settings.SimpleNonConfigIniFile::getOrCreate(java.lang.String)",
            "com.force.i18n.commons.text.GenericTrieMatcher::contains(java.util.List, int)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.ChoiceTag::getDefault()",
            "com.force.i18n.commons.text.TextUtil::breakLongWordsAndEscapeToHTML(java.lang.String, boolean, int)",
            "com.force.i18n.commons.text.Uniquefy::unique(java.lang.String)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicArticleForm::<init>(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageStartsWith, int)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.BengaliDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.SlavicDeclension.RussianDeclension::getMasculineAnimateForms()",
            "com.force.i18n.grammar.impl.EnglishDeclension::getAdjectiveForm(com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase, com.force.i18n.grammar.LanguageArticle, com.force.i18n.grammar.LanguagePossessive)",
            "com.force.i18n.LanguageProvider.Helper::getLanguage(java.lang.String)",
            "com.force.i18n.grammar.impl.MalayoPolynesianDeclension.HawaiianDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getComparator(int)",
            "com.force.i18n.LabelSetDescriptorImpl::hashCode()",
            "com.force.i18n.grammar.impl.HungarianDeclension::getRequiredPossessive()",
            "com.force.i18n.grammar.impl.BengaliDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.settings.SkinnyMapPropertyFileData::setSectionAsPublic(java.lang.String)",
            "com.force.i18n.BaseLocalizer::getMediumTimeFormat()",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::<init>(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.grammar.parser.GrammaticalLabelFileParser)",
            "com.force.i18n.commons.util.collection.IntHashSet::add(int)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicArticle::setString(com.force.i18n.grammar.ArticleForm, java.lang.String)",
            "com.force.i18n.commons.util.collection.IntHashMap::<init>(com.force.i18n.commons.util.collection.IntMap)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicArticle::readObject(java.io.ObjectInputStream)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicArticle::<init>(com.force.i18n.grammar.ArticledDeclension, java.lang.String, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.grammar.impl.ArmenianDeclension::getAllowedArticleTypes()",
            "com.force.i18n.BaseLocalizer::getDateFormat(com.force.i18n.BaseLocalizer.LocalOrGmt)",
            "com.force.i18n.grammar.impl.HebrewDeclension.HebrewNoun::getExactString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.FinnishDeclension.EstonianDeclension::getRequiredCases()",
            "com.force.i18n.grammar.parser.LanguageDictionaryHandler.BaseTag::characters(char[], int, int)",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::parse(java.net.URL, com.force.i18n.settings.TrackingHandler)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.NounFormMap::getForm(com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::addAlias(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL, int)",
            "com.force.i18n.LabelSetImpl::getString(java.lang.String, java.lang.String, java.lang.String)",
            "com.force.i18n.settings.BasePropertyFile::getSection(java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::<init>(com.force.i18n.grammar.GrammaticalLabelSet, com.force.i18n.grammar.GrammaticalLabelSet)",
            "com.force.i18n.settings.TrackingHandler::getLineNumberString()",
            "com.force.i18n.settings.SkinnyMapPropertyFileData::getSection(java.lang.String)",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileHandler.ParamTag::addLabelDataToParent(java.lang.Object)",
            "com.force.i18n.commons.text.DeferredStringBuilder::charAt(int)",
            "com.force.i18n.grammar.impl.GermanicDeclension::getOtherForms()",
            "com.force.i18n.grammar.impl.HungarianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.SlavicDeclension.UkrainianDeclension::getMasculineAnimateForms()",
            "com.force.i18n.grammar.impl.SlavicDeclension.SlavicAdjective::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.Adjective::validate(java.lang.String)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getComparator()",
            "com.force.i18n.settings.BasePropertyFile::makeListEntryParam(java.lang.String, int)",
            "com.force.i18n.commons.util.collection.IntHashMap::<init>(int, float)",
            "com.force.i18n.grammar.GrammaticalLocalizer::getLabelNoThrow(com.force.i18n.LabelReference)",
            "com.force.i18n.grammar.parser.LabelSetLoaderConfig::setCacheMaxSize(long)",
            "com.force.i18n.BaseLocalizer::getLocaleDateTimeFormat(int, java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.LanguageDictionary::validateAll()",
            "com.force.i18n.grammar.impl.DravidianDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ArabicDeclension::addAlifForAccusative(java.lang.String)",
            "com.force.i18n.grammar.impl.SlavicDeclension::getFieldForms()",
            "com.force.i18n.grammar.parser.LanguageDictionaryParser::hasParentDictionarySameLang()",
            "com.force.i18n.LabelDebugProvider.EnabledLabelDebugProvider::getContinuation()",
            "com.force.i18n.commons.util.collection.IntHashMap::rehash()",
            "com.force.i18n.commons.text.TextUtil::splitSimple(java.lang.String, java.lang.String, int, boolean)",
            "com.force.i18n.commons.util.collection.ExpandableArray::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.GermanicDeclension.DanishDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.commons.util.collection.IntHashMap.IntHashIterator::next()",
            "com.force.i18n.grammar.parser.GrammaticalLabelSetFileCacheLoader.FileCache::write(com.force.i18n.grammar.GrammaticalLabelSet)",
            "com.force.i18n.settings.BasePropertyFile::getParamList(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.MalayoPolynesianDeclension.HawaiianDeclension::getDefaultArticleString(com.force.i18n.grammar.ArticleForm, com.force.i18n.grammar.LanguageArticle)",
            "com.force.i18n.BaseLocalizer::formatDateTime(java.util.Date, int)",
            "com.force.i18n.BaseLocalizer::parseDateTime(java.lang.String)",
            "com.force.i18n.grammar.impl.TurkicDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.ArticledDeclension.SimpleArticle::setString(com.force.i18n.grammar.ArticleForm, java.lang.String)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension.PersianDeclension.PersianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicAdjectiveForm::getKey()",
            "com.force.i18n.grammar.impl.IndoAryanDeclension.IndoAryanAdjective::validate(java.lang.String)",
            "com.force.i18n.grammar.impl.ArabicDeclension.ArabicAdjectiveForm::hashCode()",
            "com.force.i18n.BaseLocalizer::getInputMediumDateFormat()",
            "com.force.i18n.grammar.parser.GrammaticalLabelFileParser::<init>(com.force.i18n.grammar.LanguageDictionary, com.force.i18n.LabelSetDescriptor, com.force.i18n.grammar.GrammaticalLabelSetProvider, boolean)",
            "com.force.i18n.grammar.impl.GermanicDeclension.YiddishDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.GermanicDeclension.IcelandicDeclension::getRequiredGenders()",
            "com.force.i18n.grammar.impl.FinnishDeclension.FinnishNounForm::hashCode()",
            "com.force.i18n.grammar.impl.GermanicDeclension.YiddishDeclension::getRequiredGenders()",
            "com.force.i18n.BaseLocalizer::getLocaleTimeFormat(java.util.Locale, java.util.TimeZone)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexArticledNoun::getExactString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.GrammaticalLabelSetFallbackImpl::getGrammaticalTerm(java.lang.String, java.lang.String)",
            "com.force.i18n.grammar.impl.HungarianDeclension::createNoun(java.lang.String, java.lang.String, com.force.i18n.grammar.Noun.NounType, java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguageGender, java.lang.String, boolean, boolean)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexNoun::setString(java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.AbstractLanguageDeclension.SimpleAdjective::setString(com.force.i18n.grammar.AdjectiveForm, java.lang.String)",
            "com.force.i18n.LocaleInfoBuilder::formal(boolean)",
            "com.force.i18n.grammar.impl.DravidianDeclension.TamilDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.GermanicDeclension::hasArticleInNounForm()",
            "com.force.i18n.BaseLocalizer::getInputDateFormat(int)",
            "com.force.i18n.grammar.impl.GermanicDeclension.GermanicNoun::appendArticleToBase(java.lang.String, java.lang.String, com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.parser.AdnominalRefTag::getWithResolvedNounTag(com.force.i18n.grammar.parser.NounRefTag)",
            "com.force.i18n.SimpleLocaleAttributesUtil::isFormalLocale(java.util.Locale)",
            "com.force.i18n.grammar.impl.IndoAryanDeclension.PunjabiDeclension::<init>(com.force.i18n.HumanLanguage)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexAdjective::<init>(com.force.i18n.grammar.LanguageDeclension, java.lang.String, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.settings.SharedKeyMap::containsValue(java.lang.Object)",
            "com.force.i18n.grammar.impl.UnsupportedLanguageDeclension::getRequiredGenders()",
            "com.force.i18n.commons.text.GenericTrieMatcher.GenericTrieData::<init>(java.util.Map)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::setLabelSectionToFilename(java.util.Map)",
            "com.force.i18n.grammar.impl.BulgarianDeclension.BulgarianNoun::validateValues(java.lang.String, com.force.i18n.grammar.LanguageCase)",
            "com.force.i18n.grammar.impl.ArmenianDeclension::createAdjective(java.lang.String, com.force.i18n.grammar.LanguageStartsWith, com.force.i18n.grammar.LanguagePosition)",
            "com.force.i18n.grammar.impl.EnglishDeclension.EnglishArticle::readResolve()",
            "com.force.i18n.commons.text.CaseFolder::toFoldedCase(java.lang.String, boolean)",
            "com.force.i18n.settings.SettingsSectionNotFoundException::<init>(java.lang.String)",
            "com.force.i18n.grammar.parser.CounterRefTag::<init>(com.force.i18n.grammar.parser.NounRefTag)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexNoun::getString(com.force.i18n.grammar.NounForm)",
            "com.force.i18n.grammar.impl.HungarianDeclension.HungarianNounForm::equals(java.lang.Object)",
            "com.force.i18n.grammar.impl.ComplexGrammaticalForm.ComplexArticledNoun::writeObject(java.io.ObjectOutputStream)",
            "com.force.i18n.commons.text.GenericTrieMatcher::begins(java.util.List, int)",
            "com.force.i18n.grammar.GrammaticalLabelSetImpl::getTestLabelSet(com.force.i18n.LanguageLabelSetDescriptor.GrammaticalLabelSetDescriptor)",
            "com.force.i18n.grammar.impl.BantuDeclension.BantuAdjectiveForm::<init>(com.force.i18n.grammar.LanguageDeclension, com.force.i18n.grammar.LanguageNumber, com.force.i18n.grammar.LanguageGender, int)",
            "com.force.i18n.grammar.Noun::equalsAttribute(com.force.i18n.grammar.Noun)",
            "com.force.i18n.commons.util.settings.AbstractNonConfigIniFile::getString(java.lang.String, java.lang.String)",
            "com.force.i18n.settings.SharedKeyMapPropertyFileData::shareKeys(com.force.i18n.settings.SharedKeyMap)"
        ]
    }
]