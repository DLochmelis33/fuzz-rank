[
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.netpreserve.jwarc.WarcFilterCompiler::accessor(java.lang.String)",
            "org.netpreserve.jwarc.net.CertificateAuthority::signCertificate(javax.security.auth.x500.X500Principal, java.security.PrivateKey, javax.security.auth.x500.X500Principal, java.security.PublicKey, int, boolean)",
            "org.netpreserve.jwarc.WarcParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encode(org.netpreserve.jwarc.HttpRequest)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.netpreserve.jwarc.WarcFilterCompiler::accessor(java.lang.String)",
            "org.netpreserve.jwarc.net.CertificateAuthority::signCertificate(javax.security.auth.x500.X500Principal, java.security.PrivateKey, javax.security.auth.x500.X500Principal, java.security.PublicKey, int, boolean)",
            "org.netpreserve.jwarc.WarcParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encode(org.netpreserve.jwarc.HttpRequest)",
            "org.netpreserve.jwarc.GeminiParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.HttpParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.ChunkedBody::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.URIs::toNormalizedSurt(java.lang.String)",
            "org.netpreserve.jwarc.URIs::tryDecodeUtf8(java.nio.ByteBuffer, java.lang.StringBuilder)",
            "org.netpreserve.jwarc.cdx.CdxFormat::format(org.netpreserve.jwarc.WarcCaptureRecord, java.lang.String, long, long, java.lang.String)",
            "org.netpreserve.jwarc.net.WarcRecorder::handle(java.net.Socket, java.lang.String, org.netpreserve.jwarc.HttpRequest)",
            "org.netpreserve.jwarc.tools.ExtractTool::writePayload(java.nio.channels.WritableByteChannel, org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcReader::consumeTrailer()",
            "org.netpreserve.jwarc.tools.ValidateTool::validate(org.netpreserve.jwarc.WarcReader)",
            "org.netpreserve.jwarc.GunzipChannel::readHeader()",
            "org.netpreserve.jwarc.tools.ValidateTool::validateCapture(org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcDigest::base32Decode(java.lang.String)",
            "org.netpreserve.jwarc.cdx.CdxFields::format(byte, org.netpreserve.jwarc.WarcCaptureRecord)",
            "org.netpreserve.jwarc.WarcFilterCompiler::comparison()",
            "org.netpreserve.jwarc.tools.ListTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.ValidateTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.CaptureIndex::<init>(java.util.List)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.netpreserve.jwarc.WarcFilterCompiler::accessor(java.lang.String)",
            "org.netpreserve.jwarc.net.CertificateAuthority::signCertificate(javax.security.auth.x500.X500Principal, java.security.PrivateKey, javax.security.auth.x500.X500Principal, java.security.PublicKey, int, boolean)",
            "org.netpreserve.jwarc.WarcParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encode(org.netpreserve.jwarc.HttpRequest)",
            "org.netpreserve.jwarc.GeminiParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.HttpParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.ChunkedBody::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.URIs::toNormalizedSurt(java.lang.String)",
            "org.netpreserve.jwarc.URIs::tryDecodeUtf8(java.nio.ByteBuffer, java.lang.StringBuilder)",
            "org.netpreserve.jwarc.cdx.CdxFormat::format(org.netpreserve.jwarc.WarcCaptureRecord, java.lang.String, long, long, java.lang.String)",
            "org.netpreserve.jwarc.net.WarcRecorder::handle(java.net.Socket, java.lang.String, org.netpreserve.jwarc.HttpRequest)",
            "org.netpreserve.jwarc.tools.ExtractTool::writePayload(java.nio.channels.WritableByteChannel, org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcReader::consumeTrailer()",
            "org.netpreserve.jwarc.tools.ValidateTool::validate(org.netpreserve.jwarc.WarcReader)",
            "org.netpreserve.jwarc.GunzipChannel::readHeader()",
            "org.netpreserve.jwarc.tools.ValidateTool::validateCapture(org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcDigest::base32Decode(java.lang.String)",
            "org.netpreserve.jwarc.cdx.CdxFields::format(byte, org.netpreserve.jwarc.WarcCaptureRecord)",
            "org.netpreserve.jwarc.WarcFilterCompiler::comparison()",
            "org.netpreserve.jwarc.tools.ListTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.ValidateTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.CaptureIndex::<init>(java.util.List)",
            "org.netpreserve.jwarc.InetAddresses::textToNumericFormatV6(java.lang.String)",
            "org.netpreserve.jwarc.tools.ScreenshotTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.GeminiResponse::statusHttpEquivalent()",
            "org.netpreserve.jwarc.tools.RecorderTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.HttpServer::interact(java.net.Socket, java.lang.String)",
            "org.netpreserve.jwarc.ChunkedBody::parse()",
            "org.netpreserve.jwarc.GeminiParser::parse(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.tools.DedupeTool::deduplicateWarcFile(java.nio.file.Path, java.nio.file.Path)",
            "org.netpreserve.jwarc.tools.ExtractTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.WarcParser::parse(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encodeJsonBody(java.io.InputStream, java.lang.StringBuilder, boolean)",
            "org.netpreserve.jwarc.MediaType::parse(java.lang.String)",
            "org.netpreserve.jwarc.HttpParser::parse(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.tools.SavebackTool::process(java.lang.String, org.netpreserve.jwarc.WarcWriter)",
            "org.netpreserve.jwarc.WarcWriter::fetch(java.net.URI, org.netpreserve.jwarc.HttpRequest, java.io.OutputStream)",
            "org.netpreserve.jwarc.tools.CdxTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.WarcServer::mementoLinks(java.util.NavigableSet, org.netpreserve.jwarc.net.Capture)",
            "org.netpreserve.jwarc.net.WarcServer::resource(java.lang.String)",
            "org.netpreserve.jwarc.HttpRequest::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel, boolean)",
            "org.netpreserve.jwarc.net.WarcServer::timemap(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.net.WarcServer::mementoLink(java.lang.StringBuilder, java.lang.String, org.netpreserve.jwarc.net.Capture, org.netpreserve.jwarc.net.Capture)",
            "org.netpreserve.jwarc.LengthedBody::createFromContentLength(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.lang.Long)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.netpreserve.jwarc.WarcFilterCompiler::accessor(java.lang.String)",
            "org.netpreserve.jwarc.net.CertificateAuthority::signCertificate(javax.security.auth.x500.X500Principal, java.security.PrivateKey, javax.security.auth.x500.X500Principal, java.security.PublicKey, int, boolean)",
            "org.netpreserve.jwarc.WarcParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encode(org.netpreserve.jwarc.HttpRequest)",
            "org.netpreserve.jwarc.GeminiParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.HttpParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.ChunkedBody::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.URIs::toNormalizedSurt(java.lang.String)",
            "org.netpreserve.jwarc.URIs::tryDecodeUtf8(java.nio.ByteBuffer, java.lang.StringBuilder)",
            "org.netpreserve.jwarc.cdx.CdxFormat::format(org.netpreserve.jwarc.WarcCaptureRecord, java.lang.String, long, long, java.lang.String)",
            "org.netpreserve.jwarc.net.WarcRecorder::handle(java.net.Socket, java.lang.String, org.netpreserve.jwarc.HttpRequest)",
            "org.netpreserve.jwarc.tools.ExtractTool::writePayload(java.nio.channels.WritableByteChannel, org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcReader::consumeTrailer()",
            "org.netpreserve.jwarc.tools.ValidateTool::validate(org.netpreserve.jwarc.WarcReader)",
            "org.netpreserve.jwarc.GunzipChannel::readHeader()",
            "org.netpreserve.jwarc.tools.ValidateTool::validateCapture(org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcDigest::base32Decode(java.lang.String)",
            "org.netpreserve.jwarc.cdx.CdxFields::format(byte, org.netpreserve.jwarc.WarcCaptureRecord)",
            "org.netpreserve.jwarc.WarcFilterCompiler::comparison()",
            "org.netpreserve.jwarc.tools.ListTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.ValidateTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.CaptureIndex::<init>(java.util.List)",
            "org.netpreserve.jwarc.InetAddresses::textToNumericFormatV6(java.lang.String)",
            "org.netpreserve.jwarc.tools.ScreenshotTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.GeminiResponse::statusHttpEquivalent()",
            "org.netpreserve.jwarc.tools.RecorderTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.HttpServer::interact(java.net.Socket, java.lang.String)",
            "org.netpreserve.jwarc.ChunkedBody::parse()",
            "org.netpreserve.jwarc.GeminiParser::parse(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.tools.DedupeTool::deduplicateWarcFile(java.nio.file.Path, java.nio.file.Path)",
            "org.netpreserve.jwarc.tools.ExtractTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.WarcParser::parse(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encodeJsonBody(java.io.InputStream, java.lang.StringBuilder, boolean)",
            "org.netpreserve.jwarc.MediaType::parse(java.lang.String)",
            "org.netpreserve.jwarc.HttpParser::parse(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.tools.SavebackTool::process(java.lang.String, org.netpreserve.jwarc.WarcWriter)",
            "org.netpreserve.jwarc.WarcWriter::fetch(java.net.URI, org.netpreserve.jwarc.HttpRequest, java.io.OutputStream)",
            "org.netpreserve.jwarc.tools.CdxTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.WarcServer::mementoLinks(java.util.NavigableSet, org.netpreserve.jwarc.net.Capture)",
            "org.netpreserve.jwarc.net.WarcServer::resource(java.lang.String)",
            "org.netpreserve.jwarc.HttpRequest::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel, boolean)",
            "org.netpreserve.jwarc.net.WarcServer::timemap(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.net.WarcServer::mementoLink(java.lang.StringBuilder, java.lang.String, org.netpreserve.jwarc.net.Capture, org.netpreserve.jwarc.net.Capture)",
            "org.netpreserve.jwarc.LengthedBody::createFromContentLength(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.lang.Long)",
            "org.netpreserve.jwarc.GzipChannel::write(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.InetAddresses::ipStringToBytes(java.lang.String)",
            "org.netpreserve.jwarc.LengthedBody::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.WarcDigest::base32Encode(java.lang.String, java.lang.String)",
            "org.netpreserve.jwarc.MessageParser::getErrorContext(java.nio.ByteBuffer, int, int)",
            "org.netpreserve.jwarc.URIs::percentDecode(java.lang.String)",
            "org.netpreserve.jwarc.tools.Utils::getJwarcVersion()",
            "org.netpreserve.jwarc.tools.StatsTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.DedupeTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.WarcDigest::base32Encode(byte[])",
            "org.netpreserve.jwarc.net.WarcRenderer::screenshot(java.net.URI, java.time.Instant, org.netpreserve.jwarc.WarcWriter)",
            "org.netpreserve.jwarc.net.WarcServer::replay(org.netpreserve.jwarc.net.HttpExchange, java.lang.String, java.time.Instant, boolean)",
            "org.netpreserve.jwarc.tools.WarcTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.WarcServer::<init>(java.net.ServerSocket, org.netpreserve.jwarc.net.CaptureIndex)",
            "org.netpreserve.jwarc.tools.DedupeTool::deduplicate(org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.IOUtils::connect(java.lang.String, java.lang.String, int)",
            "org.netpreserve.jwarc.WarcFilterCompiler::unary()",
            "org.netpreserve.jwarc.cdx.CdxRecord::<init>(java.lang.String, org.netpreserve.jwarc.cdx.CdxFormat)",
            "org.netpreserve.jwarc.MessageHeaders::parse(java.nio.channels.ReadableByteChannel)",
            "org.netpreserve.jwarc.LengthedBody::consume()",
            "org.netpreserve.jwarc.HttpResponse::parse(java.nio.channels.ReadableByteChannel, java.nio.channels.WritableByteChannel, boolean, boolean)",
            "org.netpreserve.jwarc.WarcReader::<init>(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.tools.ScreenshotTool::isNormalPage(org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcWriter::tryCalculatingPayloadDigest(java.nio.channels.FileChannel)",
            "org.netpreserve.jwarc.tools.SavebackTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.URIs::normalizePathSegments(java.lang.String)",
            "org.netpreserve.jwarc.net.HttpServer::listen()",
            "org.netpreserve.jwarc.tools.StatsTool::loadWarcFile(java.nio.file.Path)",
            "org.netpreserve.jwarc.tools.FilterTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.StatsTool.Table::print(java.util.function.Function)",
            "org.netpreserve.jwarc.net.WarcServer::closest(java.util.NavigableSet, java.net.URI, java.time.Instant)",
            "org.netpreserve.jwarc.InflateChannel::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.MessageParser::getErrorContext(java.lang.String, int, int)",
            "org.netpreserve.jwarc.MediaType::toString()",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::percentPlusEncode(java.lang.String)",
            "org.netpreserve.jwarc.net.WarcServer::render(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.MediaType::equals(java.lang.Object)",
            "org.netpreserve.jwarc.tools.DedupeTool::findMatchingRecord(org.netpreserve.jwarc.WarcCaptureRecord, java.lang.String)",
            "org.netpreserve.jwarc.GunzipChannel::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.tools.StatsTool::loadCdxFile(java.nio.file.Path)",
            "org.netpreserve.jwarc.net.HttpServer::upgradeToTls(java.net.Socket, java.lang.String)",
            "org.netpreserve.jwarc.WarcReader::initDefaultTypes()",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encodeFormBody(java.io.InputStream, java.lang.StringBuilder)",
            "org.netpreserve.jwarc.GunzipChannel::readTrailer()",
            "org.netpreserve.jwarc.tools.ServeTool::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.netpreserve.jwarc.WarcFilterCompiler::accessor(java.lang.String)",
            "org.netpreserve.jwarc.net.CertificateAuthority::signCertificate(javax.security.auth.x500.X500Principal, java.security.PrivateKey, javax.security.auth.x500.X500Principal, java.security.PublicKey, int, boolean)",
            "org.netpreserve.jwarc.WarcParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encode(org.netpreserve.jwarc.HttpRequest)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.netpreserve.jwarc.WarcFilterCompiler::accessor(java.lang.String)",
            "org.netpreserve.jwarc.net.CertificateAuthority::signCertificate(javax.security.auth.x500.X500Principal, java.security.PrivateKey, javax.security.auth.x500.X500Principal, java.security.PublicKey, int, boolean)",
            "org.netpreserve.jwarc.WarcParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encode(org.netpreserve.jwarc.HttpRequest)",
            "org.netpreserve.jwarc.GeminiParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.HttpParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.ChunkedBody::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.URIs::toNormalizedSurt(java.lang.String)",
            "org.netpreserve.jwarc.cdx.CdxFormat::format(org.netpreserve.jwarc.WarcCaptureRecord, java.lang.String, long, long, java.lang.String)",
            "org.netpreserve.jwarc.net.WarcRecorder::handle(java.net.Socket, java.lang.String, org.netpreserve.jwarc.HttpRequest)",
            "org.netpreserve.jwarc.tools.ExtractTool::writePayload(java.nio.channels.WritableByteChannel, org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcReader::consumeTrailer()",
            "org.netpreserve.jwarc.tools.ValidateTool::validate(org.netpreserve.jwarc.WarcReader)",
            "org.netpreserve.jwarc.GunzipChannel::readHeader()",
            "org.netpreserve.jwarc.WarcDigest::base32Decode(java.lang.String)",
            "org.netpreserve.jwarc.WarcFilterCompiler::comparison()",
            "org.netpreserve.jwarc.tools.ListTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.ValidateTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.CaptureIndex::<init>(java.util.List)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.netpreserve.jwarc.WarcFilterCompiler::accessor(java.lang.String)",
            "org.netpreserve.jwarc.net.CertificateAuthority::signCertificate(javax.security.auth.x500.X500Principal, java.security.PrivateKey, javax.security.auth.x500.X500Principal, java.security.PublicKey, int, boolean)",
            "org.netpreserve.jwarc.WarcParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encode(org.netpreserve.jwarc.HttpRequest)",
            "org.netpreserve.jwarc.GeminiParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.HttpParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.ChunkedBody::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.URIs::toNormalizedSurt(java.lang.String)",
            "org.netpreserve.jwarc.cdx.CdxFormat::format(org.netpreserve.jwarc.WarcCaptureRecord, java.lang.String, long, long, java.lang.String)",
            "org.netpreserve.jwarc.net.WarcRecorder::handle(java.net.Socket, java.lang.String, org.netpreserve.jwarc.HttpRequest)",
            "org.netpreserve.jwarc.tools.ExtractTool::writePayload(java.nio.channels.WritableByteChannel, org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcReader::consumeTrailer()",
            "org.netpreserve.jwarc.tools.ValidateTool::validate(org.netpreserve.jwarc.WarcReader)",
            "org.netpreserve.jwarc.GunzipChannel::readHeader()",
            "org.netpreserve.jwarc.WarcDigest::base32Decode(java.lang.String)",
            "org.netpreserve.jwarc.WarcFilterCompiler::comparison()",
            "org.netpreserve.jwarc.tools.ListTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.ValidateTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.CaptureIndex::<init>(java.util.List)",
            "org.netpreserve.jwarc.InetAddresses::textToNumericFormatV6(java.lang.String)",
            "org.netpreserve.jwarc.tools.ScreenshotTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.RecorderTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.HttpServer::interact(java.net.Socket, java.lang.String)",
            "org.netpreserve.jwarc.tools.DedupeTool::deduplicateWarcFile(java.nio.file.Path, java.nio.file.Path)",
            "org.netpreserve.jwarc.tools.ExtractTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.SavebackTool::process(java.lang.String, org.netpreserve.jwarc.WarcWriter)",
            "org.netpreserve.jwarc.tools.CdxTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.WarcServer::mementoLinks(java.util.NavigableSet, org.netpreserve.jwarc.net.Capture)",
            "org.netpreserve.jwarc.net.WarcServer::timemap(org.netpreserve.jwarc.net.HttpExchange)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.netpreserve.jwarc.WarcFilterCompiler::accessor(java.lang.String)",
            "org.netpreserve.jwarc.net.CertificateAuthority::signCertificate(javax.security.auth.x500.X500Principal, java.security.PrivateKey, javax.security.auth.x500.X500Principal, java.security.PublicKey, int, boolean)",
            "org.netpreserve.jwarc.WarcParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encode(org.netpreserve.jwarc.HttpRequest)",
            "org.netpreserve.jwarc.GeminiParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.HttpParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.ChunkedBody::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.URIs::toNormalizedSurt(java.lang.String)",
            "org.netpreserve.jwarc.cdx.CdxFormat::format(org.netpreserve.jwarc.WarcCaptureRecord, java.lang.String, long, long, java.lang.String)",
            "org.netpreserve.jwarc.net.WarcRecorder::handle(java.net.Socket, java.lang.String, org.netpreserve.jwarc.HttpRequest)",
            "org.netpreserve.jwarc.tools.ExtractTool::writePayload(java.nio.channels.WritableByteChannel, org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcReader::consumeTrailer()",
            "org.netpreserve.jwarc.tools.ValidateTool::validate(org.netpreserve.jwarc.WarcReader)",
            "org.netpreserve.jwarc.GunzipChannel::readHeader()",
            "org.netpreserve.jwarc.WarcDigest::base32Decode(java.lang.String)",
            "org.netpreserve.jwarc.WarcFilterCompiler::comparison()",
            "org.netpreserve.jwarc.tools.ListTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.ValidateTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.CaptureIndex::<init>(java.util.List)",
            "org.netpreserve.jwarc.InetAddresses::textToNumericFormatV6(java.lang.String)",
            "org.netpreserve.jwarc.tools.ScreenshotTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.RecorderTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.HttpServer::interact(java.net.Socket, java.lang.String)",
            "org.netpreserve.jwarc.tools.DedupeTool::deduplicateWarcFile(java.nio.file.Path, java.nio.file.Path)",
            "org.netpreserve.jwarc.tools.ExtractTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.SavebackTool::process(java.lang.String, org.netpreserve.jwarc.WarcWriter)",
            "org.netpreserve.jwarc.tools.CdxTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.WarcServer::mementoLinks(java.util.NavigableSet, org.netpreserve.jwarc.net.Capture)",
            "org.netpreserve.jwarc.net.WarcServer::timemap(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.GzipChannel::write(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.InetAddresses::ipStringToBytes(java.lang.String)",
            "org.netpreserve.jwarc.LengthedBody::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.tools.Utils::getJwarcVersion()",
            "org.netpreserve.jwarc.tools.StatsTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.DedupeTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.WarcServer::replay(org.netpreserve.jwarc.net.HttpExchange, java.lang.String, java.time.Instant, boolean)",
            "org.netpreserve.jwarc.tools.WarcTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.cdx.CdxRecord::<init>(java.lang.String, org.netpreserve.jwarc.cdx.CdxFormat)",
            "org.netpreserve.jwarc.MessageHeaders::parse(java.nio.channels.ReadableByteChannel)",
            "org.netpreserve.jwarc.tools.StatsTool.Table::print(java.util.function.Function)",
            "org.netpreserve.jwarc.InflateChannel::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.MessageParser::getErrorContext(java.lang.String, int, int)",
            "org.netpreserve.jwarc.net.WarcServer::render(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.GunzipChannel::read(java.nio.ByteBuffer)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.netpreserve.jwarc.tools.WarcTool::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.netpreserve.jwarc.tools.WarcTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.GunzipChannel::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.net.HttpServer::lambda.listen.1(java.net.Socket)",
            "org.netpreserve.jwarc.WarcDigest::base64()"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.netpreserve.jwarc.tools.WarcTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.HttpServer::lambda.listen.1(java.net.Socket)",
            "org.netpreserve.jwarc.net.WarcServer::replay(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.net.WarcServer::timemap(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.GunzipChannel::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.tools.DedupeTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.WarcDigest::base64()",
            "org.netpreserve.jwarc.InetAddresses::forString(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.netpreserve.jwarc.tools.WarcTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.DedupeTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.WarcServer::proxy(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.GunzipChannel::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.net.HttpServer::lambda.listen.1(java.net.Socket)",
            "org.netpreserve.jwarc.InetAddresses::forString(java.lang.String)",
            "org.netpreserve.jwarc.net.WarcServer::timemap(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.GzipChannel::write(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.InflateChannel::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.MessageParser::getErrorContext(java.lang.String, int, int)",
            "org.netpreserve.jwarc.net.WarcServer::render(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.LengthedBody.1::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.cdx.CdxFormat::parse(java.lang.String)",
            "org.netpreserve.jwarc.Warcinfo::fields()",
            "org.netpreserve.jwarc.tools.StatsTool::lambda.print.6(java.util.function.Function, org.netpreserve.jwarc.tools.StatsTool.Table)",
            "org.netpreserve.jwarc.WarcDigest::base64()"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.netpreserve.jwarc.net.CertificateAuthority::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.WarcTool::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.netpreserve.jwarc.tools.WarcTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.WarcDigest::base64()",
            "org.netpreserve.jwarc.GunzipChannel::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.net.HttpServer::lambda.listen.1(java.net.Socket)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.netpreserve.jwarc.tools.WarcTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.WarcDigest::base64()",
            "org.netpreserve.jwarc.net.WarcServer::replay(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.net.HttpServer::lambda.listen.1(java.net.Socket)",
            "org.netpreserve.jwarc.InetAddresses::forString(java.lang.String)",
            "org.netpreserve.jwarc.GunzipChannel::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.tools.DedupeTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.WarcServer::timemap(org.netpreserve.jwarc.net.HttpExchange)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.netpreserve.jwarc.tools.WarcTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.GunzipChannel::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.net.WarcServer::replay(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.tools.DedupeTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.MessageParser::getErrorContext(java.lang.String, int, int)",
            "org.netpreserve.jwarc.net.HttpServer::lambda.listen.1(java.net.Socket)",
            "org.netpreserve.jwarc.InetAddresses::forString(java.lang.String)",
            "org.netpreserve.jwarc.cdx.CdxFormat::parse(java.lang.String)",
            "org.netpreserve.jwarc.WarcDigest::base64()",
            "org.netpreserve.jwarc.InflateChannel::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.LengthedBody.1::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.GzipChannel::write(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.tools.StatsTool::lambda.print.6(java.util.function.Function, org.netpreserve.jwarc.tools.StatsTool.Table)",
            "org.netpreserve.jwarc.Warcinfo::fields()",
            "org.netpreserve.jwarc.net.WarcServer::render(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.net.WarcServer::timemap(org.netpreserve.jwarc.net.HttpExchange)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.netpreserve.jwarc.IOUtils::transfer(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, long)",
            "org.netpreserve.jwarc.WarcRevisit::http()",
            "org.netpreserve.jwarc.WarcRecord::calculatedBlockDigest()",
            "org.netpreserve.jwarc.WarcWriter::<init>(java.nio.channels.WritableByteChannel, org.netpreserve.jwarc.WarcCompression)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.netpreserve.jwarc.net.Browser::screenshot(java.net.URI)",
            "org.netpreserve.jwarc.cdx.CdxFormat::legend()",
            "org.netpreserve.jwarc.LengthedBody::consume()",
            "org.netpreserve.jwarc.WarcTargetRecord::targetURI()",
            "org.netpreserve.jwarc.tools.DedupeTool::setCdxServer(java.lang.String)",
            "org.netpreserve.jwarc.cdx.CdxFormat::<init>(java.lang.String)",
            "org.netpreserve.jwarc.WarcWriter::<init>(java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.WarcFilterLexer::error(java.lang.String)",
            "org.netpreserve.jwarc.WarcMetadata.Builder::targetURI(java.net.URI)",
            "org.netpreserve.jwarc.WarcCaptureRecord.AbstractBuilder::concurrentTo(java.net.URI)",
            "org.netpreserve.jwarc.tools.DedupeTool::determineOutputPath(java.nio.file.Path)",
            "org.netpreserve.jwarc.WarcConversion::payload()",
            "org.netpreserve.jwarc.HttpRequest::<init>(java.lang.String, java.lang.String, org.netpreserve.jwarc.MessageVersion, org.netpreserve.jwarc.MessageHeaders, org.netpreserve.jwarc.MessageBody)",
            "org.netpreserve.jwarc.cdx.CdxFormat::parse(java.lang.String)",
            "org.netpreserve.jwarc.WarcRevisit::refersToTargetURI()",
            "org.netpreserve.jwarc.WarcDigest::hexDecode(java.lang.String)",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encodeBinaryBody(java.io.InputStream, java.lang.StringBuilder)",
            "org.netpreserve.jwarc.WarcFilterLexer::stringOrNumber()",
            "org.netpreserve.jwarc.LengthedBody.Seekable::discardPushbackOnRead()",
            "org.netpreserve.jwarc.MediaType::equals(java.lang.Object)",
            "org.netpreserve.jwarc.LengthedBody::stream()",
            "org.netpreserve.jwarc.tools.StatsTool::loadCdxFile(java.nio.file.Path)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.netpreserve.jwarc.cdx.CdxRecord::target()",
            "org.netpreserve.jwarc.MediaType::toString()",
            "org.netpreserve.jwarc.WarcConversion::payload()",
            "org.netpreserve.jwarc.WarcRecord::formatId(java.net.URI)",
            "org.netpreserve.jwarc.WarcReader::construct(org.netpreserve.jwarc.MessageVersion, org.netpreserve.jwarc.MessageHeaders, org.netpreserve.jwarc.MessageBody)",
            "org.netpreserve.jwarc.tools.DedupeTool::setCdxServer(java.lang.String)",
            "org.netpreserve.jwarc.LengthedBody::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.WarcRecord::id()",
            "org.netpreserve.jwarc.URIs::tryDecodeUtf8(java.nio.ByteBuffer, java.lang.StringBuilder)",
            "org.netpreserve.jwarc.net.CertificateAuthority::derLength(int)",
            "org.netpreserve.jwarc.cdx.CdxFormat::format(org.netpreserve.jwarc.WarcCaptureRecord, java.lang.String, long, long)",
            "org.netpreserve.jwarc.HttpResponse::parseWithoutBody(java.nio.channels.ReadableByteChannel, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.IOUtils::copy(java.io.InputStream, java.io.OutputStream)",
            "org.netpreserve.jwarc.tools.StatsTool::loadWarcFile(java.nio.file.Path)",
            "org.netpreserve.jwarc.net.HttpExchange::redirect(java.lang.String)",
            "org.netpreserve.jwarc.HttpResponse::parseStrictly(java.nio.channels.ReadableByteChannel)",
            "org.netpreserve.jwarc.tools.ValidateTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.cdx.CdxRequestEncoder::encodeFormBody(java.io.InputStream, java.lang.StringBuilder)",
            "org.netpreserve.jwarc.WarcReader::<init>(java.io.InputStream)",
            "org.netpreserve.jwarc.InetAddresses::bytesToInetAddress(byte[])",
            "org.netpreserve.jwarc.WarcResponse.Builder::build()",
            "org.netpreserve.jwarc.WarcWriter::write(org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcFilterCompiler.Accessor::string(org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcFilterLexer::token()",
            "org.netpreserve.jwarc.tools.StatsTool::print(java.util.function.Function)",
            "org.netpreserve.jwarc.InetAddresses::forString(java.lang.String)",
            "org.netpreserve.jwarc.LengthedBody.Seekable::discardPushbackOnRead()",
            "org.netpreserve.jwarc.WarcDigest::base64Decode(java.lang.String)",
            "org.netpreserve.jwarc.tools.ScreenshotTool::isNormalPage(org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.MessageParser::getErrorContext(java.lang.String, int, int)",
            "org.netpreserve.jwarc.net.HttpServer::listen()",
            "org.netpreserve.jwarc.tools.SavebackTool::process(java.lang.String, org.netpreserve.jwarc.WarcWriter)",
            "org.netpreserve.jwarc.WarcDigest::equals(java.lang.Object)",
            "org.netpreserve.jwarc.tools.StatsTool.Table::print(java.util.function.Function)",
            "org.netpreserve.jwarc.net.WarcServer::replay(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.GeminiParser::push(byte)",
            "org.netpreserve.jwarc.WarcTargetRecord.Builder::identifiedPayloadType(java.lang.String)",
            "org.netpreserve.jwarc.WarcFilter::test(org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.GunzipChannel::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.WarcRevisit::refersToDate()",
            "org.netpreserve.jwarc.HttpParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.WarcResponse::http()",
            "org.netpreserve.jwarc.net.CertificateAuthority::tag(int, byte[])",
            "org.netpreserve.jwarc.MessageHeaders::appendTo(java.lang.Appendable)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.netpreserve.jwarc.tools.FilterTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.WarcMetadata.Builder::build()",
            "org.netpreserve.jwarc.MessageHeaders::<init>(java.util.Map)",
            "org.netpreserve.jwarc.cdx.CdxRecord::filename()",
            "org.netpreserve.jwarc.WarcParser::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.WarcResource.Builder::<init>(java.net.URI)",
            "org.netpreserve.jwarc.WarcFilter::<init>(java.lang.String, java.util.function.Predicate)",
            "org.netpreserve.jwarc.ChunkedBody::parse()",
            "org.netpreserve.jwarc.net.Browser::<init>(java.lang.String, java.net.InetSocketAddress, java.lang.String)",
            "org.netpreserve.jwarc.Warcinfo::fields()",
            "org.netpreserve.jwarc.WarcFilterLexer::operator()",
            "org.netpreserve.jwarc.cdx.CdxRecord::contentType()",
            "org.netpreserve.jwarc.net.WarcServer::mementoLink(java.lang.StringBuilder, java.lang.String, org.netpreserve.jwarc.net.Capture, org.netpreserve.jwarc.net.Capture)",
            "org.netpreserve.jwarc.MediaType::hashCode()",
            "org.netpreserve.jwarc.cdx.CdxRecord::redirect()",
            "org.netpreserve.jwarc.tools.ExtractTool::writeHttpHeaders(java.nio.channels.WritableByteChannel, org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.WarcFilterCompiler::unary()",
            "org.netpreserve.jwarc.net.WarcServer::closest(java.util.NavigableSet, java.net.URI, java.time.Instant)",
            "org.netpreserve.jwarc.URIs::normalizePercentEncoding(java.lang.String)",
            "org.netpreserve.jwarc.GunzipChannel::readAtLeast(int)",
            "org.netpreserve.jwarc.tools.ExtractTool::usage(int)",
            "org.netpreserve.jwarc.LengthedBody::discardPushbackOnRead()",
            "org.netpreserve.jwarc.GzipChannel::checkStatus(boolean)",
            "org.netpreserve.jwarc.tools.StatsTool.Row::<init>(java.lang.String)",
            "org.netpreserve.jwarc.GzipChannel::<init>(java.nio.channels.WritableByteChannel, java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.MessageVersion::<init>(java.lang.String, int, int)",
            "org.netpreserve.jwarc.WarcDigest::<init>(java.lang.String, byte[])",
            "org.netpreserve.jwarc.Message.AbstractBuilder::<init>(org.netpreserve.jwarc.MessageVersion)",
            "org.netpreserve.jwarc.tools.DedupeTool::setCdxServer(java.lang.String)",
            "org.netpreserve.jwarc.WarcConversion::refersTo()",
            "org.netpreserve.jwarc.net.Browser::devNull()",
            "org.netpreserve.jwarc.tools.FetchTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.WarcRevisit.Builder::<init>(java.net.URI)",
            "org.netpreserve.jwarc.LengthedBody.Seekable::write(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.WarcResource.Builder::build()",
            "org.netpreserve.jwarc.tools.DedupeTool::setMinimumSize(long)",
            "org.netpreserve.jwarc.WarcFilterLexer::token()",
            "org.netpreserve.jwarc.URIs::normalizePathSegments(java.lang.String)",
            "org.netpreserve.jwarc.net.HttpExchange::param(int)",
            "org.netpreserve.jwarc.WarcRevisit.Builder::refersTo(java.net.URI)",
            "org.netpreserve.jwarc.WarcCaptureRecord.AbstractBuilder::<init>(java.lang.String)",
            "org.netpreserve.jwarc.GeminiParser::reset()",
            "org.netpreserve.jwarc.WarcParser::<init>(int)",
            "org.netpreserve.jwarc.tools.WarcTool::usage()",
            "org.netpreserve.jwarc.net.CaptureIndex::add(org.netpreserve.jwarc.net.Capture)",
            "org.netpreserve.jwarc.HttpRequest::parse(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.WarcRevisit.Builder::refersTo(java.net.URI, java.lang.String, java.time.Instant)",
            "org.netpreserve.jwarc.WarcMetadata.Builder::fields(java.util.Map)",
            "org.netpreserve.jwarc.Message.AbstractBuilder::body(org.netpreserve.jwarc.MediaType, java.nio.channels.ReadableByteChannel, long)",
            "org.netpreserve.jwarc.MessageVersion::toString()",
            "org.netpreserve.jwarc.tools.WarcTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.net.CertificateAuthority::main(java.lang.String[])",
            "org.netpreserve.jwarc.WarcDigest::<init>(java.lang.String)",
            "org.netpreserve.jwarc.Message.AbstractBuilder::addHeader(java.lang.String, java.lang.String)",
            "org.netpreserve.jwarc.MessageHeaders::sole(java.lang.String)",
            "org.netpreserve.jwarc.Message.AbstractBuilder::body(org.netpreserve.jwarc.MediaType, byte[])",
            "org.netpreserve.jwarc.WarcRecord::<init>(org.netpreserve.jwarc.MessageVersion, org.netpreserve.jwarc.MessageHeaders, org.netpreserve.jwarc.MessageBody)",
            "org.netpreserve.jwarc.MessageVersion::requireProtocol(java.lang.String)",
            "org.netpreserve.jwarc.net.HttpServer::listen()",
            "org.netpreserve.jwarc.net.Browser::screenshot(java.net.URI, java.nio.file.Path)",
            "org.netpreserve.jwarc.GzipChannel::write(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.HttpParser::push(byte)",
            "org.netpreserve.jwarc.WarcFilterLexer::string()",
            "org.netpreserve.jwarc.tools.ListTool::main(java.lang.String[])",
            "org.netpreserve.jwarc.tools.SavebackTool::run(java.util.List, org.netpreserve.jwarc.WarcWriter)",
            "org.netpreserve.jwarc.WarcRecord::formatId(java.net.URI)",
            "org.netpreserve.jwarc.WarcRecord.AbstractBuilder::recordId(java.net.URI)",
            "org.netpreserve.jwarc.IOUtils::transfer(java.nio.ByteBuffer, java.nio.ByteBuffer, long)",
            "org.netpreserve.jwarc.tools.SavebackTool::getOriginalUrl(java.lang.String)",
            "org.netpreserve.jwarc.ChunkedBody::read(java.nio.ByteBuffer)",
            "org.netpreserve.jwarc.net.WarcServer::timemap(org.netpreserve.jwarc.net.HttpExchange)",
            "org.netpreserve.jwarc.WarcRecord::date()",
            "org.netpreserve.jwarc.WarcFilter::test(org.netpreserve.jwarc.WarcRecord)",
            "org.netpreserve.jwarc.URIs::parseLeniently(java.lang.String)",
            "org.netpreserve.jwarc.WarcRecord.AbstractBuilder::recordId(java.util.UUID)",
            "org.netpreserve.jwarc.WarcResponse::gemini()",
            "org.netpreserve.jwarc.tools.ValidateTool::usage(int)",
            "org.netpreserve.jwarc.URIs::tryDecodeUtf8(java.nio.ByteBuffer, java.lang.StringBuilder)",
            "org.netpreserve.jwarc.tools.StatsTool::print(java.util.function.Function)",
            "org.netpreserve.jwarc.WarcDigest::base64()",
            "org.netpreserve.jwarc.WarcRevisit::refersToDate()",
            "org.netpreserve.jwarc.WarcTargetRecord.Builder::payloadDigest(java.lang.String, java.lang.String)",
            "org.netpreserve.jwarc.InetAddresses::forString(java.lang.String)",
            "org.netpreserve.jwarc.net.CertificateAuthority::tag(int, byte[])",
            "org.netpreserve.jwarc.cdx.CdxRecord::target()",
            "org.netpreserve.jwarc.HttpResponse::parseWithoutBody(java.nio.channels.ReadableByteChannel, java.nio.channels.WritableByteChannel)",
            "org.netpreserve.jwarc.WarcMetadata::<init>(org.netpreserve.jwarc.MessageVersion, org.netpreserve.jwarc.MessageHeaders, org.netpreserve.jwarc.MessageBody)",
            "org.netpreserve.jwarc.LengthedBody.Seekable::truncate(long)",
            "org.netpreserve.jwarc.cdx.CdxRecord::status()"
        ]
    }
]