[
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.01,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.05,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::<init>()",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::characters(char[], int, int)",
            "crawlercommons.filters.basic.BasicURLNormalizer::unescapePath(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::tokenize(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowed(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapTester::parse(java.net.URL, java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::detect(byte[], int)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleSitemap(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.1,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::<init>()",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::characters(char[], int, int)",
            "crawlercommons.filters.basic.BasicURLNormalizer::unescapePath(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::tokenize(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowed(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapTester::parse(java.net.URL, java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::detect(byte[], int)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleSitemap(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.filters.basic.BasicURLNormalizer::parseQueryParameters(java.lang.String, int, java.util.Set)",
            "crawlercommons.sitemaps.sax.XMLHandler::maybeAddSiteMapUrl()",
            "crawlercommons.sitemaps.SiteMapParser::processXml(java.net.URL, org.xml.sax.InputSource)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleUserAgent(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.filters.basic.BasicURLNormalizer::filter(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::ruleMatches(java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.SiteMapParser::parseSiteMap(java.lang.String, byte[], java.net.URL)",
            "crawlercommons.robots.SimpleRobotRulesParser::parseContent(java.lang.String, byte[], java.lang.String, java.util.Collection, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.SiteMapParser::parseSiteMap(byte[], java.net.URL)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::<init>(java.lang.String, boolean)",
            "crawlercommons.robots.BaseRobotRules::toString()"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.2,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::<init>()",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::characters(char[], int, int)",
            "crawlercommons.filters.basic.BasicURLNormalizer::unescapePath(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::tokenize(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowed(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapTester::parse(java.net.URL, java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::detect(byte[], int)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleSitemap(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.filters.basic.BasicURLNormalizer::parseQueryParameters(java.lang.String, int, java.util.Set)",
            "crawlercommons.sitemaps.sax.XMLHandler::maybeAddSiteMapUrl()",
            "crawlercommons.sitemaps.SiteMapParser::processXml(java.net.URL, org.xml.sax.InputSource)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleUserAgent(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.filters.basic.BasicURLNormalizer::filter(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::ruleMatches(java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.SiteMapParser::parseSiteMap(java.lang.String, byte[], java.net.URL)",
            "crawlercommons.robots.SimpleRobotRulesParser::parseContent(java.lang.String, byte[], java.lang.String, java.util.Collection, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.SiteMapParser::parseSiteMap(byte[], java.net.URL)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::<init>(java.lang.String, boolean)",
            "crawlercommons.robots.BaseRobotRules::toString()",
            "crawlercommons.domains.SuffixTrie::getLongestSuffix(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.extension.LinksHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.DelegatorHandler::startRootElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.SiteMapParser::processText(java.net.URL, java.io.InputStream)",
            "crawlercommons.domains.EffectiveTldFinder::<init>()",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::getNameVariants()",
            "crawlercommons.sitemaps.extension.VideoAttributes::equals(java.lang.Object)",
            "crawlercommons.domains.EffectiveTldFinder::initialize(java.io.InputStream)",
            "crawlercommons.sitemaps.sax.extension.ExtensionHandler::getYesNoBooleanValue(java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.AtomHandler::maybeAddSiteMapUrl()",
            "crawlercommons.mimetypes.MimeTypeDetector::patternMatches(byte[], byte[], int, int)",
            "crawlercommons.sitemaps.sax.RSSHandler::setLocURL()",
            "crawlercommons.filters.basic.BasicURLNormalizer::formatQueryParameters(java.util.List)",
            "crawlercommons.sitemaps.extension.VideoAttributes.VideoPrice::equals(java.lang.Object)",
            "crawlercommons.domains.SuffixTrie::getSuffixes(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.robots.SimpleRobotRules::toString()",
            "crawlercommons.sitemaps.extension.NewsAttributes::toString()",
            "crawlercommons.sitemaps.extension.NewsAttributes::asMap()",
            "crawlercommons.sitemaps.SiteMapURL::setChangeFrequency(java.lang.String)",
            "crawlercommons.filters.basic.BasicURLNormalizer::escapePath(java.lang.String)",
            "crawlercommons.sitemaps.sax.AtomHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.AbstractSiteMap::convertToZonedDateTime(java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::main(java.lang.String[])",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::toString()",
            "crawlercommons.sitemaps.extension.VideoAttributes::toString()",
            "crawlercommons.domains.PaidLevelDomain::getPLD(java.lang.String)",
            "crawlercommons.domains.SuffixTrie::put(java.lang.String, java.lang.Object)",
            "crawlercommons.sitemaps.sax.XMLHandler::getExtensionHandler(java.lang.String)",
            "crawlercommons.sitemaps.SiteMapURL::equals(java.lang.Object)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::<init>()",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::characters(char[], int, int)",
            "crawlercommons.robots.SimpleRobotRulesParser::tokenize(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowed(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapTester::parse(java.net.URL, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleSitemap(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::<init>()",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::characters(char[], int, int)",
            "crawlercommons.robots.SimpleRobotRulesParser::tokenize(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowed(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapTester::parse(java.net.URL, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleSitemap(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLHandler::maybeAddSiteMapUrl()",
            "crawlercommons.robots.SimpleRobotRulesParser::handleUserAgent(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.filters.basic.BasicURLNormalizer::filter(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::parseContent(java.lang.String, byte[], java.lang.String, java.util.Collection, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.robots.BaseRobotRules::toString()"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(crawlercommons.robots.SimpleRobotRules.RobotRule)",
            "crawlercommons.robots.BaseRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::normalizeUrlFile(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::<init>()",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::characters(char[], int, int)",
            "crawlercommons.robots.SimpleRobotRulesParser::tokenize(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowed(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapTester::parse(java.net.URL, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleSitemap(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLHandler::maybeAddSiteMapUrl()",
            "crawlercommons.robots.SimpleRobotRulesParser::handleUserAgent(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.filters.basic.BasicURLNormalizer::filter(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::parseContent(java.lang.String, byte[], java.lang.String, java.util.Collection, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.robots.BaseRobotRules::toString()",
            "crawlercommons.domains.SuffixTrie::getLongestSuffix(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.extension.LinksHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.XMLHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.DelegatorHandler::startRootElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.extension.VideoAttributes::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.extension.ExtensionHandler::getYesNoBooleanValue(java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.RSSHandler::setLocURL()",
            "crawlercommons.sitemaps.extension.VideoAttributes.VideoPrice::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.extension.NewsAttributes::toString()",
            "crawlercommons.sitemaps.extension.NewsAttributes::asMap()",
            "crawlercommons.sitemaps.sax.AtomHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.AbstractSiteMap::convertToZonedDateTime(java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::main(java.lang.String[])",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::toString()",
            "crawlercommons.sitemaps.extension.VideoAttributes::toString()",
            "crawlercommons.domains.PaidLevelDomain::getPLD(java.lang.String)",
            "crawlercommons.sitemaps.SiteMapURL::equals(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.domains.EffectiveTldFinder::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.domains.EffectiveTldFinder::main(java.lang.String[])",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.domains.EffectiveTldFinder::main(java.lang.String[])",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.SuffixTrie::getLongestSuffix(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.LinksHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.extension.VideoAttributes::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.extension.ExtensionHandler::getYesNoBooleanValue(java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::equals(java.lang.Object)",
            "crawlercommons.sitemaps.extension.VideoAttributes.VideoPrice::equals(java.lang.Object)",
            "crawlercommons.sitemaps.extension.NewsAttributes::toString()",
            "crawlercommons.sitemaps.extension.NewsAttributes::asMap()",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::toString()",
            "crawlercommons.sitemaps.extension.VideoAttributes::toString()",
            "crawlercommons.sitemaps.SiteMapURL::equals(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.sitemaps.AbstractSiteMap::convertToDate(java.lang.String)",
            "crawlercommons.domains.PaidLevelDomain::getPLD(java.net.URL)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.SiteMapParser::<init>(boolean)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "crawlercommons.domains.PaidLevelDomain::getPLD(java.net.URL)",
            "crawlercommons.robots.SimpleRobotRules::equals(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.extension.VideoAttributes.VideoPrice::equals(java.lang.Object)",
            "crawlercommons.filters.basic.BasicURLNormalizer::main(java.lang.String[])",
            "crawlercommons.sitemaps.SiteMapTester::main(java.lang.String[])",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::equals(java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRules.RobotRule::compareTo(java.lang.Object)",
            "crawlercommons.sitemaps.extension.VideoAttributes::equals(java.lang.Object)",
            "crawlercommons.sitemaps.SiteMapURL::equals(java.lang.Object)",
            "crawlercommons.sitemaps.sax.extension.ExtensionHandler::getYesNoBooleanValue(java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::toString()",
            "crawlercommons.sitemaps.extension.VideoAttributes::toString()",
            "crawlercommons.domains.SuffixTrie::getLongestSuffix(java.lang.String)",
            "crawlercommons.sitemaps.extension.NewsAttributes::asMap()",
            "crawlercommons.sitemaps.extension.NewsAttributes::toString()",
            "crawlercommons.domains.EffectiveTldFinder::main(java.lang.String[])",
            "crawlercommons.sitemaps.extension.VideoAttributes::asMap()",
            "crawlercommons.sitemaps.sax.extension.LinksHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.AbstractSiteMap::convertToDate(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.01,
        "entryPoints": [
            "crawlercommons.filters.basic.BasicURLNormalizer::isNameEnd(char)",
            "crawlercommons.sitemaps.sax.AtomHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.sax.DelegatorHandler::setURLFilter(java.util.function.Function)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.05,
        "entryPoints": [
            "crawlercommons.domains.SuffixTrie::getSuffixes(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.NewsHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.domains.SuffixTrie::getLongestSuffix(java.lang.String)",
            "crawlercommons.sitemaps.sax.DelegatorHandler::fatalError(org.xml.sax.SAXParseException)",
            "crawlercommons.sitemaps.extension.VideoAttributes::setViewCount(java.lang.Integer)",
            "crawlercommons.sitemaps.SiteMap::toString()",
            "crawlercommons.sitemaps.extension.VideoAttributes.VideoPrice::setPrice(java.lang.Float)",
            "crawlercommons.robots.BaseRobotRules::setDeferVisits(boolean)",
            "crawlercommons.robots.SimpleRobotRules::<init>(crawlercommons.robots.SimpleRobotRules.RobotRulesMode)",
            "crawlercommons.sitemaps.SiteMapURL::setLastModified(java.time.ZonedDateTime)",
            "crawlercommons.sitemaps.SiteMapParser::processGzippedXML(java.net.URL, byte[])",
            "crawlercommons.robots.SimpleRobotRulesParser::normalizePathDirective(java.lang.String)",
            "crawlercommons.sitemaps.SiteMapURL::setPriority(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLHandler::getExtensionHandler(java.lang.String)",
            "crawlercommons.sitemaps.sax.AtomHandler::<init>(java.net.URL, java.util.LinkedList, boolean)",
            "crawlercommons.filters.basic.BasicURLNormalizer::isHexCharacter(int)",
            "crawlercommons.sitemaps.sax.DelegatorHandler::setAcceptedNamespaces(java.util.Set)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.1,
        "entryPoints": [
            "crawlercommons.robots.SimpleRobotRulesParser::handleDisallow(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.robots.BaseRobotRules::hashCode()",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::characters(char[], int, int)",
            "crawlercommons.domains.SuffixTrie::put(java.lang.String, java.lang.Object)",
            "crawlercommons.mimetypes.MimeTypeDetector::detect(byte[])",
            "crawlercommons.mimetypes.MimeTypeDetector::detect(java.io.InputStream)",
            "crawlercommons.sitemaps.AbstractSiteMap::convertToZonedDateTime(java.lang.String)",
            "crawlercommons.filters.basic.BasicURLNormalizer::filter(java.lang.String)",
            "crawlercommons.sitemaps.extension.ExtensionMetadata::urlEquals(java.net.URL, java.net.URL)",
            "crawlercommons.sitemaps.AbstractSiteMap::parseRSSTimestamp(java.lang.String)",
            "crawlercommons.robots.SimpleRobotRulesParser::setMaxCrawlDelay(long)",
            "crawlercommons.sitemaps.SiteMapParser::parseSiteMap(java.net.URL)",
            "crawlercommons.sitemaps.AbstractSiteMap::setLastModified(java.util.Date)",
            "crawlercommons.sitemaps.SiteMapParser::addAcceptedNamespace(java.lang.String[])",
            "crawlercommons.sitemaps.AbstractSiteMap::convertToDate(java.lang.String)",
            "crawlercommons.sitemaps.sax.XMLIndexHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::hashCode()",
            "crawlercommons.sitemaps.extension.VideoAttributes::setFamilyFriendly(java.lang.Boolean)",
            "crawlercommons.mimetypes.MimeTypeDetector::detect(byte[], int)",
            "crawlercommons.mimetypes.MimeTypeDetector.MimeTypeEntry::<init>(java.lang.String, java.lang.String, boolean)",
            "crawlercommons.utils.Strings::isBlank(java.lang.String)",
            "crawlercommons.sitemaps.SiteMapURL::<init>(java.lang.String, boolean)",
            "crawlercommons.sitemaps.SiteMapParser::walkSiteMap(java.net.URL, java.util.function.Consumer)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleCrawlDelay(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.filters.basic.BasicURLNormalizer::escapePath(java.lang.String)",
            "crawlercommons.sitemaps.extension.VideoAttributes::setRating(java.lang.Float)",
            "crawlercommons.sitemaps.sax.DelegatorHandler::<init>(java.util.LinkedList, boolean)",
            "crawlercommons.filters.basic.BasicURLNormalizer::getFileWithNormalizedPath(java.net.URL)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::getAttributes()",
            "crawlercommons.sitemaps.SiteMapURL::addAttributesForExtension(crawlercommons.sitemaps.extension.Extension, crawlercommons.sitemaps.extension.ExtensionMetadata[])",
            "crawlercommons.sitemaps.sax.DelegatorHandler::stripAllBlank(java.lang.CharSequence)",
            "crawlercommons.sitemaps.sax.extension.ExtensionHandler::getYesNoBooleanValue(java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.extension.VideoAttributes.VideoPrice::<init>(java.lang.String, java.lang.Float, crawlercommons.sitemaps.extension.VideoAttributes.VideoPriceType, crawlercommons.sitemaps.extension.VideoAttributes.VideoPriceResolution)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.2,
        "entryPoints": [
            "crawlercommons.mimetypes.MimeTypeDetector.MimeTypeEntry::<init>(java.lang.String, java.lang.String)",
            "crawlercommons.robots.SimpleRobotRules::isAllowAll()",
            "crawlercommons.sitemaps.sax.DelegatorHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.robots.SimpleRobotRulesParser::setExactUserAgentMatching(boolean)",
            "crawlercommons.mimetypes.MimeTypeDetector::detect(byte[])",
            "crawlercommons.sitemaps.sax.DelegatorHandler::<init>(java.util.LinkedList, boolean)",
            "crawlercommons.sitemaps.SiteMapParser::parseSiteMap(java.lang.String, byte[], java.net.URL)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::characters(char[], int, int)",
            "crawlercommons.sitemaps.sax.extension.MobileHandler::getAttributes()",
            "crawlercommons.domains.SuffixTrie::contains(java.lang.String)",
            "crawlercommons.sitemaps.extension.NewsAttributes::equals(java.lang.Object)",
            "crawlercommons.sitemaps.SiteMapURL::setChangeFrequency(crawlercommons.sitemaps.SiteMapURL.ChangeFrequency)",
            "crawlercommons.CrawlerCommons::getVersion()",
            "crawlercommons.sitemaps.SiteMap::setUrl(java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::patternMatches(byte[], byte[], int, int)",
            "crawlercommons.filters.basic.BasicURLNormalizer::parseStringToURL(java.lang.String)",
            "crawlercommons.filters.basic.BasicURLNormalizer::<init>(crawlercommons.filters.basic.BasicURLNormalizer.Builder)",
            "crawlercommons.domains.EffectiveTldFinder.EffectiveTLD::<init>(java.lang.String, boolean)",
            "crawlercommons.sitemaps.sax.DelegatorHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.extension.VideoAttributes::setContentLoc(java.net.URL)",
            "crawlercommons.sitemaps.sax.DelegatorHandler::isAcceptedNamespace(java.lang.String)",
            "crawlercommons.sitemaps.sax.RSSHandler::maybeAddSiteMapUrl()",
            "crawlercommons.sitemaps.SiteMapURL::setLastModified(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ExtensionHandler::getYesNoBooleanValue(java.lang.String, java.lang.String)",
            "crawlercommons.mimetypes.MimeTypeDetector::isXml(java.lang.String)",
            "crawlercommons.sitemaps.SiteMapURL::setLastModified(java.util.Date)",
            "crawlercommons.sitemaps.SiteMapURL::setValid(boolean)",
            "crawlercommons.robots.SimpleRobotRules::addRule(java.lang.String, boolean)",
            "crawlercommons.sitemaps.sax.AtomHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.domains.EffectiveTldFinder::getEffectiveTLD(java.lang.String, boolean)",
            "crawlercommons.mimetypes.MimeTypeDetector::isGzip(java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getAssignedDomain(java.lang.String, boolean, boolean)",
            "crawlercommons.domains.SuffixTrie::put(java.lang.String, java.lang.Object)",
            "crawlercommons.robots.SimpleRobotRulesParser::main(java.lang.String[])",
            "crawlercommons.sitemaps.extension.NewsAttributes::isValid()",
            "crawlercommons.sitemaps.sax.DelegatorHandler::setStrictNamespace(boolean)",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::getAttributes()",
            "crawlercommons.sitemaps.sax.extension.VideoHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.extension.LinkAttributes::toString()",
            "crawlercommons.robots.SimpleRobotRulesParser::setMaxCrawlDelay(long)",
            "crawlercommons.sitemaps.SiteMap::toString()",
            "crawlercommons.sitemaps.extension.VideoAttributes::setGalleryTitle(java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::main(java.lang.String[])",
            "crawlercommons.sitemaps.sax.RSSHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)",
            "crawlercommons.filters.basic.BasicURLNormalizer::isAscii(java.lang.String)",
            "crawlercommons.sitemaps.sax.AtomHandler::characters(char[], int, int)",
            "crawlercommons.robots.SimpleRobotRulesParser::splitRobotNames(java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::initialize(java.io.InputStream)",
            "crawlercommons.sitemaps.SiteMapParser::<init>(boolean)",
            "crawlercommons.sitemaps.extension.VideoAttributes::toString()",
            "crawlercommons.sitemaps.extension.VideoAttributes::setRating(java.lang.Float)",
            "crawlercommons.filters.basic.BasicURLNormalizer::isNameEnd(char)",
            "crawlercommons.sitemaps.sax.XMLHandler::getExtensionHandler(java.lang.String)",
            "crawlercommons.sitemaps.sax.extension.ImageHandler::endElement(java.lang.String, java.lang.String, java.lang.String)",
            "crawlercommons.domains.EffectiveTldFinder::getEffectiveTLD(java.lang.String)",
            "crawlercommons.sitemaps.AbstractSiteMap::setProcessed(boolean)",
            "crawlercommons.sitemaps.SiteMapURL::setLastModified(java.time.ZonedDateTime)",
            "crawlercommons.sitemaps.SiteMapURL::<init>(java.net.URL, java.util.Date, crawlercommons.sitemaps.SiteMapURL.ChangeFrequency, double, boolean)",
            "crawlercommons.mimetypes.MimeTypeDetector::isText(java.lang.String)",
            "crawlercommons.sitemaps.extension.VideoAttributes::setFamilyFriendly(java.lang.Boolean)",
            "crawlercommons.robots.SimpleRobotRulesParser::handleUserAgent(crawlercommons.robots.SimpleRobotRulesParser.ParseState, crawlercommons.robots.SimpleRobotRulesParser.RobotToken)",
            "crawlercommons.sitemaps.SiteMapURL::<init>(java.net.URL, boolean)",
            "crawlercommons.robots.SimpleRobotRulesParser.ParseState::setFinishedAgentFields(boolean)",
            "crawlercommons.filters.basic.BasicURLNormalizer.NameValuePair::<init>(java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.extension.VideoAttributes::setCategory(java.lang.String)",
            "crawlercommons.sitemaps.SiteMap::<init>(java.lang.String, java.lang.String)",
            "crawlercommons.sitemaps.extension.LinkAttributes::<init>(java.net.URL)"
        ]
    }
]