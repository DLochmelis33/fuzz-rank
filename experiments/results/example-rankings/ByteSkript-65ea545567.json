[
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, boolean)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, boolean)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.compiler.structure.PropertyAccessGenerator::compile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.api.SyntaxAnnotationUnwrapper::generateSyntaxFrom(java.lang.Class)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleExpression(java.lang.String, mx.kenzie.foundation.Type, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.compiler.FileContext::useHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.Skript::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript.Test::test(java.nio.file.Path)",
            "org.byteskript.skript.compiler.SkriptLangSpec::getRuntime()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.type.property.EntryProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.BridgeCompiler::extractVarArguments(java.lang.Class[], java.lang.Class[], org.objectweb.asm.MethodVisitor, int)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File, java.io.File)",
            "org.byteskript.skript.runtime.Skript::getOperatorFunction(org.byteskript.skript.runtime.type.OperatorFunction.Type, java.lang.Class, java.lang.Class)",
            "org.byteskript.skript.runtime.Skript::compileLoadScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Script::<init>(boolean, org.byteskript.skript.runtime.Skript, java.io.File, java.lang.Class[])",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::compile()",
            "org.byteskript.skript.compiler.SkriptLangSpec::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.compiler.ElementTree::preCompile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::compile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::toString(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.Pattern::handle(java.lang.String)",
            "org.byteskript.skript.lang.syntax.type.MemberType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunAsync::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.Script::load(org.byteskript.skript.runtime.Skript)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, boolean)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.compiler.structure.PropertyAccessGenerator::compile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.api.SyntaxAnnotationUnwrapper::generateSyntaxFrom(java.lang.Class)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleExpression(java.lang.String, mx.kenzie.foundation.Type, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.compiler.FileContext::useHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.Skript::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript.Test::test(java.nio.file.Path)",
            "org.byteskript.skript.compiler.SkriptLangSpec::getRuntime()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.type.property.EntryProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.BridgeCompiler::extractVarArguments(java.lang.Class[], java.lang.Class[], org.objectweb.asm.MethodVisitor, int)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File, java.io.File)",
            "org.byteskript.skript.runtime.Skript::getOperatorFunction(org.byteskript.skript.runtime.type.OperatorFunction.Type, java.lang.Class, java.lang.Class)",
            "org.byteskript.skript.runtime.Skript::compileLoadScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Script::<init>(boolean, org.byteskript.skript.runtime.Skript, java.io.File, java.lang.Class[])",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::compile()",
            "org.byteskript.skript.compiler.SkriptLangSpec::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.compiler.ElementTree::preCompile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::compile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::toString(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.Pattern::handle(java.lang.String)",
            "org.byteskript.skript.lang.syntax.type.MemberType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunAsync::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.Script::load(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseLine(java.lang.String, org.byteskript.skript.compiler.FileContext)",
            "org.byteskript.skript.runtime.Skript::getClassName(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.runtime.config.ConfigEntry::write(java.io.OutputStream)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::getParams(java.lang.String)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::getParams(java.lang.String)",
            "org.byteskript.skript.runtime.Skript::findAnyClass(java.lang.String)",
            "org.byteskript.skript.runtime.internal.EventHandler::run(org.byteskript.skript.runtime.Skript, org.byteskript.skript.api.Event)",
            "org.byteskript.skript.api.automatic.GeneratedEntrySection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.runtime.internal.EventHandler::run(org.byteskript.skript.runtime.Skript, org.byteskript.skript.api.Event, org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopInSection::compileTogether(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.LoopTree, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.dictionary.EffectUseLibrary::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.compiler.Pattern::convert(org.byteskript.skript.compiler.Context, java.lang.String[])",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.io.InputStream, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.literal.StringLiteral::parse(java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::addSkriptFunctions()",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprRunnableSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprSupplierSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopTimesSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.syntax.ExtractedSection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.comparison.ExprIsOfType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::runEvent(org.byteskript.skript.api.Event, org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.runtime.Skript::getConverter(java.lang.Class, java.lang.Class)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.FileContext::getFunction(java.lang.String, int)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.comparison.ExprNotEqual::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.UnsafeAccessor::graveyard(java.lang.Object)",
            "org.byteskript.skript.app.ScriptDebugger::debug(java.io.File)",
            "org.byteskript.skript.compiler.BridgeCompiler::getWrapperType(java.lang.Class)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::createDummy(java.lang.String, int, java.util.regex.Matcher)",
            "org.byteskript.skript.lang.syntax.control.EffectDelete::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.compiler.Pattern::match(java.lang.String, org.byteskript.skript.compiler.Context, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::parameters(org.byteskript.skript.compiler.Context, java.util.regex.Matcher)",
            "org.byteskript.skript.lang.syntax.entry.EntryParameters::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntax::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.InlineController::prepareVariables(java.lang.reflect.Method)",
            "org.byteskript.skript.lang.syntax.comparison.ExprContains::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)"
        ]
    },
    {
        "strategyName": "SimpleStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, boolean)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.compiler.structure.PropertyAccessGenerator::compile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.api.SyntaxAnnotationUnwrapper::generateSyntaxFrom(java.lang.Class)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleExpression(java.lang.String, mx.kenzie.foundation.Type, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.compiler.FileContext::useHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.Skript::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript.Test::test(java.nio.file.Path)",
            "org.byteskript.skript.compiler.SkriptLangSpec::getRuntime()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.type.property.EntryProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.BridgeCompiler::extractVarArguments(java.lang.Class[], java.lang.Class[], org.objectweb.asm.MethodVisitor, int)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File, java.io.File)",
            "org.byteskript.skript.runtime.Skript::getOperatorFunction(org.byteskript.skript.runtime.type.OperatorFunction.Type, java.lang.Class, java.lang.Class)",
            "org.byteskript.skript.runtime.Skript::compileLoadScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Script::<init>(boolean, org.byteskript.skript.runtime.Skript, java.io.File, java.lang.Class[])",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::compile()",
            "org.byteskript.skript.compiler.SkriptLangSpec::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.compiler.ElementTree::preCompile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::compile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::toString(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.Pattern::handle(java.lang.String)",
            "org.byteskript.skript.lang.syntax.type.MemberType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunAsync::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.Script::load(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseLine(java.lang.String, org.byteskript.skript.compiler.FileContext)",
            "org.byteskript.skript.runtime.Skript::getClassName(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.runtime.config.ConfigEntry::write(java.io.OutputStream)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::getParams(java.lang.String)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::getParams(java.lang.String)",
            "org.byteskript.skript.runtime.Skript::findAnyClass(java.lang.String)",
            "org.byteskript.skript.runtime.internal.EventHandler::run(org.byteskript.skript.runtime.Skript, org.byteskript.skript.api.Event)",
            "org.byteskript.skript.api.automatic.GeneratedEntrySection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.runtime.internal.EventHandler::run(org.byteskript.skript.runtime.Skript, org.byteskript.skript.api.Event, org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopInSection::compileTogether(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.LoopTree, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.dictionary.EffectUseLibrary::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.compiler.Pattern::convert(org.byteskript.skript.compiler.Context, java.lang.String[])",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.io.InputStream, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.literal.StringLiteral::parse(java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::addSkriptFunctions()",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprRunnableSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprSupplierSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopTimesSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.syntax.ExtractedSection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.comparison.ExprIsOfType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::runEvent(org.byteskript.skript.api.Event, org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.runtime.Skript::getConverter(java.lang.Class, java.lang.Class)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.FileContext::getFunction(java.lang.String, int)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.comparison.ExprNotEqual::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.UnsafeAccessor::graveyard(java.lang.Object)",
            "org.byteskript.skript.app.ScriptDebugger::debug(java.io.File)",
            "org.byteskript.skript.compiler.BridgeCompiler::getWrapperType(java.lang.Class)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::createDummy(java.lang.String, int, java.util.regex.Matcher)",
            "org.byteskript.skript.lang.syntax.control.EffectDelete::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.compiler.Pattern::match(java.lang.String, org.byteskript.skript.compiler.Context, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::parameters(org.byteskript.skript.compiler.Context, java.util.regex.Matcher)",
            "org.byteskript.skript.lang.syntax.entry.EntryParameters::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntax::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.InlineController::prepareVariables(java.lang.reflect.Method)",
            "org.byteskript.skript.lang.syntax.comparison.ExprContains::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.comparison.ExprExists::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.api.syntax.EventHolder::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.timing.MemberEvery::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableAtomic::<init>()",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableGlobal::<init>()",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableThread::<init>()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.lang.syntax.type.ExprType::getType(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableAtomic::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.Skript::runEvent(org.byteskript.skript.api.Event)",
            "org.byteskript.skript.lang.syntax.type.property.EntryLocal::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.SyntaxAnnotationUnwrapper::registerValues(org.byteskript.skript.api.syntax.EventHolder)",
            "org.byteskript.skript.compiler.SkriptLangSpec::getSource(java.lang.Class)",
            "org.byteskript.skript.lang.syntax.type.MemberTemplateType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopTimesSection::compileInline(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.syntax.RelationalExpression::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::extractSimpleArguments(int, java.lang.Class[], java.lang.Class[], org.objectweb.asm.MethodVisitor)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.DebugSkriptCompiler::compileLine(java.lang.String, org.byteskript.skript.compiler.FileContext)",
            "org.byteskript.skript.runtime.config.ConfigMap::set(java.lang.String, org.byteskript.skript.runtime.config.ConfigMap, java.lang.String)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::buildDummyPattern(java.lang.String, int, java.lang.String)",
            "org.byteskript.skript.lang.syntax.function.ExprFunction::getParams(java.lang.String)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::getParams(java.lang.String)",
            "org.byteskript.skript.compiler.BridgeCompiler::instructionOffset(java.lang.Class)",
            "org.byteskript.skript.lang.syntax.entry.EntryExtends::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.EntryTemplate::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.type.property.EntryType::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.config.EffectSaveConfig::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.ExprFunction::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableGlobal::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableThread::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.error.ScriptParseError::printStackTrace(org.byteskript.skript.error.ScriptError.OutputWriter)",
            "org.byteskript.skript.lang.syntax.function.ExprFunction::buildDummyPattern(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::buildDummyPattern(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::buildDummyPattern(int, java.lang.String)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getHandle(java.lang.reflect.Method)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableAtomic::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableGlobal::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableThread::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.EntryTriggerSection::prepareVariables(org.byteskript.skript.compiler.structure.TriggerTree)",
            "org.byteskript.skript.compiler.FileContext::getType(java.lang.String)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compileLine(java.lang.String, org.byteskript.skript.compiler.FileContext)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::getClass(java.lang.String)",
            "org.byteskript.skript.api.syntax.SimpleExpression::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.Skript.RuntimeClassLoader::findClass(java.lang.String)",
            "org.byteskript.skript.lang.syntax.maths.SymbolJoiner::createVariants(java.lang.String)",
            "org.byteskript.skript.lang.syntax.event.ExprCurrentEvent::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "unsafe::mirror(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.list.ExprIndexOfList::<init>()",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.api.syntax.Effect::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.Skript.RuntimeClassLoader::loadClass(java.lang.String)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.api.syntax.EventValueExpression::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.generic.ExprTernaryOtherwise::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::unbox(org.objectweb.asm.MethodVisitor, java.lang.Class)",
            "org.byteskript.skript.lang.syntax.config.ExprConfigFileSection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.flow.conditional.ElseIfSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.SyntaxElement::prepareExpectedTypes(org.byteskript.skript.compiler.Context, java.lang.reflect.Method)",
            "org.byteskript.skript.lang.syntax.flow.conditional.IfSection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.flow.EffectAssert::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.literal.RegexLiteral::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.Context::destroySection()",
            "org.byteskript.skript.lang.syntax.comparison.ExprNotEqual::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.control.EffectDelete::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.syntax.Literal::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.literal.StringLiteral::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::addObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.BridgeCompiler::boxAtomic(org.objectweb.asm.MethodVisitor, java.lang.Class)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWithAsync::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.config.ConfigMap::add(java.lang.String, org.byteskript.skript.runtime.config.ConfigMap)",
            "org.byteskript.skript.lang.syntax.entry.EntryVerifySection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::parameterNames(org.byteskript.skript.compiler.Context, java.util.regex.Matcher)",
            "org.byteskript.skript.lang.syntax.literal.DoubleLiteral::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.literal.FloatLiteral::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.literal.IntegerLiteral::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.literal.LongLiteral::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprSupplierSection::extractVariables(org.byteskript.skript.compiler.Context, mx.kenzie.foundation.MethodBuilder, mx.kenzie.foundation.MethodBuilder)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.literal.StringLiteral::matches(java.lang.String)",
            "org.byteskript.skript.lang.syntax.entry.EntryParameters::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.EntryReturn::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntaxEffect::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntaxExpression::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntaxMode::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntaxProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.BridgeCompiler::box(org.objectweb.asm.MethodVisitor, java.lang.Class)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.ExprResult::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectWhileSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.generic.ExprSystemProperty::<init>()",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::deleteListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::createClassName(java.lang.String, java.lang.String)",
            "org.byteskript.skript.api.automatic.GeneratedEntryNode::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.comparison.ExprIsEqual::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.EntryTriggerSection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.flow.EffectReturn::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.WeakList::collectRemaining()",
            "org.byteskript.skript.runtime.Skript::compileComplexScript(java.io.InputStream, java.lang.String, java.io.File)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.config.ExprConfigFileSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.dictionary.EffectImportFunction::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.dictionary.EffectImportType::match(java.lang.String, org.byteskript.skript.compiler.Context)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "SimpleWithSkippingStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectWaitFor::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.Skript::unloadScript(org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.app.SkriptApp::getFiles(java.util.List, java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::subtract(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::equals(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class, boolean)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.runtime.config.ConfigMap::set(java.lang.String, org.byteskript.skript.runtime.config.ConfigMap, java.lang.String)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.Skript.RuntimeClassLoader::loadClass(java.lang.String)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::addObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::deleteListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::createClassName(java.lang.String, java.lang.String)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::deleteListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)"
        ]
    },
    {
        "strategyName": "MinCoverStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::deleteListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::createClassName(java.lang.String, java.lang.String)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.config.ConfigMap::deleteMapValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ScriptClassLoader::loadClass(java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::getListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.AtomicVariable::add(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)"
        ]
    },
    {
        "strategyName": "MinCoverWeightedStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.ByteSkriptApp::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.EffectUnloadScript::unloadScript(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.compiler.ElementTree::equals(java.lang.Object)",
            "org.byteskript.skript.error.ScriptAssertionError::toString()",
            "org.byteskript.skript.lang.syntax.list.EffectClearList::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::addVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::deleteListValue(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.Skript.Test::testDirectory(java.nio.file.Path)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::lt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.runtime.Skript::createClassName(java.lang.String, java.lang.String)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::run()",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasFunction(java.lang.String, int)",
            "org.byteskript.skript.runtime.Skript::loadScripts(java.io.File)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::hasHandle(java.lang.String, org.byteskript.skript.api.HandlerType)",
            "skript::newton_root(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::removeObject(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::contains(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::lambda.compileAsync.2(java.lang.String, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.config.ConfigMap::create(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::loadScript(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::unstream(java.io.InputStream)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::uncaughtException(java.lang.Thread, java.lang.Throwable)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeComments(java.lang.String)",
            "org.byteskript.skript.app.SkriptApp::registerLibraries(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::matches(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setListValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::setMapValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.runtime.internal.ScriptClassLoader::loadClass(java.lang.String)",
            "skript::abs(java.lang.Number)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.OperatorHandler::divide(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::multiply(java.lang.Object, java.lang.Object)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.01,
        "entryPoints": [
            "org.byteskript.skript.compiler.FileContext::getSuppressedBuilder()",
            "org.byteskript.skript.runtime.Skript.Test::test(java.nio.file.Path)",
            "org.byteskript.skript.lang.syntax.literal.BooleanLiteral::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.error.ScriptReassemblyError::<init>(int, java.lang.String, java.lang.Throwable)",
            "org.byteskript.skript.compiler.Context::setState(mx.kenzie.foundation.compiler.State)",
            "org.byteskript.skript.lang.syntax.dictionary.MemberDictionary::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.syntax.ExtractedSection::<init>(org.byteskript.skript.api.Library, org.byteskript.skript.api.LanguageElement, java.lang.String[])",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapDynamic(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.Class)",
            "org.byteskript.skript.runtime.internal.Metafactory::lambda(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.Class)",
            "org.byteskript.skript.runtime.internal.Promise::<init>(java.util.concurrent.CompletableFuture)",
            "org.byteskript.skript.runtime.Skript::compileScript(java.io.InputStream, java.lang.String, java.io.OutputStream)",
            "org.byteskript.skript.error.ScriptCompileError::<init>(int, java.lang.String)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.05,
        "entryPoints": [
            "org.byteskript.skript.runtime.internal.OperatorHandler::lteq(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.script.EffectLoadScript::<init>()",
            "org.byteskript.skript.lang.syntax.flow.EffectBreakLoop::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.api.SyntaxElement::addSkipInstruction(org.byteskript.skript.compiler.Context, java.util.function.Consumer)",
            "org.byteskript.skript.compiler.structure.ErrorDetails::clone()",
            "org.byteskript.skript.lang.syntax.timing.ExprSeconds::find(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionDynamic::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.Promise::await()",
            "org.byteskript.skript.compiler.structure.VerifyTree::branch(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.WeakList::addActual(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.entry.EntryVerifySection::prepareVariables(org.byteskript.skript.compiler.structure.VerifyTree)",
            "org.byteskript.skript.api.SyntaxElement::prepareExpectedTypes(org.byteskript.skript.compiler.Context, java.lang.reflect.Method)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::cancel(boolean)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectWhileSection::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.Skript::compileScript(java.io.InputStream, java.lang.String)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.internal.Member::runAsync(java.lang.Object)",
            "org.byteskript.skript.compiler.Context::getSection(int)",
            "org.byteskript.skript.compiler.BridgeCompiler::extractSimpleArguments(int, java.lang.Class[], java.lang.Class[], org.objectweb.asm.MethodVisitor)",
            "org.byteskript.skript.runtime.Skript::loadClass(java.lang.String, byte[])",
            "org.byteskript.skript.lang.syntax.literal.DoubleLiteral::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.maths.ExprDivide::<init>()",
            "org.byteskript.skript.compiler.structure.WhileTree::<init>(org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntax::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::getType(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.timing.EffectWait::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.conditional.IfSection::compileInline(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.function.MemberFunctionNoArgs::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.control.EffectAdd::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.SyntaxAnnotationUnwrapper::registerValues(org.byteskript.skript.api.syntax.EventHolder)",
            "org.byteskript.skript.lang.syntax.list.ExprSizeOfList::<init>()",
            "org.byteskript.skript.api.syntax.SimpleEntry::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.ElementTree::toString(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.BridgeCompiler::getCallSite()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::parseStatement(java.lang.String, org.byteskript.skript.compiler.FileContext, boolean)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.literal.FloatLiteral::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.config.ConfigMap::toString()",
            "org.byteskript.skript.runtime.internal.OperatorHandler::findInstance()",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapPrivateStaticFieldSetter(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.Class)",
            "org.byteskript.skript.compiler.FileContext::findTree(java.lang.Class)",
            "org.byteskript.skript.runtime.type.AtomicVariable::get(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::value(java.lang.Object)",
            "org.byteskript.skript.error.ScriptRuntimeError::<init>(java.lang.String)",
            "org.byteskript.skript.error.ScriptParseError::fillInStackTrace()",
            "org.byteskript.skript.api.automatic.GeneratedEntryNode::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.Skript::getScripts()",
            "org.byteskript.skript.api.syntax.EventValueExpression::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.FileContext::getType(java.lang.String)",
            "org.byteskript.skript.lang.syntax.comparison.ExprExists::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.timing.MemberEvery::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compileResource(java.lang.String, java.io.File, java.io.InputStream[])",
            "org.byteskript.skript.compiler.BridgeCompiler::conform(org.objectweb.asm.MethodVisitor, java.lang.Class)",
            "org.byteskript.skript.api.ModifiableLibrary::registerEvents(org.byteskript.skript.api.syntax.EventHolder[])",
            "org.byteskript.skript.runtime.internal.IOHandlers::write(java.lang.String, java.io.OutputStream)",
            "org.byteskript.skript.lang.syntax.flow.EffectReturn::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.Skript::loadScript(mx.kenzie.foundation.language.PostCompileClass)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.1,
        "entryPoints": [
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRun::run(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript::loadScript(java.io.File, java.lang.String)",
            "org.byteskript.skript.lang.syntax.literal.LongLiteral::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.syntax.SectionEntry::<init>(org.byteskript.skript.api.Library, org.byteskript.skript.api.LanguageElement, java.lang.String[])",
            "org.byteskript.skript.compiler.structure.PreVariable::skipPreset()",
            "org.byteskript.skript.compiler.structure.PreVariable::getType()",
            "org.byteskript.skript.runtime.internal.IOHandlers::write(java.lang.String, java.io.OutputStream)",
            "org.byteskript.skript.compiler.FileContext::forceUnspecVariable(org.byteskript.skript.compiler.structure.PreVariable)",
            "org.byteskript.skript.lang.syntax.entry.EntryExtends::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.compiler.structure.ErrorDetails::clone()",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableGlobal::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.app.ScriptRunner::findClasses(java.lang.String)",
            "org.byteskript.skript.runtime.Skript::compileLoad(java.io.File, java.lang.String)",
            "org.byteskript.skript.compiler.Context::getSection(int)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getBootstrap(boolean, boolean)",
            "org.byteskript.skript.runtime.threading.OperationController::<init>(org.byteskript.skript.runtime.Skript, org.byteskript.skript.runtime.threading.SkriptThreadProvider)",
            "org.byteskript.skript.lang.syntax.timing.ExprMonths::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.error.ScriptParseError::fillInStackTrace()",
            "org.byteskript.skript.lang.syntax.comparison.ExprContains::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectMonitorSection::compileTogether(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.MonitorTree)",
            "org.byteskript.skript.compiler.structure.TriggerTree::start(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.error.ScriptParseError::<init>(int, org.byteskript.skript.compiler.structure.ErrorDetails, java.lang.String, java.lang.Throwable)",
            "org.byteskript.skript.lang.syntax.timing.ExprYears::find(java.lang.Object)",
            "org.byteskript.skript.api.syntax.RelationalExpression::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.timing.MemberEvery::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.config.ConfigEntry::set(java.lang.String)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableAtomic::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.SkriptLangSpec::getSource(java.lang.Class)",
            "org.byteskript.skript.lang.syntax.control.EffectSet::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.maths.ExprSquareRoot::<init>()",
            "org.byteskript.skript.compiler.BasicInlineController::<init>(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectMonitorSection::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.IOHandlers::getInputStream(java.io.File)",
            "org.byteskript.skript.runtime.Skript::unregisterLibrary(org.byteskript.skript.api.Library)",
            "org.byteskript.skript.runtime.internal.Metafactory::findTarget(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.compiler.DebugSkriptCompiler::<init>(java.io.OutputStream, org.byteskript.skript.api.Library[])",
            "org.byteskript.skript.runtime.Skript::compileScriptAsync(java.lang.String, java.lang.String)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::compileAsync(java.io.InputStream, java.lang.String, org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.lang.syntax.literal.StringLiteral::matches(java.lang.String)",
            "unsafe::has_java_field(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapPrivateFieldGetter(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.Class)",
            "org.byteskript.skript.runtime.type.OperatorFunction::opposite()",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableAtomic::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.literal.NoneLiteral::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.type.ExprNewType::create(java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::addLibrary(org.byteskript.skript.api.Library)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::stripLine(java.lang.String, java.util.concurrent.atomic.AtomicBoolean)",
            "org.byteskript.skript.runtime.Skript::compileScript(java.io.InputStream, java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "unsafe::get_runtime()",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::parameterNames(org.byteskript.skript.compiler.Context, java.util.regex.Matcher)",
            "org.byteskript.skript.runtime.Skript::compileComplexScript(java.io.InputStream, java.lang.String, java.io.File)",
            "org.byteskript.skript.runtime.Skript::findLoader()",
            "org.byteskript.skript.runtime.threading.SkriptThreadProvider::newThread(java.lang.Runnable)",
            "org.byteskript.skript.compiler.ElementTree::hashCode()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::assembleExpression(java.lang.String, mx.kenzie.foundation.Type, org.byteskript.skript.compiler.FileContext, org.byteskript.skript.compiler.structure.ErrorDetails)",
            "org.byteskript.skript.runtime.internal.IOHandlers::create(java.lang.String)",
            "org.byteskript.skript.lang.syntax.timing.ExprSeconds::find(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapFunction(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.String)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunAsync::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.config.ExprConfigFileSection::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.error.ScriptCompileError::<init>(int, java.lang.Throwable)",
            "org.byteskript.skript.error.ScriptParseError::<init>(int, java.lang.Throwable)",
            "org.byteskript.skript.compiler.structure.VerifyTree::permit(org.byteskript.skript.api.SyntaxElement)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectMonitorSection::compileInline(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.structure.LoopTree::start(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.comparison.ExprMatches::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.config.ConfigEntry::<init>(java.lang.String, java.lang.String)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopInSection::preCompileInline(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.Skript::runScript(org.byteskript.skript.runtime.threading.ScriptRunner)",
            "org.byteskript.skript.compiler.structure.TriggerTree::close(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.flow.error.TrySection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.Skript::runEvent(org.byteskript.skript.api.Event, org.byteskript.skript.runtime.Script)",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprSupplierSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.InlineController::returnSlot()",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntaxProperty::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.Promise::get(long, java.util.concurrent.TimeUnit)",
            "org.byteskript.skript.runtime.internal.ThreadVariableMap::removeVariable(java.lang.Object, java.lang.Object)",
            "skript::ln(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.EffectBreak::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.EntryTriggerSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.api.automatic.GeneratedEntryNode::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.api.syntax.TriggerHolder::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.literal.RegexLiteral::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.FileContext::getCurrentTree()",
            "org.byteskript.skript.runtime.internal.Member::getFunction(java.lang.Object, java.lang.String)",
            "org.byteskript.skript.compiler.structure.BasicTree::close(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.structure.PreVariable::addTypeInsight(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::deleteVariable(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprRunnableSection::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.MemberFunctionNoArgs::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.ModifiableCompiler::compileAsync(java.lang.String, mx.kenzie.foundation.Type, org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.compiler.Context::addLibrary(org.byteskript.skript.api.Library)",
            "org.byteskript.skript.error.ScriptCompileError::<init>(int, java.lang.String)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWithAsync::getType(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.error.ScriptRuntimeError::<init>(java.lang.String, java.lang.Throwable, boolean, boolean)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableGlobal::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.error.ScriptParseError::<init>(int)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.runtime.Skript::getClass(java.lang.String)",
            "org.byteskript.skript.lang.syntax.flow.error.CatchSection::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.maths.ExprMultiply::<init>()",
            "org.byteskript.skript.runtime.Skript::hasCompiler()",
            "org.byteskript.skript.compiler.Context::setState(mx.kenzie.foundation.compiler.State)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectWhileSection::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.timing.ExprSeconds::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.error.ScriptLibraryError::<init>(java.lang.String, java.lang.Throwable, boolean, boolean)",
            "org.byteskript.skript.compiler.FileContext::getSuppressedBuilder()",
            "org.byteskript.skript.runtime.threading.ScriptThread::println(java.lang.Object)",
            "org.byteskript.skript.runtime.UnsafeAccessor::loadAnonymous(byte[])",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File, java.io.File)",
            "org.byteskript.skript.api.syntax.EventHolder::returnType(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.FileContext::slotOf(org.byteskript.skript.compiler.structure.PreVariable)",
            "org.byteskript.skript.lang.syntax.timing.ExprYears::<init>()",
            "org.byteskript.skript.error.ScriptReassemblyError::<init>(int, java.lang.String)"
        ]
    },
    {
        "strategyName": "RandomStrategy",
        "topK": 0.2,
        "entryPoints": [
            "org.byteskript.skript.app.SkriptApp::callLibrary(java.io.File, java.lang.String, org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.compiler.structure.VerifyTree::permit(org.byteskript.skript.api.SyntaxElement)",
            "org.byteskript.skript.runtime.internal.IOHandlers::pathOf(java.io.File)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::assertion(java.lang.Object, java.lang.Class, int)",
            "org.byteskript.skript.lang.syntax.literal.IntegerLiteral::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.api.syntax.Effect::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.app.ScriptRunner::main(java.lang.String[])",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntaxExpression::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::runOnAsyncThread(org.byteskript.skript.runtime.internal.Instruction)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::run(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.flow.error.CatchSection::compileTogether(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match, org.byteskript.skript.compiler.structure.TryCatchTree)",
            "org.byteskript.skript.runtime.internal.IOHandlers::create(java.lang.String)",
            "org.byteskript.skript.api.syntax.EventHolder::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.Skript::compileScripts(java.io.File, java.io.File)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectMonitorSection::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.type.ExprType::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.Skript::findInstance()",
            "org.byteskript.skript.lang.syntax.timing.ExprHours::find(java.lang.Object)",
            "org.byteskript.skript.compiler.structure.ErrorDetails::clone()",
            "org.byteskript.skript.lang.syntax.literal.NoneLiteral::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::buildDummyPattern(java.lang.String, int, java.lang.String)",
            "org.byteskript.skript.runtime.Skript::convert(java.lang.Object, java.lang.Class)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWith::run(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.structure.BasicTree::start(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.structure.PreVariable::load(int)",
            "org.byteskript.skript.runtime.Skript.RuntimeClassLoader::findClass(java.lang.String)",
            "org.byteskript.skript.lang.syntax.literal.DoubleLiteral::parse(java.lang.String)",
            "org.byteskript.skript.runtime.Skript::unregisterLibrary(org.byteskript.skript.api.Library)",
            "org.byteskript.skript.lang.syntax.generic.ExprTernaryOtherwise::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compile(java.io.InputStream, mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::gt(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntaxEffect::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionExternal::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.BasicInlineController::useMethod(mx.kenzie.foundation.Type, java.lang.String)",
            "org.byteskript.skript.runtime.config.ConfigEntry::equals(java.lang.Object)",
            "org.byteskript.skript.api.ModifiableLibrary::registerSyntax(mx.kenzie.foundation.compiler.State, org.byteskript.skript.api.SyntaxElement)",
            "org.byteskript.skript.lang.syntax.type.property.EntryFinal::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprSupplierSection::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "skript::reference_value(java.lang.Object)",
            "org.byteskript.skript.error.ScriptCompileError::fillInStackTrace()",
            "org.byteskript.skript.compiler.SkriptLangSpec::getRuntime()",
            "org.byteskript.skript.lang.syntax.comparison.ExprMatches::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.comparison.ExprLT::<init>()",
            "org.byteskript.skript.compiler.structure.LoopTree::close(org.byteskript.skript.compiler.Context)",
            "skript::sum(java.lang.Number[])",
            "org.byteskript.skript.runtime.Skript::compileComplexScript(java.io.InputStream, java.lang.String, java.io.File)",
            "org.byteskript.skript.lang.syntax.generic.ExprBracket::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.Context::getTriggerSection()",
            "org.byteskript.skript.runtime.type.DataMap::getSize(java.util.Map)",
            "org.byteskript.skript.runtime.Skript::setOutput(java.io.PrintStream)",
            "org.byteskript.skript.lang.syntax.type.ExprType::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionNoArgs::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.maths.SymbolJoiner::joinIndices(java.lang.String)",
            "org.byteskript.skript.lang.syntax.maths.ExprSubtract::<init>()",
            "unsafe::has_java_field(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compileLine(org.byteskript.skript.compiler.FileContext, java.lang.String)",
            "org.byteskript.skript.runtime.Skript::registerConverter(java.lang.Class, java.lang.Class, org.byteskript.skript.runtime.type.Converter)",
            "org.byteskript.skript.api.ModifiableLibrary::registerEvent(org.byteskript.skript.api.syntax.EventHolder)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopTimesSection::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.Skript::getClass(java.lang.String)",
            "org.byteskript.skript.lang.syntax.function.MemberFunctionNoArgs::callSiteName(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.literal.NoneLiteral::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.Skript::loadScript(java.io.InputStream, java.lang.String)",
            "org.byteskript.skript.lang.syntax.flow.EffectExit::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.Skript::runOnAsyncThread(org.byteskript.skript.runtime.internal.Instruction)",
            "org.byteskript.skript.lang.syntax.entry.EntryExtends::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.api.syntax.Section::preCompileInline(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.generic.ExprSystemProperty::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.compiler.structure.TriggerTree::branch(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.structure.WhileTree::<init>(org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.api.SyntaxElement::prepareExpectedTypes(org.byteskript.skript.compiler.Context, java.lang.reflect.Method)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.flow.conditional.ElseIfSection::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.control.EffectSet::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.type.property.EntryProperty::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.list.ExprNewArray::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.timing.ExprYears::find(java.lang.Object)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrap(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.Class)",
            "org.byteskript.skript.runtime.type.AtomicVariable::remove(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.api.syntax.ComplexExpression::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "unsafe::get_java_method(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptThreadPoolExecutor::<init>(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue, java.util.concurrent.ThreadFactory)",
            "org.byteskript.skript.lang.syntax.type.ExprType::getType(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.Member::findFunction(java.lang.Object, java.lang.String, java.lang.Number)",
            "org.byteskript.skript.compiler.FileContext::setHandlerMode(org.byteskript.skript.api.HandlerType)",
            "org.byteskript.skript.error.ScriptCompileError::<init>(int, java.lang.String, java.lang.Throwable, boolean, boolean)",
            "org.byteskript.skript.compiler.structure.TryCatchTree::permit(org.byteskript.skript.api.SyntaxElement)",
            "skript::cosh(double)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectWhileSection::compileInline(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.FileContext::setCompileCurrent(org.byteskript.skript.compiler.ElementTree)",
            "org.byteskript.skript.lang.syntax.function.MemberFunctionNoArgs::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "skript::copy_threadlocals_to(java.lang.Object)",
            "org.byteskript.skript.compiler.Pattern::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.Skript::loadScript(java.io.File)",
            "org.byteskript.skript.compiler.ElementTree::preCompile(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.type.MemberType::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.timing.ExprMilliseconds::find(java.lang.Object)",
            "org.byteskript.skript.api.SyntaxElement::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.BasicInlineController::<init>(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.dictionary.MemberDictionary::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.compiler.DebugSkriptCompiler::compileLine(java.lang.String, org.byteskript.skript.compiler.FileContext)",
            "org.byteskript.skript.api.automatic.GeneratedEntryNode::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.control.EffectDelete::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.timing.ExprMinutes::<init>()",
            "org.byteskript.skript.runtime.Script::forceLoad(java.lang.Class)",
            "org.byteskript.skript.lang.syntax.flow.EffectBreakLoop::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.entry.syntax.EntrySyntax::onSectionExit(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.SectionMeta)",
            "org.byteskript.skript.lang.syntax.literal.LongLiteral::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.structure.IfElseTree::setNext(org.objectweb.asm.Label)",
            "org.byteskript.skript.compiler.Context::destroySection()",
            "org.byteskript.skript.runtime.internal.IOHandlers::getOutputStream(java.io.File)",
            "org.byteskript.skript.lang.syntax.timing.EffectSleep::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.Skript::getLoadedLibraries()",
            "org.byteskript.skript.runtime.internal.IOHandlers::read(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunAsync::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::<init>()",
            "org.byteskript.skript.compiler.FileContext::addSkipInstruction(java.util.function.Consumer)",
            "org.byteskript.skript.api.syntax.SectionEntry::<init>(org.byteskript.skript.api.Library, org.byteskript.skript.api.LanguageElement, java.lang.String[])",
            "org.byteskript.skript.lang.syntax.generic.ExprNewLine::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.function.MemberFunction::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.execute.ExprResult::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.structure.SyntaxTree::branch(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.timing.MemberEvery::returnType(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.Skript::compileScript(java.io.InputStream, java.lang.String, java.io.OutputStream)",
            "org.byteskript.skript.lang.syntax.generic.ExprProperty::<init>()",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionDynamic::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.generic.ExprBracket::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.flow.error.EffectTry::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.InlineController::useMethod(mx.kenzie.foundation.Type, java.lang.String)",
            "org.byteskript.skript.lang.syntax.timing.ExprMilliseconds::<init>()",
            "org.byteskript.skript.api.syntax.Member::<init>(org.byteskript.skript.api.Library, org.byteskript.skript.api.LanguageElement, java.lang.String[])",
            "org.byteskript.skript.lang.syntax.timing.ExprMinutes::find(java.lang.Object)",
            "org.byteskript.skript.lang.syntax.test.EffectTest::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.compiler.structure.TriggerTree::start(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.api.syntax.EventValueExpression::correct(java.lang.String[])",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::getVariable(java.lang.Object)",
            "org.byteskript.skript.runtime.Skript.RuntimeClassLoader::loadClass(java.lang.String, byte[])",
            "org.byteskript.skript.lang.syntax.control.EffectRemove::preCompile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.timing.EffectWait::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.structure.TestTree::close(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.structure.TryCatchTree::start(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.Skript::compileLoad(java.io.InputStream, java.lang.String)",
            "org.byteskript.skript.runtime.internal.IOHandlers::readLine(java.io.InputStream)",
            "org.byteskript.skript.lang.syntax.dictionary.EffectUseLibrary::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.IOHandlers::nameOf(java.io.File)",
            "org.byteskript.skript.runtime.config.ConfigEntry::addComment(java.lang.String)",
            "org.byteskript.skript.lang.syntax.script.ExprCompiler::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.api.syntax.RelationalExpression::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.timing.ExprHours::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.lang.syntax.config.ExprKeyInConfig::<init>()",
            "org.byteskript.skript.lang.syntax.comparison.ExprIsArray::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "unsafe::get_threads()",
            "org.byteskript.skript.compiler.FileContext::getVariable(java.lang.String)",
            "org.byteskript.skript.error.ScriptParseError::fillInStackTrace()",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::setMapValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.runtime.type.EventData::hashCode()",
            "org.byteskript.skript.runtime.internal.GlobalVariableMap::setVariable(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.variable.ExprVariable::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.BridgeCompiler::wideIndexOffset(java.lang.Class)",
            "org.byteskript.skript.runtime.internal.Metafactory::callFunction(java.lang.String, java.lang.Object, java.lang.Object[])",
            "org.byteskript.skript.compiler.structure.TryCatchTree::<init>(org.byteskript.skript.compiler.structure.SectionMeta, org.byteskript.skript.compiler.structure.MultiLabel)",
            "org.byteskript.skript.lang.syntax.list.ExprIndexOfList::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::bootstrapPrivateFieldGetter(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.Class)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::removeLibrary(org.byteskript.skript.api.Library)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::findInstance()",
            "org.byteskript.skript.runtime.Script::hasSourceFile()",
            "org.byteskript.skript.lang.syntax.comparison.ExprNotEqual::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.maths.ExprMultiply::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopInSection::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.Context::setStoredVariableName(java.lang.String)",
            "org.byteskript.skript.lang.syntax.flow.loop.EffectLoopInSection::compileTogether(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.structure.LoopTree, org.byteskript.skript.compiler.Pattern.Match)",
            "skript::sin(double)",
            "org.byteskript.skript.runtime.internal.Promise::get()",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::get()",
            "org.byteskript.skript.error.ScriptCompileError::toString()",
            "org.byteskript.skript.lang.syntax.variable.ExprVariableAtomic::match(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.Skript::createClassName(java.lang.String, java.lang.String)",
            "org.byteskript.skript.compiler.structure.PreVariable::getType()",
            "org.byteskript.skript.runtime.Skript::getConverter(java.lang.Class, java.lang.Class)",
            "org.byteskript.skript.runtime.Skript::<init>(org.byteskript.skript.runtime.internal.ModifiableCompiler)",
            "org.byteskript.skript.api.syntax.Effect::<init>(org.byteskript.skript.api.Library, org.byteskript.skript.api.LanguageElement, java.lang.String[])",
            "org.byteskript.skript.compiler.Pattern::fakeMatcher(java.lang.String)",
            "org.byteskript.skript.runtime.internal.OperatorHandler::unboxD(java.lang.Number)",
            "org.byteskript.skript.runtime.type.EventData::all()",
            "skript::asin(double)",
            "org.byteskript.skript.runtime.threading.ScriptExceptionHandler::getScriptName(java.lang.StackTraceElement)",
            "org.byteskript.skript.lang.syntax.flow.execute.EffectRunWithAsync::getType(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.ExtractedSyntaxCalls::convert(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.compiler.structure.TestTree::start(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.runtime.internal.IOHandlers::getContents(java.io.File)",
            "org.byteskript.skript.compiler.structure.SectionMeta::<init>(org.byteskript.skript.api.syntax.Section)",
            "org.byteskript.skript.lang.syntax.config.ExprConfigFileSection::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Metafactory::createBridge(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Class, java.lang.Class[])",
            "org.byteskript.skript.api.syntax.EventHolder::callSiteName(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.runtime.internal.EventHandler::run(org.byteskript.skript.runtime.Skript, org.byteskript.skript.api.Event)",
            "org.byteskript.skript.compiler.SkriptLangSpec::<init>()",
            "org.byteskript.skript.compiler.structure.PreVariable::addTypeInsight(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.api.SyntaxElement::allowedIn(mx.kenzie.foundation.compiler.State, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.api.syntax.SimpleEntry::<init>(org.byteskript.skript.api.Library, org.byteskript.skript.api.LanguageElement, java.lang.String[])",
            "org.byteskript.skript.api.ModifiableLibrary::registerProperty(java.lang.String, org.byteskript.skript.api.HandlerType, java.lang.reflect.Method)",
            "org.byteskript.skript.app.ScriptCompiler::main(java.lang.String[])",
            "org.byteskript.skript.compiler.structure.SyntaxTree::addHandler(org.byteskript.skript.compiler.structure.SyntaxTree.Handler)",
            "org.byteskript.skript.lang.syntax.function.ExprFunctionProperty::getParams(java.lang.String)",
            "org.byteskript.skript.error.ScriptParseError::printStackTrace(java.io.PrintStream)",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compileLine(java.lang.String, org.byteskript.skript.compiler.FileContext)",
            "org.byteskript.skript.error.ScriptLoadError::<init>(java.lang.Throwable)",
            "org.byteskript.skript.runtime.Skript::loadScript(byte[])",
            "org.byteskript.skript.runtime.Skript::localInstance()",
            "org.byteskript.skript.runtime.type.OperatorFunction::union2(java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.entry.EntryVerifySection::prepareVariables(org.byteskript.skript.compiler.structure.VerifyTree)",
            "org.byteskript.skript.compiler.structure.MonitorTree::start(org.byteskript.skript.compiler.Context)",
            "skript::soft_reference(java.lang.Object)",
            "org.byteskript.skript.compiler.BridgeCompiler::createClass()",
            "unsafe::sleep(java.lang.Object)",
            "org.byteskript.skript.runtime.threading.ScriptFinishFuture::<init>(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.compiler.structure.TriggerTree::close(org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.lang.syntax.literal.StringLiteral::matches(java.lang.String)",
            "org.byteskript.skript.lang.syntax.type.MemberType::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.type.EventData::equals(java.lang.Object)",
            "org.byteskript.skript.compiler.FileContext::getSuppressedBuilder()",
            "org.byteskript.skript.runtime.config.ConfigMap::readLines(mx.kenzie.jupiter.stream.InputStreamController)",
            "org.byteskript.skript.runtime.Script::load(org.byteskript.skript.runtime.Skript)",
            "org.byteskript.skript.lang.syntax.list.ExprIndexOfList::<init>()",
            "org.byteskript.skript.compiler.SimpleSkriptCompiler::compileClass(java.io.InputStream)",
            "org.byteskript.skript.api.syntax.RelationalExpression::compile(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.error.CatchSection::compileInline(org.byteskript.skript.compiler.Context, org.byteskript.skript.compiler.Pattern.Match)",
            "org.byteskript.skript.lang.syntax.flow.lambda.ExprSupplierSection::allowAsInputFor(mx.kenzie.foundation.Type)",
            "org.byteskript.skript.runtime.internal.Bootstrapper::getClass(java.lang.String)",
            "org.byteskript.skript.lang.syntax.timing.ExprMonths::find(java.lang.Object)",
            "org.byteskript.skript.runtime.config.ConfigMap::setMapValue(java.lang.Object, java.lang.Object, java.lang.Object)",
            "org.byteskript.skript.lang.syntax.function.ExprFunction::createMatch(java.lang.String, org.byteskript.skript.compiler.Context)",
            "org.byteskript.skript.compiler.structure.MonitorTree::isOpen()"
        ]
    }
]